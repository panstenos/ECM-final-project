

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 29 13:10:25 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Version 2.35
    38                           ; Generated 05/05/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F67K40 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000000                     
    73                           	psect	idataCOMRAM
    74   000574                     __pidataCOMRAM:
    75                           	callstack 0
    76                           
    77                           ;initializer for _wait_time
    78   000574  01F4               	dw	500
    79   000000                     _T0CON0bits	set	4053
    80   000000                     _T0CON1bits	set	4054
    81   000000                     _LATEbits	set	3965
    82   000000                     _TRISEbits	set	3973
    83   000000                     _LATFbits	set	3966
    84   000000                     _LATGbits	set	3967
    85   000000                     _SSP2CON2bits	set	3802
    86   000000                     _SSP2CLKPPS	set	3612
    87   000000                     _SSP2DATPPS	set	3613
    88   000000                     _RC7PPS	set	3689
    89   000000                     _RE2PPS	set	3700
    90   000000                     _LATAbits	set	3961
    91   000000                     _LATDbits	set	3964
    92   000000                     _LATHbits	set	3968
    93   000000                     _TRISAbits	set	3969
    94   000000                     _TRISFbits	set	3974
    95   000000                     _T2PR	set	4028
    96   000000                     _T2CONbits	set	4029
    97   000000                     _TRISHbits	set	3976
    98   000000                     _TRISGbits	set	3975
    99   000000                     _CCPR2H	set	4006
   100   000000                     _CCPR1H	set	4010
   101   000000                     _TRISCbits	set	3971
   102   000000                     _TRISDbits	set	3972
   103   000000                     _LATCbits	set	3963
   104   000000                     _RE4PPS	set	3702
   105   000000                     _RG6PPS	set	3720
   106   000000                     _RD5PPS	set	3695
   107   000000                     _ANSELDbits	set	3751
   108   000000                     _SSP2ADD	set	3798
   109   000000                     _SSP2CON1bits	set	3801
   110   000000                     _CCPR4H	set	3873
   111   000000                     _CCPR3H	set	3877
   112   000000                     _TMR0L	set	4051
   113   000000                     _TMR0H	set	4052
   114   000000                     _INTCONbits	set	4082
   115   000000                     _T2CLKCONbits	set	4031
   116   000000                     _T2HLTbits	set	4030
   117   000000                     _CCP1CONbits	set	4011
   118   000000                     _CCPTMRS0bits	set	4013
   119   000000                     _CCP2CONbits	set	4007
   120   000000                     _CCP3CONbits	set	3878
   121   000000                     _CCP4CONbits	set	3874
   122   000000                     _SSP2CON2	set	3802
   123   000000                     _SSP2STAT	set	3800
   124   000000                     _ANSELFbits	set	3764
   125   000000                     _SSP2BUF	set	3797
   126   000000                     _PIE0bits	set	3625
   127   000000                     _RD6PPS	set	3696
   128   000000                     _PIE2bits	set	3627
   129   000000                     _PIR0bits	set	3635
   130                           
   131                           ; #config settings
   132                           
   133                           	psect	cinit
   134   000478                     __pcinit:
   135                           	callstack 0
   136   000478                     start_initialization:
   137                           	callstack 0
   138   000478                     __initialization:
   139                           	callstack 0
   140                           
   141                           ; Initialize objects allocated to COMRAM (2 bytes)
   142                           ; load TBLPTR registers with __pidataCOMRAM
   143   000478  0E74               	movlw	low __pidataCOMRAM
   144   00047A  6EF6               	movwf	tblptrl,c
   145   00047C  0E05               	movlw	high __pidataCOMRAM
   146   00047E  6EF7               	movwf	tblptrh,c
   147   000480  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   148   000482  6EF8               	movwf	tblptru,c
   149   000484  0009               	tblrd		*+	;fetch initializer
   150   000486  CFF5 F02E          	movff	tablat,__pdataCOMRAM
   151   00048A  0009               	tblrd		*+	;fetch initializer
   152   00048C  CFF5 F02F          	movff	tablat,__pdataCOMRAM+1
   153                           
   154                           ; Clear objects allocated to COMRAM (10 bytes)
   155   000490  EE00  F024         	lfsr	0,__pbssCOMRAM
   156   000494  0E0A               	movlw	10
   157   000496                     clear_0:
   158   000496  6AEE               	clrf	postinc0,c
   159   000498  06E8               	decf	wreg,f,c
   160   00049A  E1FD               	bnz	clear_0
   161   00049C                     end_of_initialization:
   162                           	callstack 0
   163   00049C                     __end_of__initialization:
   164                           	callstack 0
   165   00049C  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   166   00049E  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   167   0004A0  0100               	movlb	0
   168   0004A2  EFF3  F000         	goto	_main	;jump to C main() function
   169                           
   170                           	psect	bssCOMRAM
   171   000024                     __pbssCOMRAM:
   172                           	callstack 0
   173   000024                     _RGB:
   174                           	callstack 0
   175   000024                     	ds	8
   176   00002C                     _seconds:
   177                           	callstack 0
   178   00002C                     	ds	2
   179                           
   180                           	psect	dataCOMRAM
   181   00002E                     __pdataCOMRAM:
   182                           	callstack 0
   183   00002E                     _wait_time:
   184                           	callstack 0
   185   00002E                     	ds	2
   186                           
   187                           	psect	cstackCOMRAM
   188   000001                     __pcstackCOMRAM:
   189                           	callstack 0
   190   000001                     ??_I2C_2_Master_Idle:
   191   000001                     set_led_color@color:
   192                           	callstack 0
   193   000001                     initDCmotorsPWM@PWMperiod:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x0
   197   000001                     	ds	1
   198   000002                     ??_I2C_2_Master_Read:
   199   000002                     I2C_2_Master_Write@data_byte:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0x1
   203   000002                     	ds	1
   204   000003                     color_writetoaddr@value:
   205                           	callstack 0
   206   000003                     I2C_2_Master_Read@ack:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x2
   210   000003                     	ds	1
   211   000004                     color_writetoaddr@address:
   212                           	callstack 0
   213   000004                     I2C_2_Master_Read@tmp:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x3
   217   000004                     	ds	1
   218   000005                     ??_color_click_init:
   219   000005                     ?_color_read_Red:
   220                           	callstack 0
   221   000005                     ?_color_read_Blue:
   222                           	callstack 0
   223   000005                     ?_color_read_Green:
   224                           	callstack 0
   225   000005                     ?_color_read_Clear:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x4
   229   000005                     	ds	2
   230   000007                     ??_color_read_Red:
   231   000007                     ??_color_read_Blue:
   232   000007                     ??_color_read_Green:
   233   000007                     ??_color_read_Clear:
   234                           
   235                           ; 1 bytes @ 0x6
   236   000007                     	ds	3
   237   00000A                     color_read_Red@tmp:
   238                           	callstack 0
   239   00000A                     color_read_Blue@tmp:
   240                           	callstack 0
   241   00000A                     color_read_Green@tmp:
   242                           	callstack 0
   243   00000A                     color_read_Clear@tmp:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x9
   247   00000A                     	ds	2
   248   00000C                     ?_get_color_code:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0xB
   252   00000C                     	ds	2
   253   00000E                     ??_get_color_code:
   254                           
   255                           ; 1 bytes @ 0xD
   256   00000E                     	ds	2
   257   000010                     ??_main:
   258                           
   259                           ; 1 bytes @ 0xF
   260   000010                     	ds	2
   261   000012                     main@motorL:
   262                           	callstack 0
   263                           
   264                           ; 9 bytes @ 0x11
   265   000012                     	ds	9
   266   00001B                     main@motorR:
   267                           	callstack 0
   268                           
   269                           ; 9 bytes @ 0x1A
   270   00001B                     	ds	9
   271                           
   272 ;;
   273 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   274 ;;
   275 ;; *************** function _main *****************
   276 ;; Defined at:
   277 ;;		line 18 in file "main.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;  color_code      2    0        unsigned int 
   282 ;;  motorR          9   26[COMRAM] struct DC_motor
   283 ;;  motorL          9   17[COMRAM] struct DC_motor
   284 ;;  PWMcycle        2    0        unsigned int 
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   295 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   297 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   298 ;;Total ram usage:       20 bytes
   299 ;; Hardware stack levels required when called: 6
   300 ;; This function calls:
   301 ;;		_Interrupts_init
   302 ;;		_Timer0_init
   303 ;;		_color_click_init
   304 ;;		_get_color_code
   305 ;;		_initDCmotorsPWM
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text0
   312   0001E6                     __ptext0:
   313                           	callstack 0
   314   0001E6                     _main:
   315                           	callstack 25
   316   0001E6                     
   317                           ;main.c: 19:     Timer0_init();
   318   0001E6  EC8C  F002         	call	_Timer0_init	;wreg free
   319   0001EA                     
   320                           ;main.c: 20:     Interrupts_init();
   321   0001EA  ECA2  F002         	call	_Interrupts_init	;wreg free
   322   0001EE                     
   323                           ;main.c: 21:     color_click_init();
   324   0001EE  EC1B  F002         	call	_color_click_init	;wreg free
   325   0001F2                     
   326                           ;main.c: 23:     initDCmotorsPWM(99);
   327   0001F2  0E00               	movlw	0
   328   0001F4  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   329   0001F6  0E63               	movlw	99
   330   0001F8  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   331   0001FA  ECAB  F000         	call	_initDCmotorsPWM	;wreg free
   332   0001FE                     
   333                           ;main.c: 25:     ANSELFbits.ANSELF2 = 0;
   334   0001FE  010E               	movlb	14	; () banked
   335   000200  95B4               	bcf	180,2,b	;volatile
   336   000202                     
   337                           ; BSR set to: 14
   338                           ;main.c: 26:     TRISFbits.TRISF2 = 1;
   339   000202  8486               	bsf	134,2,c	;volatile
   340   000204                     
   341                           ; BSR set to: 14
   342                           ;main.c: 27:     struct DC_motor motorL, motorR;;main.c: 28:     motorL.power=0;
   343   000204  0E00               	movlw	0
   344   000206  6E12               	movwf	main@motorL^0,c
   345   000208                     
   346                           ; BSR set to: 14
   347                           ;main.c: 29:     motorL.direction=1;
   348   000208  0E01               	movlw	1
   349   00020A  6E13               	movwf	(main@motorL+1)^0,c
   350   00020C                     
   351                           ; BSR set to: 14
   352                           ;main.c: 30:     motorL.brakemode=1;
   353   00020C  0E01               	movlw	1
   354   00020E  6E14               	movwf	(main@motorL+2)^0,c
   355                           
   356                           ;main.c: 31:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   357   000210  0EAA               	movlw	170
   358   000212  6E17               	movwf	(main@motorL+5)^0,c
   359   000214  0E0F               	movlw	15
   360   000216  6E18               	movwf	(main@motorL+6)^0,c
   361                           
   362                           ;main.c: 32:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   363   000218  0EA6               	movlw	166
   364   00021A  6E19               	movwf	(main@motorL+7)^0,c
   365   00021C  0E0F               	movlw	15
   366   00021E  6E1A               	movwf	(main@motorL+8)^0,c
   367   000220                     
   368                           ; BSR set to: 14
   369                           ;main.c: 33:     motorL.PWMperiod=PWMcycle;
   370   000220  0E00               	movlw	0
   371   000222  6E16               	movwf	(main@motorL+4)^0,c
   372   000224  0E63               	movlw	99
   373   000226  6E15               	movwf	(main@motorL+3)^0,c
   374   000228                     
   375                           ; BSR set to: 14
   376                           ;main.c: 35:     motorR.power=0;
   377   000228  0E00               	movlw	0
   378   00022A  6E1B               	movwf	main@motorR^0,c
   379   00022C                     
   380                           ; BSR set to: 14
   381                           ;main.c: 36:     motorR.direction=1;
   382   00022C  0E01               	movlw	1
   383   00022E  6E1C               	movwf	(main@motorR+1)^0,c
   384   000230                     
   385                           ; BSR set to: 14
   386                           ;main.c: 37:     motorR.brakemode=1;
   387   000230  0E01               	movlw	1
   388   000232  6E1D               	movwf	(main@motorR+2)^0,c
   389   000234                     
   390                           ; BSR set to: 14
   391                           ;main.c: 38:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   392   000234  0E25               	movlw	37
   393   000236  6E20               	movwf	(main@motorR+5)^0,c
   394   000238  0E0F               	movlw	15
   395   00023A  6E21               	movwf	(main@motorR+6)^0,c
   396   00023C                     
   397                           ; BSR set to: 14
   398                           ;main.c: 39:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   399   00023C  0E21               	movlw	33
   400   00023E  6E22               	movwf	(main@motorR+7)^0,c
   401   000240  0E0F               	movlw	15
   402   000242  6E23               	movwf	(main@motorR+8)^0,c
   403   000244                     
   404                           ; BSR set to: 14
   405                           ;main.c: 40:     motorR.PWMperiod=PWMcycle;
   406   000244  0E00               	movlw	0
   407   000246  6E1F               	movwf	(main@motorR+4)^0,c
   408   000248  0E63               	movlw	99
   409   00024A  6E1E               	movwf	(main@motorR+3)^0,c
   410   00024C                     l1639:
   411   00024C  EC19  F000         	call	_get_color_code	;wreg free
   412   000250                     
   413                           ;main.c: 44:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   414   000250  0E52               	movlw	82
   415   000252  6E11               	movwf	(??_main+1)^0,c
   416   000254  0E2B               	movlw	43
   417   000256  6E10               	movwf	??_main^0,c
   418   000258  0E00               	movlw	0
   419   00025A                     u627:
   420   00025A  2EE8               	decfsz	wreg,f,c
   421   00025C  D7FE               	bra	u627
   422   00025E  2E10               	decfsz	??_main^0,f,c
   423   000260  D7FC               	bra	u627
   424   000262  2E11               	decfsz	(??_main+1)^0,f,c
   425   000264  D7FA               	bra	u627
   426   000266  D000               	nop2	
   427   000268  EF26  F001         	goto	l1639
   428   00026C  EF17  F000         	goto	start
   429   000270                     __end_of_main:
   430                           	callstack 0
   431                           
   432 ;; *************** function _initDCmotorsPWM *****************
   433 ;; Defined at:
   434 ;;		line 7 in file "dc_motor.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;  PWMperiod       2    0[COMRAM] int 
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   452 ;;Total ram usage:        2 bytes
   453 ;; Hardware stack levels used: 1
   454 ;; Hardware stack levels required when called: 2
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text1
   463   000156                     __ptext1:
   464                           	callstack 0
   465   000156                     _initDCmotorsPWM:
   466                           	callstack 28
   467   000156                     
   468                           ;dc_motor.c: 9:     TRISEbits.TRISE2=0;
   469   000156  9485               	bcf	133,2,c	;volatile
   470                           
   471                           ;dc_motor.c: 10:     TRISCbits.TRISC7=0;
   472   000158  9E83               	bcf	131,7,c	;volatile
   473                           
   474                           ;dc_motor.c: 11:     TRISGbits.TRISG6=0;
   475   00015A  9C87               	bcf	135,6,c	;volatile
   476                           
   477                           ;dc_motor.c: 12:     TRISEbits.TRISE4=0;
   478   00015C  9885               	bcf	133,4,c	;volatile
   479                           
   480                           ;dc_motor.c: 14:     LATEbits.LATE2=0;
   481   00015E  947D               	bcf	125,2,c	;volatile
   482                           
   483                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
   484   000160  9E7B               	bcf	123,7,c	;volatile
   485                           
   486                           ;dc_motor.c: 16:     LATGbits.LATG6=0;
   487   000162  9C7F               	bcf	127,6,c	;volatile
   488                           
   489                           ;dc_motor.c: 17:     LATEbits.LATE4=0;
   490   000164  987D               	bcf	125,4,c	;volatile
   491   000166                     
   492                           ;dc_motor.c: 20:     RE2PPS=0x05;
   493   000166  0E05               	movlw	5
   494   000168  010E               	movlb	14	; () banked
   495   00016A  6F74               	movwf	116,b	;volatile
   496                           
   497                           ;dc_motor.c: 21:     RE4PPS=0x06;
   498   00016C  0E06               	movlw	6
   499   00016E  6F76               	movwf	118,b	;volatile
   500                           
   501                           ;dc_motor.c: 22:     RC7PPS=0x07;
   502   000170  0E07               	movlw	7
   503   000172  6F69               	movwf	105,b	;volatile
   504                           
   505                           ;dc_motor.c: 23:     RG6PPS=0x08;
   506   000174  0E08               	movlw	8
   507   000176  6F88               	movwf	136,b	;volatile
   508                           
   509                           ;dc_motor.c: 26:     T2CONbits.CKPS=0b100;
   510   000178  50BD               	movf	189,w,c	;volatile
   511   00017A  0B8F               	andlw	-113
   512   00017C  0940               	iorlw	64
   513   00017E  6EBD               	movwf	189,c	;volatile
   514                           
   515                           ;dc_motor.c: 27:     T2HLTbits.MODE=0b00000;
   516   000180  0EE0               	movlw	-32
   517   000182  16BE               	andwf	190,f,c	;volatile
   518                           
   519                           ;dc_motor.c: 28:     T2CLKCONbits.CS=0b0001;
   520   000184  50BF               	movf	191,w,c	;volatile
   521   000186  0BF0               	andlw	-16
   522   000188  0901               	iorlw	1
   523   00018A  6EBF               	movwf	191,c	;volatile
   524                           
   525                           ;dc_motor.c: 32:     T2PR=99;
   526   00018C  0E63               	movlw	99
   527   00018E  6EBC               	movwf	188,c	;volatile
   528   000190                     
   529                           ; BSR set to: 14
   530                           ;dc_motor.c: 33:     T2CONbits.ON=1;
   531   000190  8EBD               	bsf	189,7,c	;volatile
   532                           
   533                           ;dc_motor.c: 37:     CCPR1H=0;
   534   000192  0E00               	movlw	0
   535   000194  6EAA               	movwf	170,c	;volatile
   536                           
   537                           ;dc_motor.c: 38:     CCPR2H=0;
   538   000196  0E00               	movlw	0
   539   000198  6EA6               	movwf	166,c	;volatile
   540                           
   541                           ;dc_motor.c: 39:     CCPR3H=0;
   542   00019A  0E00               	movlw	0
   543   00019C  010F               	movlb	15	; () banked
   544   00019E  6F25               	movwf	37,b	;volatile
   545                           
   546                           ;dc_motor.c: 40:     CCPR4H=0;
   547   0001A0  0E00               	movlw	0
   548   0001A2  6F21               	movwf	33,b	;volatile
   549                           
   550                           ;dc_motor.c: 43:     CCPTMRS0bits.C1TSEL=0;
   551   0001A4  0EFC               	movlw	-4
   552   0001A6  16AD               	andwf	173,f,c	;volatile
   553                           
   554                           ;dc_motor.c: 44:     CCPTMRS0bits.C2TSEL=0;
   555   0001A8  0EF3               	movlw	-13
   556   0001AA  16AD               	andwf	173,f,c	;volatile
   557                           
   558                           ;dc_motor.c: 45:     CCPTMRS0bits.C3TSEL=0;
   559   0001AC  0ECF               	movlw	-49
   560   0001AE  16AD               	andwf	173,f,c	;volatile
   561                           
   562                           ;dc_motor.c: 46:     CCPTMRS0bits.C4TSEL=0;
   563   0001B0  0E3F               	movlw	-193
   564   0001B2  16AD               	andwf	173,f,c	;volatile
   565   0001B4                     
   566                           ; BSR set to: 15
   567                           ;dc_motor.c: 49:     CCP1CONbits.FMT=1;
   568   0001B4  88AB               	bsf	171,4,c	;volatile
   569                           
   570                           ;dc_motor.c: 50:     CCP1CONbits.CCP1MODE=0b1100;
   571   0001B6  50AB               	movf	171,w,c	;volatile
   572   0001B8  0BF0               	andlw	-16
   573   0001BA  090C               	iorlw	12
   574   0001BC  6EAB               	movwf	171,c	;volatile
   575   0001BE                     
   576                           ; BSR set to: 15
   577                           ;dc_motor.c: 51:     CCP1CONbits.EN=1;
   578   0001BE  8EAB               	bsf	171,7,c	;volatile
   579   0001C0                     
   580                           ; BSR set to: 15
   581                           ;dc_motor.c: 53:     CCP2CONbits.FMT=1;
   582   0001C0  88A7               	bsf	167,4,c	;volatile
   583                           
   584                           ;dc_motor.c: 54:     CCP2CONbits.CCP2MODE=0b1100;
   585   0001C2  50A7               	movf	167,w,c	;volatile
   586   0001C4  0BF0               	andlw	-16
   587   0001C6  090C               	iorlw	12
   588   0001C8  6EA7               	movwf	167,c	;volatile
   589   0001CA                     
   590                           ; BSR set to: 15
   591                           ;dc_motor.c: 55:     CCP2CONbits.EN=1;
   592   0001CA  8EA7               	bsf	167,7,c	;volatile
   593   0001CC                     
   594                           ; BSR set to: 15
   595                           ;dc_motor.c: 57:     CCP3CONbits.FMT=1;
   596   0001CC  8926               	bsf	38,4,b	;volatile
   597                           
   598                           ;dc_motor.c: 58:     CCP3CONbits.CCP3MODE=0b1100;
   599   0001CE  5126               	movf	38,w,b	;volatile
   600   0001D0  0BF0               	andlw	-16
   601   0001D2  090C               	iorlw	12
   602   0001D4  6F26               	movwf	38,b	;volatile
   603   0001D6                     
   604                           ; BSR set to: 15
   605                           ;dc_motor.c: 59:     CCP3CONbits.EN=1;
   606   0001D6  8F26               	bsf	38,7,b	;volatile
   607   0001D8                     
   608                           ; BSR set to: 15
   609                           ;dc_motor.c: 61:     CCP4CONbits.FMT=1;
   610   0001D8  8922               	bsf	34,4,b	;volatile
   611                           
   612                           ;dc_motor.c: 62:     CCP4CONbits.CCP4MODE=0b1100;
   613   0001DA  5122               	movf	34,w,b	;volatile
   614   0001DC  0BF0               	andlw	-16
   615   0001DE  090C               	iorlw	12
   616   0001E0  6F22               	movwf	34,b	;volatile
   617   0001E2                     
   618                           ; BSR set to: 15
   619                           ;dc_motor.c: 63:     CCP4CONbits.EN=1;
   620   0001E2  8F22               	bsf	34,7,b	;volatile
   621   0001E4                     
   622                           ; BSR set to: 15
   623   0001E4  0012               	return		;funcret
   624   0001E6                     __end_of_initDCmotorsPWM:
   625                           	callstack 0
   626                           
   627 ;; *************** function _get_color_code *****************
   628 ;; Defined at:
   629 ;;		line 128 in file "color.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  2   11[COMRAM] unsigned int 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   646 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   647 ;;Total ram usage:        4 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 5
   650 ;; This function calls:
   651 ;;		_color_read_Blue
   652 ;;		_color_read_Clear
   653 ;;		_color_read_Green
   654 ;;		_color_read_Red
   655 ;;		_set_led_color
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text2
   662   000032                     __ptext2:
   663                           	callstack 0
   664   000032                     _get_color_code:
   665                           	callstack 25
   666   000032                     
   667                           ;color.c: 129:     set_led_color(0b000);
   668   000032  0E00               	movlw	0
   669   000034  6E02               	movwf	(set_led_color@color+1)^0,c
   670   000036  0E00               	movlw	0
   671   000038  6E01               	movwf	set_led_color@color^0,c
   672   00003A  ECD8  F001         	call	_set_led_color	;wreg free
   673   00003E                     
   674                           ;color.c: 130:     RGB.R = color_read_Red();
   675   00003E  EC38  F001         	call	_color_read_Red	;wreg free
   676   000042  C005  F024         	movff	?_color_read_Red,_RGB
   677   000046  C006  F025         	movff	?_color_read_Red+1,_RGB+1
   678   00004A                     
   679                           ;color.c: 131:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   680   00004A  0E29               	movlw	41
   681   00004C  6E0F               	movwf	(??_get_color_code+1)^0,c
   682   00004E  0E96               	movlw	150
   683   000050  6E0E               	movwf	??_get_color_code^0,c
   684   000052  0E7F               	movlw	127
   685   000054                     u637:
   686   000054  2EE8               	decfsz	wreg,f,c
   687   000056  D7FE               	bra	u637
   688   000058  2E0E               	decfsz	??_get_color_code^0,f,c
   689   00005A  D7FC               	bra	u637
   690   00005C  2E0F               	decfsz	(??_get_color_code+1)^0,f,c
   691   00005E  D7FA               	bra	u637
   692   000060  F000               	nop	
   693   000062                     
   694                           ;color.c: 132:     set_led_color(0b000);
   695   000062  0E00               	movlw	0
   696   000064  6E02               	movwf	(set_led_color@color+1)^0,c
   697   000066  0E00               	movlw	0
   698   000068  6E01               	movwf	set_led_color@color^0,c
   699   00006A  ECD8  F001         	call	_set_led_color	;wreg free
   700   00006E                     
   701                           ;color.c: 133:     RGB.G = color_read_Green();
   702   00006E  EC60  F001         	call	_color_read_Green	;wreg free
   703   000072  C005  F026         	movff	?_color_read_Green,_RGB+2
   704   000076  C006  F027         	movff	?_color_read_Green+1,_RGB+3
   705                           
   706                           ;color.c: 134:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   707   00007A  0E29               	movlw	41
   708   00007C  6E0F               	movwf	(??_get_color_code+1)^0,c
   709   00007E  0E96               	movlw	150
   710   000080  6E0E               	movwf	??_get_color_code^0,c
   711   000082  0E7F               	movlw	127
   712   000084                     u647:
   713   000084  2EE8               	decfsz	wreg,f,c
   714   000086  D7FE               	bra	u647
   715   000088  2E0E               	decfsz	??_get_color_code^0,f,c
   716   00008A  D7FC               	bra	u647
   717   00008C  2E0F               	decfsz	(??_get_color_code+1)^0,f,c
   718   00008E  D7FA               	bra	u647
   719   000090  F000               	nop	
   720   000092                     
   721                           ;color.c: 135:     set_led_color(0b000);
   722   000092  0E00               	movlw	0
   723   000094  6E02               	movwf	(set_led_color@color+1)^0,c
   724   000096  0E00               	movlw	0
   725   000098  6E01               	movwf	set_led_color@color^0,c
   726   00009A  ECD8  F001         	call	_set_led_color	;wreg free
   727   00009E                     
   728                           ;color.c: 136:     RGB.B = color_read_Blue();
   729   00009E  ECB0  F001         	call	_color_read_Blue	;wreg free
   730   0000A2  C005  F028         	movff	?_color_read_Blue,_RGB+4
   731   0000A6  C006  F029         	movff	?_color_read_Blue+1,_RGB+5
   732   0000AA                     
   733                           ;color.c: 137:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   734   0000AA  0E29               	movlw	41
   735   0000AC  6E0F               	movwf	(??_get_color_code+1)^0,c
   736   0000AE  0E96               	movlw	150
   737   0000B0  6E0E               	movwf	??_get_color_code^0,c
   738   0000B2  0E7F               	movlw	127
   739   0000B4                     u657:
   740   0000B4  2EE8               	decfsz	wreg,f,c
   741   0000B6  D7FE               	bra	u657
   742   0000B8  2E0E               	decfsz	??_get_color_code^0,f,c
   743   0000BA  D7FC               	bra	u657
   744   0000BC  2E0F               	decfsz	(??_get_color_code+1)^0,f,c
   745   0000BE  D7FA               	bra	u657
   746   0000C0  F000               	nop	
   747   0000C2                     
   748                           ;color.c: 138:     set_led_color(0b000);
   749   0000C2  0E00               	movlw	0
   750   0000C4  6E02               	movwf	(set_led_color@color+1)^0,c
   751   0000C6  0E00               	movlw	0
   752   0000C8  6E01               	movwf	set_led_color@color^0,c
   753   0000CA  ECD8  F001         	call	_set_led_color	;wreg free
   754                           
   755                           ;color.c: 139:     RGB.C = color_read_Clear();
   756   0000CE  EC88  F001         	call	_color_read_Clear	;wreg free
   757   0000D2  C005  F02A         	movff	?_color_read_Clear,_RGB+6
   758   0000D6  C006  F02B         	movff	?_color_read_Clear+1,_RGB+7
   759   0000DA                     
   760                           ;color.c: 140:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   761   0000DA  0E29               	movlw	41
   762   0000DC  6E0F               	movwf	(??_get_color_code+1)^0,c
   763   0000DE  0E96               	movlw	150
   764   0000E0  6E0E               	movwf	??_get_color_code^0,c
   765   0000E2  0E7F               	movlw	127
   766   0000E4                     u667:
   767   0000E4  2EE8               	decfsz	wreg,f,c
   768   0000E6  D7FE               	bra	u667
   769   0000E8  2E0E               	decfsz	??_get_color_code^0,f,c
   770   0000EA  D7FC               	bra	u667
   771   0000EC  2E0F               	decfsz	(??_get_color_code+1)^0,f,c
   772   0000EE  D7FA               	bra	u667
   773   0000F0  F000               	nop	
   774   0000F2                     
   775                           ;color.c: 141:     set_led_color(0b000);
   776   0000F2  0E00               	movlw	0
   777   0000F4  6E02               	movwf	(set_led_color@color+1)^0,c
   778   0000F6  0E00               	movlw	0
   779   0000F8  6E01               	movwf	set_led_color@color^0,c
   780   0000FA  ECD8  F001         	call	_set_led_color	;wreg free
   781   0000FE                     
   782                           ;color.c: 143:     if(RGB.R > RGB.G && RGB.R > RGB.B && RGB.R > RGB.C){
   783   0000FE  5024               	movf	_RGB^0,w,c
   784   000100  5C26               	subwf	(_RGB+2)^0,w,c
   785   000102  5025               	movf	(_RGB+1)^0,w,c
   786   000104  5827               	subwfb	(_RGB+3)^0,w,c
   787   000106  B0D8               	btfsc	status,0,c
   788   000108  EF88  F000         	goto	u591
   789   00010C  EF8A  F000         	goto	u590
   790   000110                     u591:
   791   000110  EFA6  F000         	goto	l1579
   792   000114                     u590:
   793   000114  5024               	movf	_RGB^0,w,c
   794   000116  5C28               	subwf	(_RGB+4)^0,w,c
   795   000118  5025               	movf	(_RGB+1)^0,w,c
   796   00011A  5829               	subwfb	(_RGB+5)^0,w,c
   797   00011C  B0D8               	btfsc	status,0,c
   798   00011E  EF93  F000         	goto	u601
   799   000122  EF95  F000         	goto	u600
   800   000126                     u601:
   801   000126  EFA6  F000         	goto	l1579
   802   00012A                     u600:
   803   00012A  5024               	movf	_RGB^0,w,c
   804   00012C  5C2A               	subwf	(_RGB+6)^0,w,c
   805   00012E  5025               	movf	(_RGB+1)^0,w,c
   806   000130  582B               	subwfb	(_RGB+7)^0,w,c
   807   000132  B0D8               	btfsc	status,0,c
   808   000134  EF9E  F000         	goto	u611
   809   000138  EFA0  F000         	goto	u610
   810   00013C                     u611:
   811   00013C  EFA6  F000         	goto	l1579
   812   000140                     u610:
   813   000140                     
   814                           ;color.c: 144:         return 1;
   815   000140  0E00               	movlw	0
   816   000142  6E0D               	movwf	(?_get_color_code+1)^0,c
   817   000144  0E01               	movlw	1
   818   000146  6E0C               	movwf	?_get_color_code^0,c
   819   000148  EFAA  F000         	goto	l71
   820   00014C                     l1579:
   821                           
   822                           ;color.c: 146:         return 0;
   823   00014C  0E00               	movlw	0
   824   00014E  6E0D               	movwf	(?_get_color_code+1)^0,c
   825   000150  0E00               	movlw	0
   826   000152  6E0C               	movwf	?_get_color_code^0,c
   827   000154                     l71:
   828   000154  0012               	return		;funcret
   829   000156                     __end_of_get_color_code:
   830                           	callstack 0
   831                           
   832 ;; *************** function _set_led_color *****************
   833 ;; Defined at:
   834 ;;		line 106 in file "color.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  color           2    0[COMRAM] unsigned int 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		None
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   852 ;;Total ram usage:        2 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 2
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_get_color_code
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text3
   863   0003B0                     __ptext3:
   864                           	callstack 0
   865   0003B0                     _set_led_color:
   866                           	callstack 27
   867   0003B0                     
   868                           ;color.c: 110:     if(color & 0b100){
   869   0003B0  A401               	btfss	set_led_color@color^0,2,c
   870   0003B2  EFDD  F001         	goto	u561
   871   0003B6  EFDF  F001         	goto	u560
   872   0003BA                     u561:
   873   0003BA  EFE2  F001         	goto	l59
   874   0003BE                     u560:
   875   0003BE                     
   876                           ;color.c: 111:         LATGbits.LATG1 = 1;
   877   0003BE  827F               	bsf	127,1,c	;volatile
   878                           
   879                           ;color.c: 112:     }else{
   880   0003C0  EFE3  F001         	goto	l60
   881   0003C4                     l59:
   882                           
   883                           ;color.c: 113:         LATGbits.LATG1 = 0;
   884   0003C4  927F               	bcf	127,1,c	;volatile
   885   0003C6                     l60:
   886                           
   887                           ;color.c: 115:     if(color & 0b010){
   888   0003C6  A201               	btfss	set_led_color@color^0,1,c
   889   0003C8  EFE8  F001         	goto	u571
   890   0003CC  EFEA  F001         	goto	u570
   891   0003D0                     u571:
   892   0003D0  EFED  F001         	goto	l61
   893   0003D4                     u570:
   894   0003D4                     
   895                           ;color.c: 116:         LATAbits.LATA4 = 1;
   896   0003D4  8879               	bsf	121,4,c	;volatile
   897                           
   898                           ;color.c: 117:     }else{
   899   0003D6  EFEE  F001         	goto	l62
   900   0003DA                     l61:
   901                           
   902                           ;color.c: 118:         LATAbits.LATA4 = 0;
   903   0003DA  9879               	bcf	121,4,c	;volatile
   904   0003DC                     l62:
   905                           
   906                           ;color.c: 120:     if(color & 0b001){
   907   0003DC  A001               	btfss	set_led_color@color^0,0,c
   908   0003DE  EFF3  F001         	goto	u581
   909   0003E2  EFF5  F001         	goto	u580
   910   0003E6                     u581:
   911   0003E6  EFF8  F001         	goto	l63
   912   0003EA                     u580:
   913   0003EA                     
   914                           ;color.c: 121:         LATFbits.LATF7 = 1;
   915   0003EA  8E7E               	bsf	126,7,c	;volatile
   916                           
   917                           ;color.c: 122:     }else{
   918   0003EC  EFF9  F001         	goto	l65
   919   0003F0                     l63:
   920                           
   921                           ;color.c: 123:         LATFbits.LATF7 = 0;
   922   0003F0  9E7E               	bcf	126,7,c	;volatile
   923   0003F2                     l65:
   924   0003F2  0012               	return		;funcret
   925   0003F4                     __end_of_set_led_color:
   926                           	callstack 0
   927                           
   928 ;; *************** function _color_read_Red *****************
   929 ;; Defined at:
   930 ;;		line 49 in file "color.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  tmp             2    9[COMRAM] unsigned int 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  2    4[COMRAM] unsigned int 
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   947 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   948 ;;Total ram usage:        7 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; Hardware stack levels required when called: 4
   951 ;; This function calls:
   952 ;;		_I2C_2_Master_Read
   953 ;;		_I2C_2_Master_RepStart
   954 ;;		_I2C_2_Master_Start
   955 ;;		_I2C_2_Master_Stop
   956 ;;		_I2C_2_Master_Write
   957 ;; This function is called by:
   958 ;;		_get_color_code
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text4
   963   000270                     __ptext4:
   964                           	callstack 0
   965   000270                     _color_read_Red:
   966                           	callstack 25
   967   000270                     
   968                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
   969   000270  ECB2  F002         	call	_I2C_2_Master_Start	;wreg free
   970                           
   971                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
   972   000274  0E52               	movlw	82
   973   000276  EC9C  F002         	call	_I2C_2_Master_Write
   974                           
   975                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x16);
   976   00027A  0EB6               	movlw	182
   977   00027C  EC9C  F002         	call	_I2C_2_Master_Write
   978                           
   979                           ;color.c: 55:  I2C_2_Master_RepStart();
   980   000280  ECA8  F002         	call	_I2C_2_Master_RepStart	;wreg free
   981                           
   982                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
   983   000284  0E53               	movlw	83
   984   000286  EC9C  F002         	call	_I2C_2_Master_Write
   985                           
   986                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
   987   00028A  0E01               	movlw	1
   988   00028C  ECFA  F001         	call	_I2C_2_Master_Read
   989   000290  6E07               	movwf	??_color_read_Red^0,c
   990   000292  5007               	movf	??_color_read_Red^0,w,c
   991   000294  6E0A               	movwf	color_read_Red@tmp^0,c
   992   000296  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
   993                           
   994                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
   995   000298  0E00               	movlw	0
   996   00029A  ECFA  F001         	call	_I2C_2_Master_Read
   997   00029E  6E07               	movwf	??_color_read_Red^0,c
   998   0002A0  5007               	movf	??_color_read_Red^0,w,c
   999   0002A2  6E09               	movwf	(??_color_read_Red+2)^0,c
  1000   0002A4  6A08               	clrf	(??_color_read_Red+1)^0,c
  1001   0002A6  500A               	movf	color_read_Red@tmp^0,w,c
  1002   0002A8  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1003   0002AA  6E0A               	movwf	color_read_Red@tmp^0,c
  1004   0002AC  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1005   0002AE  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1006   0002B0  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1007                           
  1008                           ;color.c: 59:  I2C_2_Master_Stop();
  1009   0002B2  ECAD  F002         	call	_I2C_2_Master_Stop	;wreg free
  1010   0002B6                     
  1011                           ;color.c: 60:  return tmp;
  1012   0002B6  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1013   0002BA  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1014   0002BE  0012               	return		;funcret
  1015   0002C0                     __end_of_color_read_Red:
  1016                           	callstack 0
  1017                           
  1018 ;; *************** function _color_read_Green *****************
  1019 ;; Defined at:
  1020 ;;		line 77 in file "color.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  tmp             2    9[COMRAM] unsigned int 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  2    4[COMRAM] unsigned int 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1035 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1036 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1037 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1038 ;;Total ram usage:        7 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; Hardware stack levels required when called: 4
  1041 ;; This function calls:
  1042 ;;		_I2C_2_Master_Read
  1043 ;;		_I2C_2_Master_RepStart
  1044 ;;		_I2C_2_Master_Start
  1045 ;;		_I2C_2_Master_Stop
  1046 ;;		_I2C_2_Master_Write
  1047 ;; This function is called by:
  1048 ;;		_get_color_code
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text5
  1053   0002C0                     __ptext5:
  1054                           	callstack 0
  1055   0002C0                     _color_read_Green:
  1056                           	callstack 25
  1057   0002C0                     
  1058                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  1059   0002C0  ECB2  F002         	call	_I2C_2_Master_Start	;wreg free
  1060                           
  1061                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  1062   0002C4  0E52               	movlw	82
  1063   0002C6  EC9C  F002         	call	_I2C_2_Master_Write
  1064                           
  1065                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x18);
  1066   0002CA  0EB8               	movlw	184
  1067   0002CC  EC9C  F002         	call	_I2C_2_Master_Write
  1068                           
  1069                           ;color.c: 83:  I2C_2_Master_RepStart();
  1070   0002D0  ECA8  F002         	call	_I2C_2_Master_RepStart	;wreg free
  1071                           
  1072                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  1073   0002D4  0E53               	movlw	83
  1074   0002D6  EC9C  F002         	call	_I2C_2_Master_Write
  1075                           
  1076                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  1077   0002DA  0E01               	movlw	1
  1078   0002DC  ECFA  F001         	call	_I2C_2_Master_Read
  1079   0002E0  6E07               	movwf	??_color_read_Green^0,c
  1080   0002E2  5007               	movf	??_color_read_Green^0,w,c
  1081   0002E4  6E0A               	movwf	color_read_Green@tmp^0,c
  1082   0002E6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1083                           
  1084                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1085   0002E8  0E00               	movlw	0
  1086   0002EA  ECFA  F001         	call	_I2C_2_Master_Read
  1087   0002EE  6E07               	movwf	??_color_read_Green^0,c
  1088   0002F0  5007               	movf	??_color_read_Green^0,w,c
  1089   0002F2  6E09               	movwf	(??_color_read_Green+2)^0,c
  1090   0002F4  6A08               	clrf	(??_color_read_Green+1)^0,c
  1091   0002F6  500A               	movf	color_read_Green@tmp^0,w,c
  1092   0002F8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1093   0002FA  6E0A               	movwf	color_read_Green@tmp^0,c
  1094   0002FC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1095   0002FE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1096   000300  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1097                           
  1098                           ;color.c: 87:  I2C_2_Master_Stop();
  1099   000302  ECAD  F002         	call	_I2C_2_Master_Stop	;wreg free
  1100   000306                     
  1101                           ;color.c: 88:  return tmp;
  1102   000306  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1103   00030A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1104   00030E  0012               	return		;funcret
  1105   000310                     __end_of_color_read_Green:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _color_read_Clear *****************
  1109 ;; Defined at:
  1110 ;;		line 91 in file "color.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  tmp             2    9[COMRAM] unsigned int 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  2    4[COMRAM] unsigned int 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1128 ;;Total ram usage:        7 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 4
  1131 ;; This function calls:
  1132 ;;		_I2C_2_Master_Read
  1133 ;;		_I2C_2_Master_RepStart
  1134 ;;		_I2C_2_Master_Start
  1135 ;;		_I2C_2_Master_Stop
  1136 ;;		_I2C_2_Master_Write
  1137 ;; This function is called by:
  1138 ;;		_get_color_code
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text6
  1143   000310                     __ptext6:
  1144                           	callstack 0
  1145   000310                     _color_read_Clear:
  1146                           	callstack 25
  1147   000310                     
  1148                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  1149   000310  ECB2  F002         	call	_I2C_2_Master_Start	;wreg free
  1150                           
  1151                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  1152   000314  0E52               	movlw	82
  1153   000316  EC9C  F002         	call	_I2C_2_Master_Write
  1154                           
  1155                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x14);
  1156   00031A  0EB4               	movlw	180
  1157   00031C  EC9C  F002         	call	_I2C_2_Master_Write
  1158                           
  1159                           ;color.c: 97:  I2C_2_Master_RepStart();
  1160   000320  ECA8  F002         	call	_I2C_2_Master_RepStart	;wreg free
  1161                           
  1162                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  1163   000324  0E53               	movlw	83
  1164   000326  EC9C  F002         	call	_I2C_2_Master_Write
  1165                           
  1166                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  1167   00032A  0E01               	movlw	1
  1168   00032C  ECFA  F001         	call	_I2C_2_Master_Read
  1169   000330  6E07               	movwf	??_color_read_Clear^0,c
  1170   000332  5007               	movf	??_color_read_Clear^0,w,c
  1171   000334  6E0A               	movwf	color_read_Clear@tmp^0,c
  1172   000336  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  1173                           
  1174                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1175   000338  0E00               	movlw	0
  1176   00033A  ECFA  F001         	call	_I2C_2_Master_Read
  1177   00033E  6E07               	movwf	??_color_read_Clear^0,c
  1178   000340  5007               	movf	??_color_read_Clear^0,w,c
  1179   000342  6E09               	movwf	(??_color_read_Clear+2)^0,c
  1180   000344  6A08               	clrf	(??_color_read_Clear+1)^0,c
  1181   000346  500A               	movf	color_read_Clear@tmp^0,w,c
  1182   000348  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  1183   00034A  6E0A               	movwf	color_read_Clear@tmp^0,c
  1184   00034C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  1185   00034E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  1186   000350  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  1187                           
  1188                           ;color.c: 101:  I2C_2_Master_Stop();
  1189   000352  ECAD  F002         	call	_I2C_2_Master_Stop	;wreg free
  1190   000356                     
  1191                           ;color.c: 102:  return tmp;
  1192   000356  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1193   00035A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1194   00035E  0012               	return		;funcret
  1195   000360                     __end_of_color_read_Clear:
  1196                           	callstack 0
  1197                           
  1198 ;; *************** function _color_read_Blue *****************
  1199 ;; Defined at:
  1200 ;;		line 63 in file "color.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  tmp             2    9[COMRAM] unsigned int 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  2    4[COMRAM] unsigned int 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1216 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1217 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1218 ;;Total ram usage:        7 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 4
  1221 ;; This function calls:
  1222 ;;		_I2C_2_Master_Read
  1223 ;;		_I2C_2_Master_RepStart
  1224 ;;		_I2C_2_Master_Start
  1225 ;;		_I2C_2_Master_Stop
  1226 ;;		_I2C_2_Master_Write
  1227 ;; This function is called by:
  1228 ;;		_get_color_code
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text7
  1233   000360                     __ptext7:
  1234                           	callstack 0
  1235   000360                     _color_read_Blue:
  1236                           	callstack 25
  1237   000360                     
  1238                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  1239   000360  ECB2  F002         	call	_I2C_2_Master_Start	;wreg free
  1240                           
  1241                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  1242   000364  0E52               	movlw	82
  1243   000366  EC9C  F002         	call	_I2C_2_Master_Write
  1244                           
  1245                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x1A);
  1246   00036A  0EBA               	movlw	186
  1247   00036C  EC9C  F002         	call	_I2C_2_Master_Write
  1248                           
  1249                           ;color.c: 69:  I2C_2_Master_RepStart();
  1250   000370  ECA8  F002         	call	_I2C_2_Master_RepStart	;wreg free
  1251                           
  1252                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  1253   000374  0E53               	movlw	83
  1254   000376  EC9C  F002         	call	_I2C_2_Master_Write
  1255                           
  1256                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  1257   00037A  0E01               	movlw	1
  1258   00037C  ECFA  F001         	call	_I2C_2_Master_Read
  1259   000380  6E07               	movwf	??_color_read_Blue^0,c
  1260   000382  5007               	movf	??_color_read_Blue^0,w,c
  1261   000384  6E0A               	movwf	color_read_Blue@tmp^0,c
  1262   000386  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1263                           
  1264                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1265   000388  0E00               	movlw	0
  1266   00038A  ECFA  F001         	call	_I2C_2_Master_Read
  1267   00038E  6E07               	movwf	??_color_read_Blue^0,c
  1268   000390  5007               	movf	??_color_read_Blue^0,w,c
  1269   000392  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1270   000394  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1271   000396  500A               	movf	color_read_Blue@tmp^0,w,c
  1272   000398  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1273   00039A  6E0A               	movwf	color_read_Blue@tmp^0,c
  1274   00039C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1275   00039E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1276   0003A0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1277                           
  1278                           ;color.c: 73:  I2C_2_Master_Stop();
  1279   0003A2  ECAD  F002         	call	_I2C_2_Master_Stop	;wreg free
  1280   0003A6                     
  1281                           ;color.c: 74:  return tmp;
  1282   0003A6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1283   0003AA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1284   0003AE  0012               	return		;funcret
  1285   0003B0                     __end_of_color_read_Blue:
  1286                           	callstack 0
  1287                           
  1288 ;; *************** function _I2C_2_Master_RepStart *****************
  1289 ;; Defined at:
  1290 ;;		line 33 in file "i2c.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;Total ram usage:        0 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 3
  1311 ;; This function calls:
  1312 ;;		_I2C_2_Master_Idle
  1313 ;; This function is called by:
  1314 ;;		_color_read_Red
  1315 ;;		_color_read_Blue
  1316 ;;		_color_read_Green
  1317 ;;		_color_read_Clear
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text8
  1322   000550                     __ptext8:
  1323                           	callstack 0
  1324   000550                     _I2C_2_Master_RepStart:
  1325                           	callstack 25
  1326   000550                     
  1327                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1328   000550  EC68  F002         	call	_I2C_2_Master_Idle	;wreg free
  1329   000554                     
  1330                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1331   000554  010E               	movlb	14	; () banked
  1332   000556  83DA               	bsf	218,1,b	;volatile
  1333   000558                     
  1334                           ; BSR set to: 14
  1335   000558  0012               	return		;funcret
  1336   00055A                     __end_of_I2C_2_Master_RepStart:
  1337                           	callstack 0
  1338                           
  1339 ;; *************** function _I2C_2_Master_Read *****************
  1340 ;; Defined at:
  1341 ;;		line 51 in file "i2c.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  ack             1    wreg     unsigned char 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  ack             1    2[COMRAM] unsigned char 
  1346 ;;  tmp             1    3[COMRAM] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      unsigned char 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;Total ram usage:        3 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 3
  1363 ;; This function calls:
  1364 ;;		_I2C_2_Master_Idle
  1365 ;; This function is called by:
  1366 ;;		_color_read_Red
  1367 ;;		_color_read_Blue
  1368 ;;		_color_read_Green
  1369 ;;		_color_read_Clear
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text9
  1374   0003F4                     __ptext9:
  1375                           	callstack 0
  1376   0003F4                     _I2C_2_Master_Read:
  1377                           	callstack 25
  1378                           
  1379                           ; BSR set to: 14
  1380                           ;incstack = 0
  1381                           ;I2C_2_Master_Read@ack stored from wreg
  1382   0003F4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1383   0003F6                     
  1384                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1385   0003F6  EC68  F002         	call	_I2C_2_Master_Idle	;wreg free
  1386   0003FA                     
  1387                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1388   0003FA  010E               	movlb	14	; () banked
  1389   0003FC  87DA               	bsf	218,3,b	;volatile
  1390                           
  1391                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1392   0003FE  EC68  F002         	call	_I2C_2_Master_Idle	;wreg free
  1393   000402                     
  1394                           ;i2c.c: 57:   tmp = SSP2BUF;
  1395   000402  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1396                           
  1397                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1398   000406  EC68  F002         	call	_I2C_2_Master_Idle	;wreg free
  1399   00040A                     
  1400                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1401   00040A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1402   00040C  B4D8               	btfsc	status,2,c
  1403   00040E  EF0B  F002         	goto	u31
  1404   000412  EF0F  F002         	goto	u30
  1405   000416                     u31:
  1406   000416  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1407   000418  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1408   00041A  EF10  F002         	goto	u48
  1409   00041E                     u30:
  1410   00041E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1411   000420                     u48:
  1412   000420  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1413   000422  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1414   000424  010E               	movlb	14	; () banked
  1415   000426  51DA               	movf	218,w,b	;volatile
  1416   000428  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1417   00042A  0BDF               	andlw	-33
  1418   00042C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1419   00042E  6FDA               	movwf	218,b	;volatile
  1420   000430                     
  1421                           ; BSR set to: 14
  1422                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1423   000430  89DA               	bsf	218,4,b	;volatile
  1424   000432                     
  1425                           ; BSR set to: 14
  1426                           ;i2c.c: 61:   return tmp;
  1427   000432  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1428   000434                     
  1429                           ; BSR set to: 14
  1430   000434  0012               	return		;funcret
  1431   000436                     __end_of_I2C_2_Master_Read:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _color_click_init *****************
  1435 ;; Defined at:
  1436 ;;		line 15 in file "color.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;Total ram usage:        1 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 5
  1457 ;; This function calls:
  1458 ;;		_I2C_2_Master_Init
  1459 ;;		_color_writetoaddr
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text10
  1466   000436                     __ptext10:
  1467                           	callstack 0
  1468   000436                     _color_click_init:
  1469                           	callstack 25
  1470   000436                     
  1471                           ;color.c: 18:     I2C_2_Master_Init();
  1472   000436  EC53  F002         	call	_I2C_2_Master_Init	;wreg free
  1473   00043A                     
  1474                           ;color.c: 21:   color_writetoaddr(0x00, 0x01);
  1475   00043A  0E01               	movlw	1
  1476   00043C  6E03               	movwf	color_writetoaddr@value^0,c
  1477   00043E  0E00               	movlw	0
  1478   000440  EC7C  F002         	call	_color_writetoaddr
  1479   000444                     
  1480                           ;color.c: 22:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1481   000444  0E3F               	movlw	63
  1482   000446  6E05               	movwf	??_color_click_init^0,c
  1483   000448  0E55               	movlw	85
  1484   00044A                     u677:
  1485   00044A  2EE8               	decfsz	wreg,f,c
  1486   00044C  D7FE               	bra	u677
  1487   00044E  2E05               	decfsz	??_color_click_init^0,f,c
  1488   000450  D7FC               	bra	u677
  1489   000452  F000               	nop	
  1490   000454                     
  1491                           ;color.c: 25:  color_writetoaddr(0x00, 0x03);
  1492   000454  0E03               	movlw	3
  1493   000456  6E03               	movwf	color_writetoaddr@value^0,c
  1494   000458  0E00               	movlw	0
  1495   00045A  EC7C  F002         	call	_color_writetoaddr
  1496   00045E                     
  1497                           ;color.c: 28:  color_writetoaddr(0x01, 0xD5);
  1498   00045E  0ED5               	movlw	213
  1499   000460  6E03               	movwf	color_writetoaddr@value^0,c
  1500   000462  0E01               	movlw	1
  1501   000464  EC7C  F002         	call	_color_writetoaddr
  1502   000468                     
  1503                           ;color.c: 30:     TRISFbits.TRISF7 = 0;
  1504   000468  9E86               	bcf	134,7,c	;volatile
  1505   00046A                     
  1506                           ;color.c: 31:     TRISGbits.TRISG1 = 0;
  1507   00046A  9287               	bcf	135,1,c	;volatile
  1508   00046C                     
  1509                           ;color.c: 32:     TRISAbits.TRISA4 = 0;
  1510   00046C  9881               	bcf	129,4,c	;volatile
  1511   00046E                     
  1512                           ;color.c: 34:     TRISHbits.TRISH1 = 0;
  1513   00046E  9288               	bcf	136,1,c	;volatile
  1514   000470                     
  1515                           ;color.c: 35:     TRISDbits.TRISD3 = 0;
  1516   000470  9684               	bcf	132,3,c	;volatile
  1517   000472                     
  1518                           ;color.c: 36:     LATHbits.LATH1 = 1;
  1519   000472  8280               	bsf	128,1,c	;volatile
  1520   000474                     
  1521                           ;color.c: 37:     LATDbits.LATD3 = 1;
  1522   000474  867C               	bsf	124,3,c	;volatile
  1523   000476  0012               	return		;funcret
  1524   000478                     __end_of_color_click_init:
  1525                           	callstack 0
  1526                           
  1527 ;; *************** function _color_writetoaddr *****************
  1528 ;; Defined at:
  1529 ;;		line 41 in file "color.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  address         1    wreg     unsigned char 
  1532 ;;  value           1    2[COMRAM] unsigned char 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  address         1    3[COMRAM] unsigned char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1544 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1548 ;;Total ram usage:        2 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 4
  1551 ;; This function calls:
  1552 ;;		_I2C_2_Master_Start
  1553 ;;		_I2C_2_Master_Stop
  1554 ;;		_I2C_2_Master_Write
  1555 ;; This function is called by:
  1556 ;;		_color_click_init
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text11
  1561   0004F8                     __ptext11:
  1562                           	callstack 0
  1563   0004F8                     _color_writetoaddr:
  1564                           	callstack 25
  1565                           
  1566                           ;incstack = 0
  1567                           ;color_writetoaddr@address stored from wreg
  1568   0004F8  6E04               	movwf	color_writetoaddr@address^0,c
  1569   0004FA                     
  1570                           ;color.c: 42:     I2C_2_Master_Start();
  1571   0004FA  ECB2  F002         	call	_I2C_2_Master_Start	;wreg free
  1572                           
  1573                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  1574   0004FE  0E52               	movlw	82
  1575   000500  EC9C  F002         	call	_I2C_2_Master_Write
  1576                           
  1577                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  1578   000504  5004               	movf	color_writetoaddr@address^0,w,c
  1579   000506  0980               	iorlw	128
  1580   000508  EC9C  F002         	call	_I2C_2_Master_Write
  1581                           
  1582                           ;color.c: 45:     I2C_2_Master_Write(value);
  1583   00050C  5003               	movf	color_writetoaddr@value^0,w,c
  1584   00050E  EC9C  F002         	call	_I2C_2_Master_Write
  1585                           
  1586                           ;color.c: 46:     I2C_2_Master_Stop();
  1587   000512  ECAD  F002         	call	_I2C_2_Master_Stop	;wreg free
  1588   000516  0012               	return		;funcret
  1589   000518                     __end_of_color_writetoaddr:
  1590                           	callstack 0
  1591                           
  1592 ;; *************** function _I2C_2_Master_Write *****************
  1593 ;; Defined at:
  1594 ;;		line 45 in file "i2c.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  data_byte       1    wreg     unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  data_byte       1    1[COMRAM] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1612 ;;Total ram usage:        1 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 3
  1615 ;; This function calls:
  1616 ;;		_I2C_2_Master_Idle
  1617 ;; This function is called by:
  1618 ;;		_color_writetoaddr
  1619 ;;		_color_read_Red
  1620 ;;		_color_read_Blue
  1621 ;;		_color_read_Green
  1622 ;;		_color_read_Clear
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text12
  1627   000538                     __ptext12:
  1628                           	callstack 0
  1629   000538                     _I2C_2_Master_Write:
  1630                           	callstack 25
  1631                           
  1632                           ;incstack = 0
  1633                           ;I2C_2_Master_Write@data_byte stored from wreg
  1634   000538  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1635   00053A                     
  1636                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1637   00053A  EC68  F002         	call	_I2C_2_Master_Idle	;wreg free
  1638   00053E                     
  1639                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1640   00053E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1641   000542  0012               	return		;funcret
  1642   000544                     __end_of_I2C_2_Master_Write:
  1643                           	callstack 0
  1644                           
  1645 ;; *************** function _I2C_2_Master_Stop *****************
  1646 ;; Defined at:
  1647 ;;		line 39 in file "i2c.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1665 ;;Total ram usage:        0 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 3
  1668 ;; This function calls:
  1669 ;;		_I2C_2_Master_Idle
  1670 ;; This function is called by:
  1671 ;;		_color_writetoaddr
  1672 ;;		_color_read_Red
  1673 ;;		_color_read_Blue
  1674 ;;		_color_read_Green
  1675 ;;		_color_read_Clear
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text13
  1680   00055A                     __ptext13:
  1681                           	callstack 0
  1682   00055A                     _I2C_2_Master_Stop:
  1683                           	callstack 25
  1684   00055A                     
  1685                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1686   00055A  EC68  F002         	call	_I2C_2_Master_Idle	;wreg free
  1687   00055E                     
  1688                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1689   00055E  010E               	movlb	14	; () banked
  1690   000560  85DA               	bsf	218,2,b	;volatile
  1691   000562                     
  1692                           ; BSR set to: 14
  1693   000562  0012               	return		;funcret
  1694   000564                     __end_of_I2C_2_Master_Stop:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _I2C_2_Master_Start *****************
  1698 ;; Defined at:
  1699 ;;		line 27 in file "i2c.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 3
  1720 ;; This function calls:
  1721 ;;		_I2C_2_Master_Idle
  1722 ;; This function is called by:
  1723 ;;		_color_writetoaddr
  1724 ;;		_color_read_Red
  1725 ;;		_color_read_Blue
  1726 ;;		_color_read_Green
  1727 ;;		_color_read_Clear
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text14
  1732   000564                     __ptext14:
  1733                           	callstack 0
  1734   000564                     _I2C_2_Master_Start:
  1735                           	callstack 25
  1736   000564                     
  1737                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1738   000564  EC68  F002         	call	_I2C_2_Master_Idle	;wreg free
  1739   000568                     
  1740                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1741   000568  010E               	movlb	14	; () banked
  1742   00056A  81DA               	bsf	218,0,b	;volatile
  1743   00056C                     
  1744                           ; BSR set to: 14
  1745   00056C  0012               	return		;funcret
  1746   00056E                     __end_of_I2C_2_Master_Start:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _I2C_2_Master_Idle *****************
  1750 ;; Defined at:
  1751 ;;		line 22 in file "i2c.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;Total ram usage:        1 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 2
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_I2C_2_Master_Start
  1776 ;;		_I2C_2_Master_RepStart
  1777 ;;		_I2C_2_Master_Stop
  1778 ;;		_I2C_2_Master_Write
  1779 ;;		_I2C_2_Master_Read
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text15
  1784   0004D0                     __ptext15:
  1785                           	callstack 0
  1786   0004D0                     _I2C_2_Master_Idle:
  1787                           	callstack 25
  1788   0004D0                     l193:
  1789   0004D0  010E               	movlb	14	; () banked
  1790   0004D2  B5D8               	btfsc	216,2,b	;volatile
  1791   0004D4  EF6E  F002         	goto	u11
  1792   0004D8  EF70  F002         	goto	u10
  1793   0004DC                     u11:
  1794   0004DC  EF68  F002         	goto	l193
  1795   0004E0                     u10:
  1796   0004E0                     
  1797                           ; BSR set to: 14
  1798   0004E0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1799   0004E4  0E1F               	movlw	31
  1800   0004E6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  1801   0004E8  A4D8               	btfss	status,2,c
  1802   0004EA  EF79  F002         	goto	u21
  1803   0004EE  EF7B  F002         	goto	u20
  1804   0004F2                     u21:
  1805   0004F2  EF68  F002         	goto	l193
  1806   0004F6                     u20:
  1807   0004F6                     
  1808                           ; BSR set to: 14
  1809   0004F6  0012               	return		;funcret
  1810   0004F8                     __end_of_I2C_2_Master_Idle:
  1811                           	callstack 0
  1812                           
  1813 ;; *************** function _I2C_2_Master_Init *****************
  1814 ;; Defined at:
  1815 ;;		line 4 in file "i2c.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1833 ;;Total ram usage:        0 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; Hardware stack levels required when called: 2
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_color_click_init
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text16
  1844   0004A6                     __ptext16:
  1845                           	callstack 0
  1846   0004A6                     _I2C_2_Master_Init:
  1847                           	callstack 27
  1848   0004A6                     
  1849                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1850   0004A6  010E               	movlb	14	; () banked
  1851   0004A8  51D9               	movf	217,w,b	;volatile
  1852   0004AA  0BF0               	andlw	-16
  1853   0004AC  0908               	iorlw	8
  1854   0004AE  6FD9               	movwf	217,b	;volatile
  1855   0004B0                     
  1856                           ; BSR set to: 14
  1857                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1858   0004B0  8BD9               	bsf	217,5,b	;volatile
  1859                           
  1860                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1861   0004B2  0E9F               	movlw	159
  1862   0004B4  6FD6               	movwf	214,b	;volatile
  1863   0004B6                     
  1864                           ; BSR set to: 14
  1865                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1866   0004B6  8A84               	bsf	132,5,c	;volatile
  1867   0004B8                     
  1868                           ; BSR set to: 14
  1869                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1870   0004B8  8C84               	bsf	132,6,c	;volatile
  1871   0004BA                     
  1872                           ; BSR set to: 14
  1873                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1874   0004BA  9BA7               	bcf	167,5,b	;volatile
  1875   0004BC                     
  1876                           ; BSR set to: 14
  1877                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1878   0004BC  9DA7               	bcf	167,6,b	;volatile
  1879                           
  1880                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1881   0004BE  0E1D               	movlw	29
  1882   0004C0  6F1D               	movwf	29,b	;volatile
  1883                           
  1884                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1885   0004C2  0E1E               	movlw	30
  1886   0004C4  6F1C               	movwf	28,b	;volatile
  1887                           
  1888                           ;i2c.c: 18:   RD5PPS=0x1C;
  1889   0004C6  0E1C               	movlw	28
  1890   0004C8  6F6F               	movwf	111,b	;volatile
  1891                           
  1892                           ;i2c.c: 19:   RD6PPS=0x1B;
  1893   0004CA  0E1B               	movlw	27
  1894   0004CC  6F70               	movwf	112,b	;volatile
  1895   0004CE                     
  1896                           ; BSR set to: 14
  1897   0004CE  0012               	return		;funcret
  1898   0004D0                     __end_of_I2C_2_Master_Init:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _Timer0_init *****************
  1902 ;; Defined at:
  1903 ;;		line 7 in file "timers.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 2
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text17
  1932   000518                     __ptext17:
  1933                           	callstack 0
  1934   000518                     _Timer0_init:
  1935                           	callstack 28
  1936   000518                     
  1937                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  1938   000518  50D6               	movf	214,w,c	;volatile
  1939   00051A  0B1F               	andlw	-225
  1940   00051C  0940               	iorlw	64
  1941   00051E  6ED6               	movwf	214,c	;volatile
  1942   000520                     
  1943                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  1944   000520  88D6               	bsf	214,4,c	;volatile
  1945                           
  1946                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  1947   000522  50D6               	movf	214,w,c	;volatile
  1948   000524  0BF0               	andlw	-16
  1949   000526  0908               	iorlw	8
  1950   000528  6ED6               	movwf	214,c	;volatile
  1951                           
  1952                           ;timers.c: 12:     TMR0H=0b11100111;
  1953   00052A  0EE7               	movlw	231
  1954   00052C  6ED4               	movwf	212,c	;volatile
  1955                           
  1956                           ;timers.c: 13:     TMR0L=0b10010101;
  1957   00052E  0E95               	movlw	149
  1958   000530  6ED3               	movwf	211,c	;volatile
  1959   000532                     
  1960                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  1961   000532  88D5               	bsf	213,4,c	;volatile
  1962   000534                     
  1963                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  1964   000534  8ED5               	bsf	213,7,c	;volatile
  1965   000536  0012               	return		;funcret
  1966   000538                     __end_of_Timer0_init:
  1967                           	callstack 0
  1968                           
  1969 ;; *************** function _Interrupts_init *****************
  1970 ;; Defined at:
  1971 ;;		line 10 in file "interrupts.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		None
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; Hardware stack levels required when called: 2
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text18
  2000   000544                     __ptext18:
  2001                           	callstack 0
  2002   000544                     _Interrupts_init:
  2003                           	callstack 28
  2004   000544                     
  2005                           ;interrupts.c: 12:     INTCONbits.PEIE = 1;
  2006   000544  8CF2               	bsf	242,6,c	;volatile
  2007                           
  2008                           ;interrupts.c: 13:     PIE0bits.TMR0IE = 1;
  2009   000546  010E               	movlb	14	; () banked
  2010   000548  8B29               	bsf	41,5,b	;volatile
  2011                           
  2012                           ;interrupts.c: 14:     PIE2bits.C1IE = 1;
  2013   00054A  812B               	bsf	43,0,b	;volatile
  2014                           
  2015                           ;interrupts.c: 15:     INTCONbits.GIE = 1;
  2016   00054C  8EF2               	bsf	242,7,c	;volatile
  2017   00054E                     
  2018                           ; BSR set to: 14
  2019   00054E  0012               	return		;funcret
  2020   000550                     __end_of_Interrupts_init:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _HighISR *****************
  2024 ;; Defined at:
  2025 ;;		line 22 in file "interrupts.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2043 ;;Total ram usage:        0 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 1
  2046 ;; This function calls:
  2047 ;;		_increment_seconds
  2048 ;; This function is called by:
  2049 ;;		Interrupt level 2
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	intcode
  2054   000008                     __pintcode:
  2055                           	callstack 0
  2056   000008                     _HighISR:
  2057                           	callstack 25
  2058                           
  2059                           ; BSR set to: 14
  2060                           ;incstack = 0
  2061   000008  8230               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2062   00000A                     
  2063                           ;interrupts.c: 24:     if(PIR0bits.TMR0IF == 1){
  2064   00000A  010E               	movlb	14	; () banked
  2065   00000C  AB33               	btfss	51,5,b	;volatile
  2066   00000E  EF0B  F000         	goto	i2u19_41
  2067   000012  EF0D  F000         	goto	i2u19_40
  2068   000016                     i2u19_41:
  2069   000016  EF15  F000         	goto	i2l234
  2070   00001A                     i2u19_40:
  2071   00001A                     
  2072                           ; BSR set to: 14
  2073                           ;interrupts.c: 25:     increment_seconds();
  2074   00001A  ECB7  F002         	call	_increment_seconds	;wreg free
  2075   00001E                     
  2076                           ;interrupts.c: 27:     TMR0H=0b11100111;
  2077   00001E  0EE7               	movlw	231
  2078   000020  6ED4               	movwf	212,c	;volatile
  2079   000022                     
  2080                           ;interrupts.c: 28:     TMR0L=0b10010101;
  2081   000022  0E95               	movlw	149
  2082   000024  6ED3               	movwf	211,c	;volatile
  2083   000026                     
  2084                           ;interrupts.c: 30:     PIR0bits.TMR0IF = 0;
  2085   000026  010E               	movlb	14	; () banked
  2086   000028  9B33               	bcf	51,5,b	;volatile
  2087   00002A                     i2l234:
  2088                           
  2089                           ; BSR set to: 14
  2090   00002A  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2091   00002C  0011               	retfie		f
  2092   00002E                     __end_of_HighISR:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _increment_seconds *****************
  2096 ;; Defined at:
  2097 ;;		line 220 in file "dc_motor.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_HighISR
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text20
  2125   00056E                     __ptext20:
  2126                           	callstack 0
  2127   00056E                     _increment_seconds:
  2128                           	callstack 25
  2129   00056E                     
  2130                           ;dc_motor.c: 222:     seconds += 1;
  2131   00056E  4A2C               	infsnz	_seconds^0,f,c
  2132   000570  2A2D               	incf	(_seconds+1)^0,f,c
  2133   000572  0012               	return		;funcret
  2134   000574                     __end_of_increment_seconds:
  2135                           	callstack 0
  2136   000000                     
  2137                           	psect	rparam
  2138   000000                     
  2139                           	psect	temp
  2140   000030                     btemp:
  2141                           	callstack 0
  2142   000030                     	ds	1
  2143   000000                     int$flags	set	btemp
  2144   000000                     wtemp8	set	btemp+1
  2145   000000                     ttemp5	set	btemp+1
  2146   000000                     ttemp6	set	btemp+4
  2147   000000                     ttemp7	set	btemp+8
  2148                           
  2149                           	psect	idloc
  2150                           
  2151                           ;Config register IDLOC0 @ 0x200000
  2152                           ;	unspecified, using default values
  2153   200000                     	org	2097152
  2154   200000  0FFF               	dw	4095
  2155                           
  2156                           ;Config register IDLOC1 @ 0x200002
  2157                           ;	unspecified, using default values
  2158   200002                     	org	2097154
  2159   200002  0FFF               	dw	4095
  2160                           
  2161                           ;Config register IDLOC2 @ 0x200004
  2162                           ;	unspecified, using default values
  2163   200004                     	org	2097156
  2164   200004  0FFF               	dw	4095
  2165                           
  2166                           ;Config register IDLOC3 @ 0x200006
  2167                           ;	unspecified, using default values
  2168   200006                     	org	2097158
  2169   200006  0FFF               	dw	4095
  2170                           
  2171                           ;Config register IDLOC4 @ 0x200008
  2172                           ;	unspecified, using default values
  2173   200008                     	org	2097160
  2174   200008  0FFF               	dw	4095
  2175                           
  2176                           ;Config register IDLOC5 @ 0x20000A
  2177                           ;	unspecified, using default values
  2178   20000A                     	org	2097162
  2179   20000A  0FFF               	dw	4095
  2180                           
  2181                           ;Config register IDLOC6 @ 0x20000C
  2182                           ;	unspecified, using default values
  2183   20000C                     	org	2097164
  2184   20000C  0FFF               	dw	4095
  2185                           
  2186                           ;Config register IDLOC7 @ 0x20000E
  2187                           ;	unspecified, using default values
  2188   20000E                     	org	2097166
  2189   20000E  0FFF               	dw	4095
  2190                           
  2191                           	psect	config
  2192                           
  2193                           ;Config register CONFIG1L @ 0x300000
  2194                           ;	External Oscillator mode Selection bits
  2195                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2196                           ;	Power-up default value for COSC bits
  2197                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2198   300000                     	org	3145728
  2199   300000  AA                 	db	170
  2200                           
  2201                           ;Config register CONFIG1H @ 0x300001
  2202                           ;	unspecified, using default values
  2203                           ;	Clock Out Enable bit
  2204                           ;	CLKOUTEN = 0x1, unprogrammed default
  2205                           ;	Clock Switch Enable bit
  2206                           ;	CSWEN = 0x1, unprogrammed default
  2207                           ;	Fail-Safe Clock Monitor Enable bit
  2208                           ;	FCMEN = 0x1, unprogrammed default
  2209   300001                     	org	3145729
  2210   300001  FF                 	db	255
  2211                           
  2212                           ;Config register CONFIG2L @ 0x300002
  2213                           ;	unspecified, using default values
  2214                           ;	Master Clear Enable bit
  2215                           ;	MCLRE = 0x1, unprogrammed default
  2216                           ;	Power-up Timer Enable bit
  2217                           ;	PWRTE = 0x1, unprogrammed default
  2218                           ;	Low-power BOR enable bit
  2219                           ;	LPBOREN = 0x1, unprogrammed default
  2220                           ;	Brown-out Reset Enable bits
  2221                           ;	BOREN = 0x3, unprogrammed default
  2222   300002                     	org	3145730
  2223   300002  FF                 	db	255
  2224                           
  2225                           ;Config register CONFIG2H @ 0x300003
  2226                           ;	unspecified, using default values
  2227                           ;	Brown Out Reset Voltage selection bits
  2228                           ;	BORV = 0x3, unprogrammed default
  2229                           ;	ZCD Disable bit
  2230                           ;	ZCD = 0x1, unprogrammed default
  2231                           ;	PPSLOCK bit One-Way Set Enable bit
  2232                           ;	PPS1WAY = 0x1, unprogrammed default
  2233                           ;	Stack Full/Underflow Reset Enable bit
  2234                           ;	STVREN = 0x1, unprogrammed default
  2235                           ;	Debugger Enable bit
  2236                           ;	DEBUG = 0x1, unprogrammed default
  2237                           ;	Extended Instruction Set Enable bit
  2238                           ;	XINST = 0x1, unprogrammed default
  2239   300003                     	org	3145731
  2240   300003  FF                 	db	255
  2241                           
  2242                           ;Config register CONFIG3L @ 0x300004
  2243                           ;	WDT Period Select bits
  2244                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2245                           ;	WDT operating mode
  2246                           ;	WDTE = OFF, WDT Disabled
  2247   300004                     	org	3145732
  2248   300004  9F                 	db	159
  2249                           
  2250                           ;Config register CONFIG3H @ 0x300005
  2251                           ;	unspecified, using default values
  2252                           ;	WDT Window Select bits
  2253                           ;	WDTCWS = 0x7, unprogrammed default
  2254                           ;	WDT input clock selector
  2255                           ;	WDTCCS = 0x7, unprogrammed default
  2256   300005                     	org	3145733
  2257   300005  FF                 	db	255
  2258                           
  2259                           ;Config register CONFIG4L @ 0x300006
  2260                           ;	unspecified, using default values
  2261                           ;	Write Protection Block 0
  2262                           ;	WRT0 = 0x1, unprogrammed default
  2263                           ;	Write Protection Block 1
  2264                           ;	WRT1 = 0x1, unprogrammed default
  2265                           ;	Write Protection Block 2
  2266                           ;	WRT2 = 0x1, unprogrammed default
  2267                           ;	Write Protection Block 3
  2268                           ;	WRT3 = 0x1, unprogrammed default
  2269                           ;	Write Protection Block 3
  2270                           ;	WRT4 = 0x1, unprogrammed default
  2271                           ;	Write Protection Block 3
  2272                           ;	WRT5 = 0x1, unprogrammed default
  2273                           ;	Write Protection Block 3
  2274                           ;	WRT6 = 0x1, unprogrammed default
  2275                           ;	Write Protection Block 3
  2276                           ;	WRT7 = 0x1, unprogrammed default
  2277   300006                     	org	3145734
  2278   300006  FF                 	db	255
  2279                           
  2280                           ;Config register CONFIG4H @ 0x300007
  2281                           ;	unspecified, using default values
  2282                           ;	Configuration Register Write Protection bit
  2283                           ;	WRTC = 0x1, unprogrammed default
  2284                           ;	Boot Block Write Protection bit
  2285                           ;	WRTB = 0x1, unprogrammed default
  2286                           ;	Data EEPROM Write Protection bit
  2287                           ;	WRTD = 0x1, unprogrammed default
  2288                           ;	Scanner Enable bit
  2289                           ;	SCANE = 0x1, unprogrammed default
  2290                           ;	Low Voltage Programming Enable bit
  2291                           ;	LVP = 0x1, unprogrammed default
  2292   300007                     	org	3145735
  2293   300007  FF                 	db	255
  2294                           
  2295                           ;Config register CONFIG5L @ 0x300008
  2296                           ;	unspecified, using default values
  2297                           ;	UserNVM Program Memory Code Protection bit
  2298                           ;	CP = 0x1, unprogrammed default
  2299                           ;	DataNVM Memory Code Protection bit
  2300                           ;	CPD = 0x1, unprogrammed default
  2301   300008                     	org	3145736
  2302   300008  FF                 	db	255
  2303                           
  2304                           ;Config register CONFIG5H @ 0x300009
  2305                           ;	unspecified, using default values
  2306   300009                     	org	3145737
  2307   300009  FF                 	db	255
  2308                           
  2309                           ;Config register CONFIG6L @ 0x30000A
  2310                           ;	unspecified, using default values
  2311                           ;	Table Read Protection Block 0
  2312                           ;	EBTR0 = 0x1, unprogrammed default
  2313                           ;	Table Read Protection Block 1
  2314                           ;	EBTR1 = 0x1, unprogrammed default
  2315                           ;	Table Read Protection Block 2
  2316                           ;	EBTR2 = 0x1, unprogrammed default
  2317                           ;	Table Read Protection Block 3
  2318                           ;	EBTR3 = 0x1, unprogrammed default
  2319                           ;	Table Read Protection Block 4
  2320                           ;	EBTR4 = 0x1, unprogrammed default
  2321                           ;	Table Read Protection Block 5
  2322                           ;	EBTR5 = 0x1, unprogrammed default
  2323                           ;	Table Read Protection Block 6
  2324                           ;	EBTR6 = 0x1, unprogrammed default
  2325                           ;	Table Read Protection Block 7
  2326                           ;	EBTR7 = 0x1, unprogrammed default
  2327   30000A                     	org	3145738
  2328   30000A  FF                 	db	255
  2329                           
  2330                           ;Config register CONFIG6H @ 0x30000B
  2331                           ;	unspecified, using default values
  2332                           ;	Boot Block Table Read Protection bit
  2333                           ;	EBTRB = 0x1, unprogrammed default
  2334   30000B                     	org	3145739
  2335   30000B  FF                 	db	255
  2336                           tosu	equ	0xFFF
  2337                           tosh	equ	0xFFE
  2338                           tosl	equ	0xFFD
  2339                           stkptr	equ	0xFFC
  2340                           pclatu	equ	0xFFB
  2341                           pclath	equ	0xFFA
  2342                           pcl	equ	0xFF9
  2343                           tblptru	equ	0xFF8
  2344                           tblptrh	equ	0xFF7
  2345                           tblptrl	equ	0xFF6
  2346                           tablat	equ	0xFF5
  2347                           prodh	equ	0xFF4
  2348                           prodl	equ	0xFF3
  2349                           indf0	equ	0xFEF
  2350                           postinc0	equ	0xFEE
  2351                           postdec0	equ	0xFED
  2352                           preinc0	equ	0xFEC
  2353                           plusw0	equ	0xFEB
  2354                           fsr0h	equ	0xFEA
  2355                           fsr0l	equ	0xFE9
  2356                           wreg	equ	0xFE8
  2357                           indf1	equ	0xFE7
  2358                           postinc1	equ	0xFE6
  2359                           postdec1	equ	0xFE5
  2360                           preinc1	equ	0xFE4
  2361                           plusw1	equ	0xFE3
  2362                           fsr1h	equ	0xFE2
  2363                           fsr1l	equ	0xFE1
  2364                           bsr	equ	0xFE0
  2365                           indf2	equ	0xFDF
  2366                           postinc2	equ	0xFDE
  2367                           postdec2	equ	0xFDD
  2368                           preinc2	equ	0xFDC
  2369                           plusw2	equ	0xFDB
  2370                           fsr2h	equ	0xFDA
  2371                           fsr2l	equ	0xFD9
  2372                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    TimedfullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    TimedfullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    TimedfullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    TimedfullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S1009DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S1009DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_get_color_code
    _get_color_code->_color_read_Blue
    _get_color_code->_color_read_Clear
    _get_color_code->_color_read_Green
    _get_color_code->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    1461
                                             15 COMRAM    20    20      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                     _get_color_code
                    _initDCmotorsPWM
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_color_code                                       4     2      2     810
                                             11 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _set_led_color                                        2     0      2     446
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      30
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0       0
                  _increment_seconds
 ---------------------------------------------------------------------------------
 (6) _increment_seconds                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _get_color_code
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _set_led_color
   _initDCmotorsPWM

 _HighISR (ROOT)
   _increment_seconds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      2F       1       50.0%
BITBIGSFRllllhh     52      0       0      41        0.0%
BITBIGSFRllllhh     46      0       0      43        0.0%
BITBIGSFRllllll     35      0       0      52        0.0%
BITBIGSFRllllll     2D      0       0      56        0.0%
BITBIGSFRllllhh     20      0       0      45        0.0%
BITBIGSFRllllhh     1E      0       0      47        0.0%
BITBIGSFRhlll       1D      0       0      38        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRhhll       13      0       0      34        0.0%
BITBIGSFRllllhh     11      0       0      48        0.0%
BITBIGSFRhlhh        E      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllhh      C      0       0      46        0.0%
BITBIGSFRllllll      B      0       0      55        0.0%
BITBIGSFRllllll      7      0       0      53        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRhllh        2      0       0      37        0.0%
BITBIGSFRllllll      1      0       0      54        0.0%
BITBIGSFRllllhh      1      0       0      44        0.0%
BITBIGSFRhlhl        1      0       0      36        0.0%
BITBIGSFRllllhl      1      0       0      49        0.0%
BITBIGSFRlllh        1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      57        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 29 13:10:25 2022

               _color_read_Red 0270                _color_read_Blue 0360                             l41 0476  
                           l50 03AE                             l44 0516                             l60 03C6  
                           l53 030E                             l61 03DA                             l62 03DC  
                           l47 02BE                             l63 03F0                             l71 0154  
                           l56 035E                             l65 03F2                             l59 03C4  
                           u10 04E0                             u11 04DC                             u20 04F6  
                           u21 04F2                             u30 041E                             u31 0416  
                           u48 0420               _color_read_Clear 0310               _color_read_Green 02C0  
            ??_Interrupts_init 0001                            l202 0558                            l211 0434  
                          l205 0562                            l125 01E4                            l208 0542  
                          l228 054E                            l190 04CE                            l193 04D0  
                          l196 04F6                            l277 0536                            l199 056C  
                          l953 04D0                            l961 053A                            l955 04E0  
                          l963 053E                            l971 0554                            l957 0564  
                          l965 055A                            l981 0430                            l973 03F6  
                          l991 04B6                            l959 0568                            l967 055E  
                          l983 0432                            l975 03FA                            l993 04B8  
                          l977 0402                            l969 0550                            l995 04BA  
                          l987 04A6                            l979 040A                            l997 04BC  
                          l989 04B0                            u600 012A                            _RGB 0024  
                          u601 0126                            u610 0140                            u611 013C  
                          u560 03BE                            u561 03BA                            u570 03D4  
                          u571 03D0                            u627 025A                            u580 03EA  
                          u581 03E6                            u637 0054                            u590 0114  
                          u591 0110                            u647 0084                            u657 00B4  
                          u667 00E4                            u677 044A                            wreg 000FE8  
                         l1133 0544                           l1141 0534                           l1135 0518  
                         l1137 0520                           l1139 0532                           l1501 02C0  
                         l1503 0306                           l1521 0436                           l1513 03B0  
                         l1601 01D8                           l1531 0468                           l1523 043A  
                         l1507 0310                           l1515 03BE                           l1603 01E2  
                         l1611 01F2                           l1541 0472                           l1533 046A  
                         l1525 0444                           l1509 0356                           l1517 03D4  
                         l1621 0208                           l1613 01FE                           l1605 01E6  
                         l1543 0474                           l1535 046C                           l1527 0454  
                         l1519 03EA                           l1551 0062                           l1631 0230  
                         l1623 020C                           l1615 01FE                           l1607 01EA  
                         l1537 046E                           l1529 045E                           l1561 00C2  
                         l1553 006E                           l1545 0032                           l1641 0250  
                         l1633 0234                           l1625 0220                           l1617 0202  
                         l1609 01EE                           l1539 0470                           l1491 02B6  
                         l1571 012A                           l1563 00DA                           l1555 0092  
                         l1547 003E                           l1635 023C                           l1627 0228  
                         l1619 0204                           l1573 0140                           l1565 00F2  
                         l1557 009E                           l1549 004A                           l1637 0244  
                         l1629 022C                           l1487 04FA                           l1495 0360  
                         l1567 00FE                           l1559 00AA                           l1591 01BE  
                         l1583 0156                           l1639 024C                           l1497 03A6  
                         l1489 0270                           l1569 0114                           l1593 01C0  
                         l1585 0166                           l1579 014C                           l1595 01CA  
                         l1587 0190                           l1597 01CC                           l1589 01B4  
                         l1599 01D6                           _T2PR 000FBC                           _main 01E6  
                         btemp 0030                           start 002E         __end_of_color_read_Red 02C0  
              __end_of_HighISR 002E                   ___param_bank 000000                          ?_main 0001  
                        i2l234 002A                          i2l163 0572                          _TMR0H 000FD4  
                        _TMR0L 000FD3     __end_of_I2C_2_Master_Start 056E     __end_of_I2C_2_Master_Write 0544  
                        tablat 000FF5                          ttemp5 0031                          ttemp6 0034  
                        ttemp7 0038                          status 000FD8                          wtemp8 0031  
      __end_of_color_read_Blue 03B0          _I2C_2_Master_RepStart 0550                ?_color_read_Red 0005  
              __initialization 0478                   __end_of_main 0270                         ??_main 0010  
                __activetblptr 000000                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         i2l1131 056E  
                       _RD6PPS 000E70                         _RE4PPS 000E76                         i2l1221 001A  
                       i2l1223 001E                         i2l1225 0022                         i2l1227 0026  
                       i2l1219 000A                         _RG6PPS 000E88                      ??_HighISR 0001  
     __end_of_color_click_init 0478               ??_get_color_code 000E                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                         clear_0 0496                         isa$std 000001  
                 __pdataCOMRAM 002E                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8              ??_initDCmotorsPWM 0003          __end_of_set_led_color 03F4  
                   __accesstop 0060        __end_of__initialization 049C       __end_of_color_read_Clear 0360  
     __end_of_color_read_Green 0310         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0005                _Interrupts_init 0544                 __pcstackCOMRAM 0001  
          __end_of_Timer0_init 0538              _color_writetoaddr 04F8                   _T2CLKCONbits 000FBF  
           ?_color_writetoaddr 0003            ??_color_writetoaddr 0004                        i2u19_40 001A  
                      i2u19_41 0016                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
      __end_of_Interrupts_init 0550         color_writetoaddr@value 0003               ??_color_read_Red 0007  
                      _HighISR 0008      __end_of_color_writetoaddr 0518             _I2C_2_Master_Start 0564  
           _I2C_2_Master_Write 0538                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 0518            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                        __pcinit 0478                        __ramtop 0E00  
                      __ptext0 01E6                        __ptext1 0156                        __ptext2 0032  
                      __ptext3 03B0                        __ptext4 0270                        __ptext5 02C0  
                      __ptext6 0310                        __ptext7 0360                        __ptext8 0550  
                      __ptext9 03F4                      _T2CONbits 000FBD                        _seconds 002C  
                    _T2HLTbits 000FBE           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 049C              ?_color_click_init 0001             ??_color_click_init 0005  
                      postinc0 000FEE                _initDCmotorsPWM 0156                      _TRISAbits 000F81  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002               ?_Interrupts_init 0001  
                  _CCP1CONbits 000FAB              _increment_seconds 056E              ?_color_read_Clear 0005  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  _CCP4CONbits 000F22                     main@motorL 0012                     main@motorR 001B  
           ?_increment_seconds 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
          ??_increment_seconds 0001                  __pidataCOMRAM 0574            color_read_Clear@tmp 000A  
          start_initialization 0478      __end_of_increment_seconds 0574            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 01E6                    __pbssCOMRAM 0024                       ?_HighISR 0001  
                 ?_Timer0_init 0001                      __pintcode 0008           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004              _I2C_2_Master_Idle 04D0              _I2C_2_Master_Init 04A6  
            _I2C_2_Master_Read 03F4              _I2C_2_Master_Stop 055A             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0001            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                       _LATAbits 000F79                  _set_led_color 03B0  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 000F7B                       _LATDbits 000F7C  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                       _PIE0bits 000E29                       _PIE2bits 000E2B  
                     _PIR0bits 000E33               ?_initDCmotorsPWM 0001                      _wait_time 002E  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8             set_led_color@color 0001  
    __end_of_I2C_2_Master_Idle 04F8      __end_of_I2C_2_Master_Init 04D0      __end_of_I2C_2_Master_Read 0436  
    __end_of_I2C_2_Master_Stop 0564    I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007  
               ?_set_led_color 0001  __end_of_I2C_2_Master_RepStart 055A             color_read_Blue@tmp 000A  
                     __Hrparam 0000                       __Lrparam 0000                 _get_color_code 0032  
                   _ANSELDbits 000EA7                     _ANSELFbits 000EB4                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                       __ptext10 0436                       __ptext11 04F8  
                     __ptext20 056E                       __ptext12 0538                       __ptext13 055A  
                     __ptext14 0564                       __ptext15 04D0                       __ptext16 04A6  
                     __ptext17 0518                       __ptext18 0544                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       isa$xinst 000000                       int$flags 0030  
       __end_of_get_color_code 0156                     _INTCONbits 000FF2                ??_set_led_color 0003  
                     intlevel2 0000                ?_get_color_code 000C               _color_click_init 0436  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
