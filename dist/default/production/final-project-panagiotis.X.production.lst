

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Dec 07 21:18:37 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Version 2.40
    57                           ; Generated 04/07/2022 GMT
    58                           ; 
    59                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F67K40 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     
    92                           	psect	idataCOMRAM
    93   0011B4                     __pidataCOMRAM:
    94                           	callstack 0
    95                           
    96                           ;initializer for _Black_setup
    97   0011B4  0404               	dw	1028
    98   0011B6  0000               	dw	0
    99   0011B8  024B               	dw	587
   100   0011BA  0000               	dw	0
   101   0011BC  00A1               	dw	161
   102   0011BE  0000               	dw	0
   103                           
   104                           ;initializer for _wait_time
   105   0011C0  00DC               	dw	220
   106                           
   107                           ;initializer for _wall_coef
   108   0011C2  000F               	dw	15
   109                           
   110                           	psect	idataBANK0
   111   000E52                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for _White_setup
   115   000E52  28FC               	dw	10492
   116   000E54  0000               	dw	0
   117   000E56  1B55               	dw	6997
   118   000E58  0000               	dw	0
   119   000E5A  0770               	dw	1904
   120   000E5C  0000               	dw	0
   121                           
   122                           ;initializer for _Lightblue_rule
   123   000E5E  0026               	dw	38
   124   000E60  0000               	dw	0
   125   000E62  0048               	dw	72
   126   000E64  0000               	dw	0
   127   000E66  0054               	dw	84
   128   000E68  0000               	dw	0
   129                           
   130                           ;initializer for _Orange_rule
   131   000E6A  005C               	dw	92
   132   000E6C  0000               	dw	0
   133   000E6E  0027               	dw	39
   134   000E70  0000               	dw	0
   135   000E72  001C               	dw	28
   136   000E74  0000               	dw	0
   137                           
   138                           ;initializer for _Pink_rule
   139   000E76  004D               	dw	77
   140   000E78  0000               	dw	0
   141   000E7A  003C               	dw	60
   142   000E7C  0000               	dw	0
   143   000E7E  0040               	dw	64
   144   000E80  0000               	dw	0
   145                           
   146                           ;initializer for _Yellow_rule
   147   000E82  005D               	dw	93
   148   000E84  0000               	dw	0
   149   000E86  004C               	dw	76
   150   000E88  0000               	dw	0
   151   000E8A  0014               	dw	20
   152   000E8C  0000               	dw	0
   153                           
   154                           ;initializer for _Blue_rule
   155   000E8E  0003               	dw	3
   156   000E90  0000               	dw	0
   157   000E92  0009               	dw	9
   158   000E94  0000               	dw	0
   159   000E96  0024               	dw	36
   160   000E98  0000               	dw	0
   161                           
   162                           ;initializer for _Green_rule
   163   000E9A  0019               	dw	25
   164   000E9C  0000               	dw	0
   165   000E9E  0036               	dw	54
   166   000EA0  0000               	dw	0
   167   000EA2  0008               	dw	8
   168   000EA4  0000               	dw	0
   169                           
   170                           ;initializer for _Red_rule
   171   000EA6  0048               	dw	72
   172   000EA8  0000               	dw	0
   173   000EAA  0002               	dw	2
   174   000EAC  0000               	dw	0
   175   000EAE  0002               	dw	2
   176   000EB0  0000               	dw	0
   177                           
   178                           	psect	idataBANK1
   179   0011C4                     __pidataBANK1:
   180                           	callstack 0
   181                           
   182                           ;initializer for _White_rule
   183   0011C4  0064               	dw	100
   184   0011C6  0000               	dw	0
   185   0011C8  0064               	dw	100
   186   0011CA  0000               	dw	0
   187   0011CC  0064               	dw	100
   188   0011CE  0000               	dw	0
   189   000000                     _T0CON0bits	set	4053
   190   000000                     _T0CON1bits	set	4054
   191   000000                     _TRISDbits	set	3972
   192   000000                     _SSP2CON2bits	set	3802
   193   000000                     _SSP2CLKPPS	set	3612
   194   000000                     _SSP2DATPPS	set	3613
   195   000000                     _RC7PPS	set	3689
   196   000000                     _RE2PPS	set	3700
   197   000000                     _ANSELFbits	set	3764
   198   000000                     _TRISAbits	set	3969
   199   000000                     _TRISFbits	set	3974
   200   000000                     _PORTFbits	set	3982
   201   000000                     _TRISGbits	set	3975
   202   000000                     _TRISCbits	set	3971
   203   000000                     _TRISEbits	set	3973
   204   000000                     _SSP2BUF	set	3797
   205   000000                     _SSP2ADD	set	3798
   206   000000                     _SSP2CON1bits	set	3801
   207   000000                     _LATAbits	set	3961
   208   000000                     _LATGbits	set	3967
   209   000000                     _CCPR4H	set	3873
   210   000000                     _CCPR3H	set	3877
   211   000000                     _T2PR	set	4028
   212   000000                     _T2CONbits	set	4029
   213   000000                     _CCPR2H	set	4006
   214   000000                     _CCPR1H	set	4010
   215   000000                     _LATCbits	set	3963
   216   000000                     _LATEbits	set	3965
   217   000000                     _LATFbits	set	3966
   218   000000                     _RE4PPS	set	3702
   219   000000                     _RG6PPS	set	3720
   220   000000                     _RD5PPS	set	3695
   221   000000                     _ANSELDbits	set	3751
   222   000000                     _TMR0L	set	4051
   223   000000                     _TMR0H	set	4052
   224   000000                     _INTCONbits	set	4082
   225   000000                     _T2CLKCONbits	set	4031
   226   000000                     _T2HLTbits	set	4030
   227   000000                     _CCP1CONbits	set	4011
   228   000000                     _CCPTMRS0bits	set	4013
   229   000000                     _CCP2CONbits	set	4007
   230   000000                     _CCP3CONbits	set	3878
   231   000000                     _CCP4CONbits	set	3874
   232   000000                     _SSP2CON2	set	3802
   233   000000                     _SSP2STAT	set	3800
   234   000000                     _PIE0bits	set	3625
   235   000000                     _RD6PPS	set	3696
   236   000000                     _PIE2bits	set	3627
   237   000000                     _PIR0bits	set	3635
   238                           
   239                           ; #config settings
   240                           
   241                           	psect	cinit
   242   000CEA                     __pcinit:
   243                           	callstack 0
   244   000CEA                     start_initialization:
   245                           	callstack 0
   246   000CEA                     __initialization:
   247                           	callstack 0
   248                           
   249                           ; Initialize objects allocated to BANK1 (12 bytes)
   250                           ; load TBLPTR registers with __pidataBANK1
   251   000CEA  0EC4               	movlw	low __pidataBANK1
   252   000CEC  6EF6               	movwf	tblptrl,c
   253   000CEE  0E11               	movlw	high __pidataBANK1
   254   000CF0  6EF7               	movwf	tblptrh,c
   255   000CF2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   256   000CF4  6EF8               	movwf	tblptru,c
   257   000CF6  EE01  F0DC         	lfsr	0,__pdataBANK1
   258   000CFA  EE10 F00C          	lfsr	1,12
   259   000CFE                     copy_data0:
   260   000CFE  0009               	tblrd		*+
   261   000D00  CFF5 FFEE          	movff	tablat,postinc0
   262   000D04  50E5               	movf	postdec1,w,c
   263   000D06  50E1               	movf	fsr1l,w,c
   264   000D08  E1FA               	bnz	copy_data0
   265                           
   266                           ; Initialize objects allocated to BANK0 (96 bytes)
   267                           ; load TBLPTR registers with __pidataBANK0
   268   000D0A  0E52               	movlw	low __pidataBANK0
   269   000D0C  6EF6               	movwf	tblptrl,c
   270   000D0E  0E0E               	movlw	high __pidataBANK0
   271   000D10  6EF7               	movwf	tblptrh,c
   272   000D12  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   273   000D14  6EF8               	movwf	tblptru,c
   274   000D16  EE00  F060         	lfsr	0,__pdataBANK0
   275   000D1A  EE10 F060          	lfsr	1,96
   276   000D1E                     copy_data1:
   277   000D1E  0009               	tblrd		*+
   278   000D20  CFF5 FFEE          	movff	tablat,postinc0
   279   000D24  50E5               	movf	postdec1,w,c
   280   000D26  50E1               	movf	fsr1l,w,c
   281   000D28  E1FA               	bnz	copy_data1
   282                           
   283                           ; Initialize objects allocated to COMRAM (16 bytes)
   284                           ; load TBLPTR registers with __pidataCOMRAM
   285   000D2A  0EB4               	movlw	low __pidataCOMRAM
   286   000D2C  6EF6               	movwf	tblptrl,c
   287   000D2E  0E11               	movlw	high __pidataCOMRAM
   288   000D30  6EF7               	movwf	tblptrh,c
   289   000D32  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   290   000D34  6EF8               	movwf	tblptru,c
   291   000D36  EE00  F04B         	lfsr	0,__pdataCOMRAM
   292   000D3A  EE10 F010          	lfsr	1,16
   293   000D3E                     copy_data2:
   294   000D3E  0009               	tblrd		*+
   295   000D40  CFF5 FFEE          	movff	tablat,postinc0
   296   000D44  50E5               	movf	postdec1,w,c
   297   000D46  50E1               	movf	fsr1l,w,c
   298   000D48  E1FA               	bnz	copy_data2
   299                           
   300                           ; Clear objects allocated to BANK1 (220 bytes)
   301   000D4A  EE01  F000         	lfsr	0,__pbssBANK1
   302   000D4E  0EDC               	movlw	220
   303   000D50                     clear_0:
   304   000D50  6AEE               	clrf	postinc0,c
   305   000D52  06E8               	decf	wreg,f,c
   306   000D54  E1FD               	bnz	clear_0
   307                           
   308                           ; Clear objects allocated to BANK0 (12 bytes)
   309   000D56  EE00  F0EC         	lfsr	0,__pbssBANK0
   310   000D5A  0E0C               	movlw	12
   311   000D5C                     clear_1:
   312   000D5C  6AEE               	clrf	postinc0,c
   313   000D5E  06E8               	decf	wreg,f,c
   314   000D60  E1FD               	bnz	clear_1
   315                           
   316                           ; Clear objects allocated to COMRAM (4 bytes)
   317   000D62  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   318   000D64  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   319   000D66  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   320   000D68  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   321   000D6A                     end_of_initialization:
   322                           	callstack 0
   323   000D6A                     __end_of__initialization:
   324                           	callstack 0
   325   000D6A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   326   000D6C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   327   000D6E  0100               	movlb	0
   328   000D70  EF8C  F004         	goto	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMRAM
   331   00005B                     __pbssCOMRAM:
   332                           	callstack 0
   333   00005B                     _index:
   334                           	callstack 0
   335   00005B                     	ds	2
   336   00005D                     _seconds:
   337                           	callstack 0
   338   00005D                     	ds	2
   339                           
   340                           	psect	dataCOMRAM
   341   00004B                     __pdataCOMRAM:
   342                           	callstack 0
   343   00004B                     _Black_setup:
   344                           	callstack 0
   345   00004B                     	ds	12
   346   000057                     _wait_time:
   347                           	callstack 0
   348   000057                     	ds	2
   349   000059                     _wall_coef:
   350                           	callstack 0
   351   000059                     	ds	2
   352                           
   353                           	psect	bssBANK0
   354   0000EC                     __pbssBANK0:
   355                           	callstack 0
   356   0000EC                     _RGB:
   357                           	callstack 0
   358   0000EC                     	ds	12
   359                           
   360                           	psect	dataBANK0
   361   000060                     __pdataBANK0:
   362                           	callstack 0
   363   000060                     _White_setup:
   364                           	callstack 0
   365   000060                     	ds	12
   366   00006C                     _Lightblue_rule:
   367                           	callstack 0
   368   00006C                     	ds	12
   369   000078                     _Orange_rule:
   370                           	callstack 0
   371   000078                     	ds	12
   372   000084                     _Pink_rule:
   373                           	callstack 0
   374   000084                     	ds	12
   375   000090                     _Yellow_rule:
   376                           	callstack 0
   377   000090                     	ds	12
   378   00009C                     _Blue_rule:
   379                           	callstack 0
   380   00009C                     	ds	12
   381   0000A8                     _Green_rule:
   382                           	callstack 0
   383   0000A8                     	ds	12
   384   0000B4                     _Red_rule:
   385                           	callstack 0
   386   0000B4                     	ds	12
   387                           
   388                           	psect	bssBANK1
   389   000100                     __pbssBANK1:
   390                           	callstack 0
   391   000100                     _Color_rules:
   392                           	callstack 0
   393   000100                     	ds	108
   394   00016C                     _timer_list:
   395                           	callstack 0
   396   00016C                     	ds	100
   397   0001D0                     _Black_rule:
   398                           	callstack 0
   399   0001D0                     	ds	12
   400                           
   401                           	psect	dataBANK1
   402   0001DC                     __pdataBANK1:
   403                           	callstack 0
   404   0001DC                     _White_rule:
   405                           	callstack 0
   406   0001DC                     	ds	12
   407                           
   408                           	psect	cstackBANK0
   409   0000C0                     __pcstackBANK0:
   410                           	callstack 0
   411   0000C0                     _get_color_code$2465:
   412                           	callstack 0
   413                           
   414                           ; 12 bytes @ 0x0
   415   0000C0                     	ds	12
   416   0000CC                     _get_color_code$458:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0xC
   420   0000CC                     	ds	4
   421   0000D0                     _get_color_code$459:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x10
   425   0000D0                     	ds	4
   426   0000D4                     _get_color_code$460:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x14
   430   0000D4                     	ds	4
   431   0000D8                     get_color_code@min_value:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x18
   435   0000D8                     	ds	2
   436   0000DA                     get_color_code@min_index:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x1A
   440   0000DA                     	ds	2
   441   0000DC                     get_color_code@value:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x1C
   445   0000DC                     	ds	2
   446   0000DE                     get_color_code@i:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x1E
   450   0000DE                     	ds	2
   451   0000E0                     get_color_code@NormalizedRGB:
   452                           	callstack 0
   453                           
   454                           ; 12 bytes @ 0x20
   455   0000E0                     	ds	12
   456                           
   457                           	psect	cstackCOMRAM
   458   000001                     __pcstackCOMRAM:
   459                           	callstack 0
   460   000001                     ??_I2C_2_Master_Idle:
   461   000001                     ?___wmul:
   462                           	callstack 0
   463   000001                     ?___lmul:
   464                           	callstack 0
   465   000001                     set_led_color@color:
   466                           	callstack 0
   467   000001                     initDCmotorsPWM@PWMperiod:
   468                           	callstack 0
   469   000001                     ___wmul@multiplier:
   470                           	callstack 0
   471   000001                     ___lmul@multiplier:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x0
   475   000001                     	ds	1
   476   000002                     ??_I2C_2_Master_Read:
   477   000002                     I2C_2_Master_Write@data_byte:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x1
   481   000002                     	ds	1
   482   000003                     color_writetoaddr@value:
   483                           	callstack 0
   484   000003                     I2C_2_Master_Read@ack:
   485                           	callstack 0
   486   000003                     ___wmul@multiplicand:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x2
   490   000003                     	ds	1
   491   000004                     color_writetoaddr@address:
   492                           	callstack 0
   493   000004                     I2C_2_Master_Read@tmp:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x3
   497   000004                     	ds	1
   498   000005                     ?_color_read_Red:
   499                           	callstack 0
   500   000005                     ?_color_read_Blue:
   501                           	callstack 0
   502   000005                     ?_color_read_Green:
   503                           	callstack 0
   504   000005                     ?_color_read_Clear:
   505                           	callstack 0
   506   000005                     ___wmul@product:
   507                           	callstack 0
   508   000005                     ___lmul@multiplicand:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x4
   512   000005                     	ds	2
   513   000007                     ??_color_read_Red:
   514   000007                     ??_color_read_Blue:
   515   000007                     ??_color_read_Green:
   516   000007                     ??_color_read_Clear:
   517   000007                     ?_get_color_distance:
   518                           	callstack 0
   519   000007                     ?___lwdiv:
   520                           	callstack 0
   521   000007                     ___lwdiv@dividend:
   522                           	callstack 0
   523   000007                     get_color_distance@color1:
   524                           	callstack 0
   525                           
   526                           ; 12 bytes @ 0x6
   527   000007                     	ds	2
   528   000009                     ___lwdiv@divisor:
   529                           	callstack 0
   530   000009                     ___lmul@product:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x8
   534   000009                     	ds	1
   535   00000A                     color_read_Red@tmp:
   536                           	callstack 0
   537   00000A                     color_read_Blue@tmp:
   538                           	callstack 0
   539   00000A                     color_read_Green@tmp:
   540                           	callstack 0
   541   00000A                     color_read_Clear@tmp:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x9
   545   00000A                     	ds	1
   546   00000B                     ___lwdiv@quotient:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0xA
   550   00000B                     	ds	1
   551   00000C                     ??_calibrate_white:
   552   00000C                     ?_get_wall_presence:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0xB
   556   00000C                     	ds	1
   557   00000D                     ?___lldiv:
   558                           	callstack 0
   559   00000D                     ___lwdiv@counter:
   560                           	callstack 0
   561   00000D                     ___lldiv@dividend:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0xC
   565   00000D                     	ds	1
   566   00000E                     ??_calibrate_black:
   567   00000E                     ??_get_wall_presence:
   568   00000E                     setMotorPWM@m:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0xD
   572   00000E                     	ds	2
   573   000010                     ??_setMotorPWM:
   574   000010                     calibrate_black@clear1:
   575                           	callstack 0
   576   000010                     get_wall_presence@clear1:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0xF
   580   000010                     	ds	1
   581   000011                     ___lldiv@divisor:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x10
   585   000011                     	ds	1
   586   000012                     setMotorPWM@posDuty:
   587                           	callstack 0
   588   000012                     calibrate_black@clear2:
   589                           	callstack 0
   590   000012                     get_wall_presence@clear2:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x11
   594   000012                     	ds	1
   595   000013                     setMotorPWM@negDuty:
   596                           	callstack 0
   597   000013                     get_color_distance@color2:
   598                           	callstack 0
   599                           
   600                           ; 12 bytes @ 0x12
   601   000013                     	ds	1
   602   000014                     stop@mL:
   603                           	callstack 0
   604   000014                     moveBack@mL:
   605                           	callstack 0
   606   000014                     moveForward@mL:
   607                           	callstack 0
   608   000014                     _calibrate_black$2466:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x13
   612   000014                     	ds	1
   613   000015                     ___lldiv@quotient:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x14
   617   000015                     	ds	1
   618   000016                     ??_color_click_init:
   619   000016                     stop@mR:
   620                           	callstack 0
   621   000016                     moveBack@mR:
   622                           	callstack 0
   623   000016                     moveForward@mR:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x15
   627   000016                     	ds	2
   628   000018                     moveBack@time:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x17
   632   000018                     	ds	1
   633   000019                     ___lldiv@counter:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x18
   637   000019                     	ds	1
   638   00001A                     ??_moveBack:
   639                           
   640                           ; 1 bytes @ 0x19
   641   00001A                     	ds	5
   642   00001F                     ??_get_color_distance:
   643                           
   644                           ; 1 bytes @ 0x1E
   645   00001F                     	ds	4
   646   000023                     _get_color_distance$417:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0x22
   650   000023                     	ds	4
   651   000027                     _get_color_distance$419:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x26
   655   000027                     	ds	4
   656   00002B                     _get_color_distance$421:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x2A
   660   00002B                     	ds	4
   661   00002F                     get_color_distance@R_offset:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x2E
   665   00002F                     	ds	2
   666   000031                     get_color_distance@G_offset:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x30
   670   000031                     	ds	2
   671   000033                     get_color_distance@B_offset:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x32
   675   000033                     	ds	2
   676   000035                     ?_get_color_code:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x34
   680   000035                     	ds	2
   681   000037                     ??_get_color_code:
   682                           
   683                           ; 1 bytes @ 0x36
   684   000037                     	ds	2
   685   000039                     main@motorL:
   686                           	callstack 0
   687                           
   688                           ; 9 bytes @ 0x38
   689   000039                     	ds	9
   690   000042                     main@motorR:
   691                           	callstack 0
   692                           
   693                           ; 9 bytes @ 0x41
   694   000042                     	ds	9
   695                           
   696 ;;
   697 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   698 ;;
   699 ;; *************** function _main *****************
   700 ;; Defined at:
   701 ;;		line 17 in file "main.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  color_code      2    0        unsigned int 
   706 ;;  motorR          9   65[COMRAM] struct DC_motor
   707 ;;  motorL          9   56[COMRAM] struct DC_motor
   708 ;;  PWMcycle        2    0        unsigned int 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   719 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   721 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   722 ;;Total ram usage:       18 bytes
   723 ;; Hardware stack levels required when called: 7
   724 ;; This function calls:
   725 ;;		_Interrupts_init
   726 ;;		_Timer0_init
   727 ;;		_color_click_init
   728 ;;		_get_color_code
   729 ;;		_get_wall_presence
   730 ;;		_initDCmotorsPWM
   731 ;;		_moveBack
   732 ;;		_moveForward
   733 ;;		_stop
   734 ;; This function is called by:
   735 ;;		Startup code after reset
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text0
   740   000918                     __ptext0:
   741                           	callstack 0
   742   000918                     _main:
   743                           	callstack 24
   744   000918                     
   745                           ;main.c: 18:     Timer0_init();
   746   000918  ECCA  F008         	call	_Timer0_init	;wreg free
   747   00091C                     
   748                           ;main.c: 19:     Interrupts_init();
   749   00091C  ECEE  F008         	call	_Interrupts_init	;wreg free
   750   000920                     
   751                           ;main.c: 20:     initDCmotorsPWM(99);
   752   000920  0E00               	movlw	0
   753   000922  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   754   000924  0E63               	movlw	99
   755   000926  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   756   000928  ECE7  F005         	call	_initDCmotorsPWM	;wreg free
   757   00092C                     
   758                           ;main.c: 22:     color_click_init();
   759   00092C  EC54  F003         	call	_color_click_init	;wreg free
   760   000930                     
   761                           ;main.c: 24:     ANSELFbits.ANSELF2 = 0;
   762   000930  010E               	movlb	14	; () banked
   763   000932  95B4               	bcf	180,2,b	;volatile
   764   000934                     
   765                           ; BSR set to: 14
   766                           ;main.c: 25:     TRISFbits.TRISF2 = 1;
   767   000934  8486               	bsf	134,2,c	;volatile
   768   000936                     
   769                           ; BSR set to: 14
   770                           ;main.c: 26:     struct DC_motor motorL, motorR;;main.c: 27:     motorL.power=0;
   771   000936  0E00               	movlw	0
   772   000938  6E39               	movwf	main@motorL^0,c
   773   00093A                     
   774                           ; BSR set to: 14
   775                           ;main.c: 28:     motorL.direction=1;
   776   00093A  0E01               	movlw	1
   777   00093C  6E3A               	movwf	(main@motorL+1)^0,c
   778   00093E                     
   779                           ; BSR set to: 14
   780                           ;main.c: 29:     motorL.brakemode=1;
   781   00093E  0E01               	movlw	1
   782   000940  6E3B               	movwf	(main@motorL+2)^0,c
   783   000942                     
   784                           ; BSR set to: 14
   785                           ;main.c: 30:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   786   000942  0EAA               	movlw	170
   787   000944  6E3E               	movwf	(main@motorL+5)^0,c
   788   000946  0E0F               	movlw	15
   789   000948  6E3F               	movwf	(main@motorL+6)^0,c
   790   00094A                     
   791                           ; BSR set to: 14
   792                           ;main.c: 31:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   793   00094A  0EA6               	movlw	166
   794   00094C  6E40               	movwf	(main@motorL+7)^0,c
   795   00094E  0E0F               	movlw	15
   796   000950  6E41               	movwf	(main@motorL+8)^0,c
   797   000952                     
   798                           ; BSR set to: 14
   799                           ;main.c: 32:     motorL.PWMperiod=PWMcycle;
   800   000952  0E00               	movlw	0
   801   000954  6E3D               	movwf	(main@motorL+4)^0,c
   802   000956  0E63               	movlw	99
   803   000958  6E3C               	movwf	(main@motorL+3)^0,c
   804   00095A                     
   805                           ; BSR set to: 14
   806                           ;main.c: 34:     motorR.power=0;
   807   00095A  0E00               	movlw	0
   808   00095C  6E42               	movwf	main@motorR^0,c
   809   00095E                     
   810                           ; BSR set to: 14
   811                           ;main.c: 35:     motorR.direction=1;
   812   00095E  0E01               	movlw	1
   813   000960  6E43               	movwf	(main@motorR+1)^0,c
   814   000962                     
   815                           ; BSR set to: 14
   816                           ;main.c: 36:     motorR.brakemode=1;
   817   000962  0E01               	movlw	1
   818   000964  6E44               	movwf	(main@motorR+2)^0,c
   819   000966                     
   820                           ; BSR set to: 14
   821                           ;main.c: 37:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   822   000966  0E25               	movlw	37
   823   000968  6E47               	movwf	(main@motorR+5)^0,c
   824   00096A  0E0F               	movlw	15
   825   00096C  6E48               	movwf	(main@motorR+6)^0,c
   826   00096E                     
   827                           ; BSR set to: 14
   828                           ;main.c: 38:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   829   00096E  0E21               	movlw	33
   830   000970  6E49               	movwf	(main@motorR+7)^0,c
   831   000972  0E0F               	movlw	15
   832   000974  6E4A               	movwf	(main@motorR+8)^0,c
   833   000976                     
   834                           ; BSR set to: 14
   835                           ;main.c: 39:     motorR.PWMperiod=PWMcycle;
   836   000976  0E00               	movlw	0
   837   000978  6E46               	movwf	(main@motorR+4)^0,c
   838   00097A  0E63               	movlw	99
   839   00097C  6E45               	movwf	(main@motorR+3)^0,c
   840   00097E                     l2733:
   841                           
   842                           ;main.c: 41:     moveForward(&motorL,&motorR);
   843   00097E  0E39               	movlw	low main@motorL
   844   000980  6E14               	movwf	moveForward@mL^0,c
   845   000982  0E00               	movlw	high main@motorL
   846   000984  6E15               	movwf	(moveForward@mL+1)^0,c
   847   000986  0E42               	movlw	low main@motorR
   848   000988  6E16               	movwf	moveForward@mR^0,c
   849   00098A  0E00               	movlw	high main@motorR
   850   00098C  6E17               	movwf	(moveForward@mR+1)^0,c
   851   00098E  EC59  F007         	call	_moveForward	;wreg free
   852   000992                     l2735:
   853                           
   854                           ;main.c: 43:         if(get_wall_presence() == 1){
   855   000992  EC99  F005         	call	_get_wall_presence	;wreg free
   856   000996  040C               	decf	?_get_wall_presence^0,w,c
   857   000998  100D               	iorwf	(?_get_wall_presence+1)^0,w,c
   858   00099A  A4D8               	btfss	status,2,c
   859   00099C  EFD2  F004         	goto	u1711
   860   0009A0  EFD4  F004         	goto	u1710
   861   0009A4                     u1711:
   862   0009A4  EFC9  F004         	goto	l2735
   863   0009A8                     u1710:
   864   0009A8                     
   865                           ;main.c: 44:             stop(&motorL,&motorR);
   866   0009A8  0E39               	movlw	low main@motorL
   867   0009AA  6E14               	movwf	stop@mL^0,c
   868   0009AC  0E00               	movlw	high main@motorL
   869   0009AE  6E15               	movwf	(stop@mL+1)^0,c
   870   0009B0  0E42               	movlw	low main@motorR
   871   0009B2  6E16               	movwf	stop@mR^0,c
   872   0009B4  0E00               	movlw	high main@motorR
   873   0009B6  6E17               	movwf	(stop@mR+1)^0,c
   874   0009B8  EC65  F008         	call	_stop	;wreg free
   875   0009BC  EC19  F000         	call	_get_color_code	;wreg free
   876   0009C0                     
   877                           ;main.c: 47:             moveBack(&motorL,&motorR,20);
   878   0009C0  0E39               	movlw	low main@motorL
   879   0009C2  6E14               	movwf	moveBack@mL^0,c
   880   0009C4  0E00               	movlw	high main@motorL
   881   0009C6  6E15               	movwf	(moveBack@mL+1)^0,c
   882   0009C8  0E42               	movlw	low main@motorR
   883   0009CA  6E16               	movwf	moveBack@mR^0,c
   884   0009CC  0E00               	movlw	high main@motorR
   885   0009CE  6E17               	movwf	(moveBack@mR+1)^0,c
   886   0009D0  0E00               	movlw	0
   887   0009D2  6E19               	movwf	(moveBack@time+1)^0,c
   888   0009D4  0E14               	movlw	20
   889   0009D6  6E18               	movwf	moveBack@time^0,c
   890   0009D8  EC2F  F006         	call	_moveBack	;wreg free
   891   0009DC  EFBF  F004         	goto	l2733
   892   0009E0  EF17  F000         	goto	start
   893   0009E4                     __end_of_main:
   894                           	callstack 0
   895                           
   896 ;; *************** function _stop *****************
   897 ;; Defined at:
   898 ;;		line 91 in file "dc_motor.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  mL              2   19[COMRAM] PTR struct DC_motor
   901 ;;		 -> main@motorL(9), 
   902 ;;  mR              2   21[COMRAM] PTR struct DC_motor
   903 ;;		 -> main@motorR(9), 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   919 ;;Total ram usage:        4 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 4
   922 ;; This function calls:
   923 ;;		_setMotorPWM
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text1
   930   0010CA                     __ptext1:
   931                           	callstack 0
   932   0010CA                     _stop:
   933                           	callstack 26
   934   0010CA                     
   935                           ;dc_motor.c: 91: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 92: {;d
      +                          c_motor.c: 93:     (*mL).power=0;
   936   0010CA  C014  FFD9         	movff	stop@mL,fsr2l
   937   0010CE  C015  FFDA         	movff	stop@mL+1,fsr2h
   938   0010D2  0E00               	movlw	0
   939   0010D4  6EDF               	movwf	indf2,c
   940                           
   941                           ;dc_motor.c: 94:     (*mR).power=0;
   942   0010D6  C016  FFD9         	movff	stop@mR,fsr2l
   943   0010DA  C017  FFDA         	movff	stop@mR+1,fsr2h
   944   0010DE  0E00               	movlw	0
   945   0010E0  6EDF               	movwf	indf2,c
   946   0010E2                     
   947                           ;dc_motor.c: 95:     setMotorPWM(mL);
   948   0010E2  C014  F00E         	movff	stop@mL,setMotorPWM@m
   949   0010E6  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
   950   0010EA  ECE8  F001         	call	_setMotorPWM	;wreg free
   951   0010EE                     
   952                           ;dc_motor.c: 96:     setMotorPWM(mR);
   953   0010EE  C016  F00E         	movff	stop@mR,setMotorPWM@m
   954   0010F2  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
   955   0010F6  ECE8  F001         	call	_setMotorPWM	;wreg free
   956   0010FA  0012               	return		;funcret
   957   0010FC                     __end_of_stop:
   958                           	callstack 0
   959                           
   960 ;; *************** function _moveForward *****************
   961 ;; Defined at:
   962 ;;		line 283 in file "dc_motor.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  mL              2   19[COMRAM] PTR struct DC_motor
   965 ;;		 -> main@motorL(9), 
   966 ;;  mR              2   21[COMRAM] PTR struct DC_motor
   967 ;;		 -> main@motorR(9), 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   983 ;;Total ram usage:        4 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 4
   986 ;; This function calls:
   987 ;;		_setMotorPWM
   988 ;; This function is called by:
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text2
   994   000EB2                     __ptext2:
   995                           	callstack 0
   996   000EB2                     _moveForward:
   997                           	callstack 26
   998   000EB2                     
   999                           ;dc_motor.c: 283: void moveForward(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           284: {;dc_motor.c: 285:     (*mL).direction=-1;
  1000   000EB2  EE20 F001          	lfsr	2,1
  1001   000EB6  5014               	movf	moveForward@mL^0,w,c
  1002   000EB8  26D9               	addwf	fsr2l,f,c
  1003   000EBA  5015               	movf	(moveForward@mL+1)^0,w,c
  1004   000EBC  22DA               	addwfc	fsr2h,f,c
  1005   000EBE  0EFF               	movlw	255
  1006   000EC0  6EDF               	movwf	indf2,c
  1007                           
  1008                           ;dc_motor.c: 286:     (*mR).direction=-1;
  1009   000EC2  EE20 F001          	lfsr	2,1
  1010   000EC6  5016               	movf	moveForward@mR^0,w,c
  1011   000EC8  26D9               	addwf	fsr2l,f,c
  1012   000ECA  5017               	movf	(moveForward@mR+1)^0,w,c
  1013   000ECC  22DA               	addwfc	fsr2h,f,c
  1014   000ECE  0EFF               	movlw	255
  1015   000ED0  6EDF               	movwf	indf2,c
  1016   000ED2                     
  1017                           ;dc_motor.c: 287:     (*mL).power=50;
  1018   000ED2  C014  FFD9         	movff	moveForward@mL,fsr2l
  1019   000ED6  C015  FFDA         	movff	moveForward@mL+1,fsr2h
  1020   000EDA  0E32               	movlw	50
  1021   000EDC  6EDF               	movwf	indf2,c
  1022   000EDE                     
  1023                           ;dc_motor.c: 288:     (*mR).power=50;
  1024   000EDE  C016  FFD9         	movff	moveForward@mR,fsr2l
  1025   000EE2  C017  FFDA         	movff	moveForward@mR+1,fsr2h
  1026   000EE6  0E32               	movlw	50
  1027   000EE8  6EDF               	movwf	indf2,c
  1028   000EEA                     
  1029                           ;dc_motor.c: 289:     setMotorPWM(mL);
  1030   000EEA  C014  F00E         	movff	moveForward@mL,setMotorPWM@m
  1031   000EEE  C015  F00F         	movff	moveForward@mL+1,setMotorPWM@m+1
  1032   000EF2  ECE8  F001         	call	_setMotorPWM	;wreg free
  1033   000EF6                     
  1034                           ;dc_motor.c: 290:     setMotorPWM(mR);
  1035   000EF6  C016  F00E         	movff	moveForward@mR,setMotorPWM@m
  1036   000EFA  C017  F00F         	movff	moveForward@mR+1,setMotorPWM@m+1
  1037   000EFE  ECE8  F001         	call	_setMotorPWM	;wreg free
  1038   000F02  0012               	return		;funcret
  1039   000F04                     __end_of_moveForward:
  1040                           	callstack 0
  1041                           
  1042 ;; *************** function _moveBack *****************
  1043 ;; Defined at:
  1044 ;;		line 268 in file "dc_motor.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  1047 ;;		 -> main@motorL(9), 
  1048 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  1049 ;;		 -> main@motorR(9), 
  1050 ;;  time            2   23[COMRAM] unsigned int 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1062 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1066 ;;Total ram usage:        8 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 4
  1069 ;; This function calls:
  1070 ;;		_setMotorPWM
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text3
  1077   000C5E                     __ptext3:
  1078                           	callstack 0
  1079   000C5E                     _moveBack:
  1080                           	callstack 26
  1081   000C5E                     
  1082                           ;dc_motor.c: 268: void moveBack(struct DC_motor *mL, struct DC_motor *mR, unsigned int t
      +                          ime);dc_motor.c: 269: {;dc_motor.c: 270:     seconds = 0;
  1083   000C5E  0E00               	movlw	0
  1084   000C60  6E5E               	movwf	(_seconds+1)^0,c
  1085   000C62  0E00               	movlw	0
  1086   000C64  6E5D               	movwf	_seconds^0,c
  1087                           
  1088                           ;dc_motor.c: 271:     while (seconds<time)
  1089   000C66  EF69  F006         	goto	l2605
  1090   000C6A                     l2593:
  1091                           
  1092                           ;dc_motor.c: 272:     {;dc_motor.c: 273:         (*mL).direction=0;
  1093   000C6A  EE20 F001          	lfsr	2,1
  1094   000C6E  5014               	movf	moveBack@mL^0,w,c
  1095   000C70  26D9               	addwf	fsr2l,f,c
  1096   000C72  5015               	movf	(moveBack@mL+1)^0,w,c
  1097   000C74  22DA               	addwfc	fsr2h,f,c
  1098   000C76  0E00               	movlw	0
  1099   000C78  6EDF               	movwf	indf2,c
  1100                           
  1101                           ;dc_motor.c: 274:         (*mR).direction=0;
  1102   000C7A  EE20 F001          	lfsr	2,1
  1103   000C7E  5016               	movf	moveBack@mR^0,w,c
  1104   000C80  26D9               	addwf	fsr2l,f,c
  1105   000C82  5017               	movf	(moveBack@mR+1)^0,w,c
  1106   000C84  22DA               	addwfc	fsr2h,f,c
  1107   000C86  0E00               	movlw	0
  1108   000C88  6EDF               	movwf	indf2,c
  1109   000C8A                     
  1110                           ;dc_motor.c: 275:         (*mL).power=50;
  1111   000C8A  C014  FFD9         	movff	moveBack@mL,fsr2l
  1112   000C8E  C015  FFDA         	movff	moveBack@mL+1,fsr2h
  1113   000C92  0E32               	movlw	50
  1114   000C94  6EDF               	movwf	indf2,c
  1115   000C96                     
  1116                           ;dc_motor.c: 276:         (*mR).power=50;
  1117   000C96  C016  FFD9         	movff	moveBack@mR,fsr2l
  1118   000C9A  C017  FFDA         	movff	moveBack@mR+1,fsr2h
  1119   000C9E  0E32               	movlw	50
  1120   000CA0  6EDF               	movwf	indf2,c
  1121   000CA2                     
  1122                           ;dc_motor.c: 277:         setMotorPWM(mL);
  1123   000CA2  C014  F00E         	movff	moveBack@mL,setMotorPWM@m
  1124   000CA6  C015  F00F         	movff	moveBack@mL+1,setMotorPWM@m+1
  1125   000CAA  ECE8  F001         	call	_setMotorPWM	;wreg free
  1126   000CAE                     
  1127                           ;dc_motor.c: 278:         setMotorPWM(mR);
  1128   000CAE  C016  F00E         	movff	moveBack@mR,setMotorPWM@m
  1129   000CB2  C017  F00F         	movff	moveBack@mR+1,setMotorPWM@m+1
  1130   000CB6  ECE8  F001         	call	_setMotorPWM	;wreg free
  1131   000CBA                     
  1132                           ;dc_motor.c: 279:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1133   000CBA  0E29               	movlw	41
  1134   000CBC  6E1B               	movwf	(??_moveBack+1)^0,c
  1135   000CBE  0E96               	movlw	150
  1136   000CC0  6E1A               	movwf	??_moveBack^0,c
  1137   000CC2  0E7F               	movlw	127
  1138   000CC4                     u2087:
  1139   000CC4  2EE8               	decfsz	wreg,f,c
  1140   000CC6  D7FE               	bra	u2087
  1141   000CC8  2E1A               	decfsz	??_moveBack^0,f,c
  1142   000CCA  D7FC               	bra	u2087
  1143   000CCC  2E1B               	decfsz	(??_moveBack+1)^0,f,c
  1144   000CCE  D7FA               	bra	u2087
  1145   000CD0  F000               	nop	
  1146   000CD2                     l2605:
  1147                           
  1148                           ;dc_motor.c: 271:     while (seconds<time)
  1149   000CD2  5018               	movf	moveBack@time^0,w,c
  1150   000CD4  5C5D               	subwf	_seconds^0,w,c
  1151   000CD6  5019               	movf	(moveBack@time+1)^0,w,c
  1152   000CD8  585E               	subwfb	(_seconds+1)^0,w,c
  1153   000CDA  A0D8               	btfss	status,0,c
  1154   000CDC  EF72  F006         	goto	u1591
  1155   000CE0  EF74  F006         	goto	u1590
  1156   000CE4                     u1591:
  1157   000CE4  EF35  F006         	goto	l2593
  1158   000CE8                     u1590:
  1159   000CE8  0012               	return		;funcret
  1160   000CEA                     __end_of_moveBack:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _setMotorPWM *****************
  1164 ;; Defined at:
  1165 ;;		line 68 in file "dc_motor.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  m               2   13[COMRAM] PTR struct DC_motor
  1168 ;;		 -> main@motorR(9), main@motorL(9), RobotMovement@motorR(9), RobotMovement@motorL(9), 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  negDuty         1   18[COMRAM] unsigned char 
  1171 ;;  posDuty         1   17[COMRAM] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1183 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1184 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;Total ram usage:        6 bytes
  1186 ;; Hardware stack levels used: 1
  1187 ;; Hardware stack levels required when called: 3
  1188 ;; This function calls:
  1189 ;;		___lwdiv
  1190 ;;		___wmul
  1191 ;; This function is called by:
  1192 ;;		_stop
  1193 ;;		_moveBack
  1194 ;;		_moveForward
  1195 ;;		_turnLeft
  1196 ;;		_turnRight
  1197 ;;		_turnLeftLong
  1198 ;;		_turnRightLong
  1199 ;;		_fullSpeedAhead
  1200 ;;		_TimedfullSpeedAhead
  1201 ;;		_Calibrate
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text4
  1206   0003D0                     __ptext4:
  1207                           	callstack 0
  1208   0003D0                     _setMotorPWM:
  1209                           	callstack 26
  1210   0003D0                     
  1211                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  1212   0003D0  EE20 F002          	lfsr	2,2
  1213   0003D4  500E               	movf	setMotorPWM@m^0,w,c
  1214   0003D6  26D9               	addwf	fsr2l,f,c
  1215   0003D8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1216   0003DA  22DA               	addwfc	fsr2h,f,c
  1217   0003DC  50DF               	movf	indf2,w,c
  1218   0003DE  B4D8               	btfsc	status,2,c
  1219   0003E0  EFF4  F001         	goto	u1181
  1220   0003E4  EFF6  F001         	goto	u1180
  1221   0003E8                     u1181:
  1222   0003E8  EF2A  F002         	goto	l2215
  1223   0003EC                     u1180:
  1224   0003EC                     
  1225                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  1226   0003EC  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  1227   0003F0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1228   0003F4  50DF               	movf	indf2,w,c
  1229   0003F6  6E10               	movwf	??_setMotorPWM^0,c
  1230   0003F8  5010               	movf	??_setMotorPWM^0,w,c
  1231   0003FA  6E01               	movwf	___wmul@multiplier^0,c
  1232   0003FC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1233   0003FE  EE20 F003          	lfsr	2,3
  1234   000402  500E               	movf	setMotorPWM@m^0,w,c
  1235   000404  26D9               	addwf	fsr2l,f,c
  1236   000406  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1237   000408  22DA               	addwfc	fsr2h,f,c
  1238   00040A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1239   00040E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1240   000412  ECA7  F008         	call	___wmul	;wreg free
  1241   000416  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1242   00041A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1243   00041E  0E00               	movlw	0
  1244   000420  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1245   000422  0E64               	movlw	100
  1246   000424  6E09               	movwf	___lwdiv@divisor^0,c
  1247   000426  ECBA  F006         	call	___lwdiv	;wreg free
  1248   00042A  EE20 F003          	lfsr	2,3
  1249   00042E  500E               	movf	setMotorPWM@m^0,w,c
  1250   000430  26D9               	addwf	fsr2l,f,c
  1251   000432  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1252   000434  22DA               	addwfc	fsr2h,f,c
  1253   000436  50DF               	movf	indf2,w,c
  1254   000438  6E11               	movwf	(??_setMotorPWM+1)^0,c
  1255   00043A  5007               	movf	?___lwdiv^0,w,c
  1256   00043C  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  1257   00043E  6E12               	movwf	setMotorPWM@posDuty^0,c
  1258   000440                     
  1259                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  1260   000440  EE20 F003          	lfsr	2,3
  1261   000444  500E               	movf	setMotorPWM@m^0,w,c
  1262   000446  26D9               	addwf	fsr2l,f,c
  1263   000448  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1264   00044A  22DA               	addwfc	fsr2h,f,c
  1265   00044C  50DF               	movf	indf2,w,c
  1266   00044E  6E13               	movwf	setMotorPWM@negDuty^0,c
  1267                           
  1268                           ;dc_motor.c: 75:     }
  1269   000450  EF4D  F002         	goto	l2219
  1270   000454                     l2215:
  1271                           
  1272                           ;dc_motor.c: 77:         posDuty=0;
  1273   000454  0E00               	movlw	0
  1274   000456  6E12               	movwf	setMotorPWM@posDuty^0,c
  1275   000458                     
  1276                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  1277   000458  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  1278   00045C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1279   000460  50DF               	movf	indf2,w,c
  1280   000462  6E10               	movwf	??_setMotorPWM^0,c
  1281   000464  5010               	movf	??_setMotorPWM^0,w,c
  1282   000466  6E01               	movwf	___wmul@multiplier^0,c
  1283   000468  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1284   00046A  EE20 F003          	lfsr	2,3
  1285   00046E  500E               	movf	setMotorPWM@m^0,w,c
  1286   000470  26D9               	addwf	fsr2l,f,c
  1287   000472  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1288   000474  22DA               	addwfc	fsr2h,f,c
  1289   000476  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1290   00047A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1291   00047E  ECA7  F008         	call	___wmul	;wreg free
  1292   000482  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1293   000486  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1294   00048A  0E00               	movlw	0
  1295   00048C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1296   00048E  0E64               	movlw	100
  1297   000490  6E09               	movwf	___lwdiv@divisor^0,c
  1298   000492  ECBA  F006         	call	___lwdiv	;wreg free
  1299   000496  5007               	movf	?___lwdiv^0,w,c
  1300   000498  6E13               	movwf	setMotorPWM@negDuty^0,c
  1301   00049A                     l2219:
  1302                           
  1303                           ;dc_motor.c: 81:     if (m->direction) {
  1304   00049A  EE20 F001          	lfsr	2,1
  1305   00049E  500E               	movf	setMotorPWM@m^0,w,c
  1306   0004A0  26D9               	addwf	fsr2l,f,c
  1307   0004A2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1308   0004A4  22DA               	addwfc	fsr2h,f,c
  1309   0004A6  50DF               	movf	indf2,w,c
  1310   0004A8  B4D8               	btfsc	status,2,c
  1311   0004AA  EF59  F002         	goto	u1191
  1312   0004AE  EF5B  F002         	goto	u1190
  1313   0004B2                     u1191:
  1314   0004B2  EF7D  F002         	goto	l2223
  1315   0004B6                     u1190:
  1316   0004B6                     
  1317                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  1318   0004B6  EE20 F005          	lfsr	2,5
  1319   0004BA  500E               	movf	setMotorPWM@m^0,w,c
  1320   0004BC  26D9               	addwf	fsr2l,f,c
  1321   0004BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1322   0004C0  22DA               	addwfc	fsr2h,f,c
  1323   0004C2  CFDE F010          	movff	postinc2,??_setMotorPWM
  1324   0004C6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1325   0004CA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1326   0004CE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1327   0004D2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1328                           
  1329                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  1330   0004D6  EE20 F007          	lfsr	2,7
  1331   0004DA  500E               	movf	setMotorPWM@m^0,w,c
  1332   0004DC  26D9               	addwf	fsr2l,f,c
  1333   0004DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1334   0004E0  22DA               	addwfc	fsr2h,f,c
  1335   0004E2  CFDE F010          	movff	postinc2,??_setMotorPWM
  1336   0004E6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1337   0004EA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1338   0004EE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1339   0004F2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1340                           
  1341                           ;dc_motor.c: 84:     } else {
  1342   0004F6  EF9D  F002         	goto	l211
  1343   0004FA                     l2223:
  1344                           
  1345                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  1346   0004FA  EE20 F005          	lfsr	2,5
  1347   0004FE  500E               	movf	setMotorPWM@m^0,w,c
  1348   000500  26D9               	addwf	fsr2l,f,c
  1349   000502  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1350   000504  22DA               	addwfc	fsr2h,f,c
  1351   000506  CFDE F010          	movff	postinc2,??_setMotorPWM
  1352   00050A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1353   00050E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1354   000512  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1355   000516  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1356                           
  1357                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  1358   00051A  EE20 F007          	lfsr	2,7
  1359   00051E  500E               	movf	setMotorPWM@m^0,w,c
  1360   000520  26D9               	addwf	fsr2l,f,c
  1361   000522  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1362   000524  22DA               	addwfc	fsr2h,f,c
  1363   000526  CFDE F010          	movff	postinc2,??_setMotorPWM
  1364   00052A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1365   00052E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1366   000532  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1367   000536  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1368   00053A                     l211:
  1369   00053A  0012               	return		;funcret
  1370   00053C                     __end_of_setMotorPWM:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _initDCmotorsPWM *****************
  1374 ;; Defined at:
  1375 ;;		line 8 in file "dc_motor.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  PWMperiod       2    0[COMRAM] int 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1393 ;;Total ram usage:        2 bytes
  1394 ;; Hardware stack levels used: 1
  1395 ;; Hardware stack levels required when called: 2
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text5
  1404   000BCE                     __ptext5:
  1405                           	callstack 0
  1406   000BCE                     _initDCmotorsPWM:
  1407                           	callstack 28
  1408   000BCE                     
  1409                           ;dc_motor.c: 10:     TRISEbits.TRISE2=0;
  1410   000BCE  9485               	bcf	133,2,c	;volatile
  1411                           
  1412                           ;dc_motor.c: 11:     TRISCbits.TRISC7=0;
  1413   000BD0  9E83               	bcf	131,7,c	;volatile
  1414                           
  1415                           ;dc_motor.c: 12:     TRISGbits.TRISG6=0;
  1416   000BD2  9C87               	bcf	135,6,c	;volatile
  1417                           
  1418                           ;dc_motor.c: 13:     TRISEbits.TRISE4=0;
  1419   000BD4  9885               	bcf	133,4,c	;volatile
  1420                           
  1421                           ;dc_motor.c: 15:     LATEbits.LATE2=0;
  1422   000BD6  947D               	bcf	125,2,c	;volatile
  1423                           
  1424                           ;dc_motor.c: 16:     LATCbits.LATC7=0;
  1425   000BD8  9E7B               	bcf	123,7,c	;volatile
  1426                           
  1427                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  1428   000BDA  9C7F               	bcf	127,6,c	;volatile
  1429                           
  1430                           ;dc_motor.c: 18:     LATEbits.LATE4=0;
  1431   000BDC  987D               	bcf	125,4,c	;volatile
  1432   000BDE                     
  1433                           ;dc_motor.c: 21:     RE2PPS=0x05;
  1434   000BDE  0E05               	movlw	5
  1435   000BE0  010E               	movlb	14	; () banked
  1436   000BE2  6F74               	movwf	116,b	;volatile
  1437                           
  1438                           ;dc_motor.c: 22:     RE4PPS=0x06;
  1439   000BE4  0E06               	movlw	6
  1440   000BE6  6F76               	movwf	118,b	;volatile
  1441                           
  1442                           ;dc_motor.c: 23:     RC7PPS=0x07;
  1443   000BE8  0E07               	movlw	7
  1444   000BEA  6F69               	movwf	105,b	;volatile
  1445                           
  1446                           ;dc_motor.c: 24:     RG6PPS=0x08;
  1447   000BEC  0E08               	movlw	8
  1448   000BEE  6F88               	movwf	136,b	;volatile
  1449                           
  1450                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b100;
  1451   000BF0  50BD               	movf	189,w,c	;volatile
  1452   000BF2  0B8F               	andlw	-113
  1453   000BF4  0940               	iorlw	64
  1454   000BF6  6EBD               	movwf	189,c	;volatile
  1455                           
  1456                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  1457   000BF8  0EE0               	movlw	-32
  1458   000BFA  16BE               	andwf	190,f,c	;volatile
  1459                           
  1460                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  1461   000BFC  50BF               	movf	191,w,c	;volatile
  1462   000BFE  0BF0               	andlw	-16
  1463   000C00  0901               	iorlw	1
  1464   000C02  6EBF               	movwf	191,c	;volatile
  1465                           
  1466                           ;dc_motor.c: 33:     T2PR=99;
  1467   000C04  0E63               	movlw	99
  1468   000C06  6EBC               	movwf	188,c	;volatile
  1469   000C08                     
  1470                           ; BSR set to: 14
  1471                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  1472   000C08  8EBD               	bsf	189,7,c	;volatile
  1473                           
  1474                           ;dc_motor.c: 38:     CCPR1H=0;
  1475   000C0A  0E00               	movlw	0
  1476   000C0C  6EAA               	movwf	170,c	;volatile
  1477                           
  1478                           ;dc_motor.c: 39:     CCPR2H=0;
  1479   000C0E  0E00               	movlw	0
  1480   000C10  6EA6               	movwf	166,c	;volatile
  1481                           
  1482                           ;dc_motor.c: 40:     CCPR3H=0;
  1483   000C12  0E00               	movlw	0
  1484   000C14  010F               	movlb	15	; () banked
  1485   000C16  6F25               	movwf	37,b	;volatile
  1486                           
  1487                           ;dc_motor.c: 41:     CCPR4H=0;
  1488   000C18  0E00               	movlw	0
  1489   000C1A  6F21               	movwf	33,b	;volatile
  1490                           
  1491                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  1492   000C1C  0EFC               	movlw	-4
  1493   000C1E  16AD               	andwf	173,f,c	;volatile
  1494                           
  1495                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  1496   000C20  0EF3               	movlw	-13
  1497   000C22  16AD               	andwf	173,f,c	;volatile
  1498                           
  1499                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  1500   000C24  0ECF               	movlw	-49
  1501   000C26  16AD               	andwf	173,f,c	;volatile
  1502                           
  1503                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  1504   000C28  0E3F               	movlw	-193
  1505   000C2A  16AD               	andwf	173,f,c	;volatile
  1506   000C2C                     
  1507                           ; BSR set to: 15
  1508                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  1509   000C2C  88AB               	bsf	171,4,c	;volatile
  1510                           
  1511                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  1512   000C2E  50AB               	movf	171,w,c	;volatile
  1513   000C30  0BF0               	andlw	-16
  1514   000C32  090C               	iorlw	12
  1515   000C34  6EAB               	movwf	171,c	;volatile
  1516   000C36                     
  1517                           ; BSR set to: 15
  1518                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  1519   000C36  8EAB               	bsf	171,7,c	;volatile
  1520   000C38                     
  1521                           ; BSR set to: 15
  1522                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  1523   000C38  88A7               	bsf	167,4,c	;volatile
  1524                           
  1525                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  1526   000C3A  50A7               	movf	167,w,c	;volatile
  1527   000C3C  0BF0               	andlw	-16
  1528   000C3E  090C               	iorlw	12
  1529   000C40  6EA7               	movwf	167,c	;volatile
  1530   000C42                     
  1531                           ; BSR set to: 15
  1532                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  1533   000C42  8EA7               	bsf	167,7,c	;volatile
  1534   000C44                     
  1535                           ; BSR set to: 15
  1536                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  1537   000C44  8926               	bsf	38,4,b	;volatile
  1538                           
  1539                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  1540   000C46  5126               	movf	38,w,b	;volatile
  1541   000C48  0BF0               	andlw	-16
  1542   000C4A  090C               	iorlw	12
  1543   000C4C  6F26               	movwf	38,b	;volatile
  1544   000C4E                     
  1545                           ; BSR set to: 15
  1546                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  1547   000C4E  8F26               	bsf	38,7,b	;volatile
  1548   000C50                     
  1549                           ; BSR set to: 15
  1550                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  1551   000C50  8922               	bsf	34,4,b	;volatile
  1552                           
  1553                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  1554   000C52  5122               	movf	34,w,b	;volatile
  1555   000C54  0BF0               	andlw	-16
  1556   000C56  090C               	iorlw	12
  1557   000C58  6F22               	movwf	34,b	;volatile
  1558   000C5A                     
  1559                           ; BSR set to: 15
  1560                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  1561   000C5A  8F22               	bsf	34,7,b	;volatile
  1562   000C5C                     
  1563                           ; BSR set to: 15
  1564   000C5C  0012               	return		;funcret
  1565   000C5E                     __end_of_initDCmotorsPWM:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _get_wall_presence *****************
  1569 ;; Defined at:
  1570 ;;		line 242 in file "color.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  clear2          2   17[COMRAM] unsigned int 
  1575 ;;  clear1          2   15[COMRAM] unsigned int 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  2   11[COMRAM] unsigned int 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1586 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1588 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;Total ram usage:        8 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; Hardware stack levels required when called: 5
  1592 ;; This function calls:
  1593 ;;		___wmul
  1594 ;;		_color_read_Clear
  1595 ;;		_set_led_color
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text6
  1602   000B32                     __ptext6:
  1603                           	callstack 0
  1604   000B32                     _get_wall_presence:
  1605                           	callstack 25
  1606   000B32                     
  1607                           ;color.c: 243:     set_led_color(0b000);
  1608   000B32  0E00               	movlw	0
  1609   000B34  6E02               	movwf	(set_led_color@color+1)^0,c
  1610   000B36  0E00               	movlw	0
  1611   000B38  6E01               	movwf	set_led_color@color^0,c
  1612   000B3A  EC22  F008         	call	_set_led_color	;wreg free
  1613   000B3E                     
  1614                           ;color.c: 244:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1615   000B3E  0E12               	movlw	18
  1616   000B40  6E0F               	movwf	(??_get_wall_presence+1)^0,c
  1617   000B42  0EDC               	movlw	220
  1618   000B44  6E0E               	movwf	??_get_wall_presence^0,c
  1619   000B46  0E60               	movlw	96
  1620   000B48                     u2097:
  1621   000B48  2EE8               	decfsz	wreg,f,c
  1622   000B4A  D7FE               	bra	u2097
  1623   000B4C  2E0E               	decfsz	??_get_wall_presence^0,f,c
  1624   000B4E  D7FC               	bra	u2097
  1625   000B50  2E0F               	decfsz	(??_get_wall_presence+1)^0,f,c
  1626   000B52  D7FA               	bra	u2097
  1627   000B54                     
  1628                           ;color.c: 245:     unsigned int clear1 = color_read_Clear();
  1629   000B54  ECD2  F007         	call	_color_read_Clear	;wreg free
  1630   000B58  C005  F010         	movff	?_color_read_Clear,get_wall_presence@clear1
  1631   000B5C  C006  F011         	movff	?_color_read_Clear+1,get_wall_presence@clear1+1
  1632   000B60                     
  1633                           ;color.c: 246:     set_led_color(0b111);
  1634   000B60  0E00               	movlw	0
  1635   000B62  6E02               	movwf	(set_led_color@color+1)^0,c
  1636   000B64  0E07               	movlw	7
  1637   000B66  6E01               	movwf	set_led_color@color^0,c
  1638   000B68  EC22  F008         	call	_set_led_color	;wreg free
  1639   000B6C                     
  1640                           ;color.c: 247:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1641   000B6C  0E12               	movlw	18
  1642   000B6E  6E0F               	movwf	(??_get_wall_presence+1)^0,c
  1643   000B70  0EDC               	movlw	220
  1644   000B72  6E0E               	movwf	??_get_wall_presence^0,c
  1645   000B74  0E60               	movlw	96
  1646   000B76                     u2107:
  1647   000B76  2EE8               	decfsz	wreg,f,c
  1648   000B78  D7FE               	bra	u2107
  1649   000B7A  2E0E               	decfsz	??_get_wall_presence^0,f,c
  1650   000B7C  D7FC               	bra	u2107
  1651   000B7E  2E0F               	decfsz	(??_get_wall_presence+1)^0,f,c
  1652   000B80  D7FA               	bra	u2107
  1653                           
  1654                           ;color.c: 248:     unsigned int clear2 = color_read_Clear();
  1655   000B82  ECD2  F007         	call	_color_read_Clear	;wreg free
  1656   000B86  C005  F012         	movff	?_color_read_Clear,get_wall_presence@clear2
  1657   000B8A  C006  F013         	movff	?_color_read_Clear+1,get_wall_presence@clear2+1
  1658   000B8E                     
  1659                           ;color.c: 249:     set_led_color(0b000);
  1660   000B8E  0E00               	movlw	0
  1661   000B90  6E02               	movwf	(set_led_color@color+1)^0,c
  1662   000B92  0E00               	movlw	0
  1663   000B94  6E01               	movwf	set_led_color@color^0,c
  1664   000B96  EC22  F008         	call	_set_led_color	;wreg free
  1665   000B9A                     
  1666                           ;color.c: 250:     return clear2 >= clear1*wall_coef;
  1667   000B9A  C010  F001         	movff	get_wall_presence@clear1,___wmul@multiplier
  1668   000B9E  C011  F002         	movff	get_wall_presence@clear1+1,___wmul@multiplier+1
  1669   000BA2  C059  F003         	movff	_wall_coef,___wmul@multiplicand
  1670   000BA6  C05A  F004         	movff	_wall_coef+1,___wmul@multiplicand+1
  1671   000BAA  ECA7  F008         	call	___wmul	;wreg free
  1672   000BAE  5001               	movf	?___wmul^0,w,c
  1673   000BB0  5C12               	subwf	get_wall_presence@clear2^0,w,c
  1674   000BB2  5002               	movf	(?___wmul+1)^0,w,c
  1675   000BB4  5813               	subwfb	(get_wall_presence@clear2+1)^0,w,c
  1676   000BB6  B0D8               	btfsc	status,0,c
  1677   000BB8  EFE0  F005         	goto	u1491
  1678   000BBC  EFE3  F005         	goto	u1490
  1679   000BC0                     u1491:
  1680   000BC0  0E01               	movlw	1
  1681   000BC2  EFE4  F005         	goto	u1500
  1682   000BC6                     u1490:
  1683   000BC6  0E00               	movlw	0
  1684   000BC8                     u1500:
  1685   000BC8  6E0C               	movwf	?_get_wall_presence^0,c
  1686   000BCA  6A0D               	clrf	(?_get_wall_presence+1)^0,c
  1687   000BCC  0012               	return		;funcret
  1688   000BCE                     __end_of_get_wall_presence:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _get_color_code *****************
  1692 ;; Defined at:
  1693 ;;		line 176 in file "color.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  value           2   28[BANK0 ] unsigned int 
  1698 ;;  i               2   30[BANK0 ] unsigned int 
  1699 ;;  NormalizedRG   12   32[BANK0 ] struct RGB_val
  1700 ;;  min_index       2   26[BANK0 ] unsigned int 
  1701 ;;  min_value       2   24[BANK0 ] unsigned int 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  2   52[COMRAM] unsigned int 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Totals:         4      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;Total ram usage:       48 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 5
  1718 ;; This function calls:
  1719 ;;		___lldiv
  1720 ;;		___lmul
  1721 ;;		___wmul
  1722 ;;		_color_read_Blue
  1723 ;;		_color_read_Green
  1724 ;;		_color_read_Red
  1725 ;;		_get_color_distance
  1726 ;;		_set_led_color
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text7
  1733   000032                     __ptext7:
  1734                           	callstack 0
  1735   000032                     _get_color_code:
  1736                           	callstack 25
  1737   000032                     
  1738                           ;color.c: 179:     set_led_color(0b100);
  1739   000032  0E00               	movlw	0
  1740   000034  6E02               	movwf	(set_led_color@color+1)^0,c
  1741   000036  0E04               	movlw	4
  1742   000038  6E01               	movwf	set_led_color@color^0,c
  1743   00003A  EC22  F008         	call	_set_led_color	;wreg free
  1744   00003E                     
  1745                           ;color.c: 180:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1746   00003E  0E12               	movlw	18
  1747   000040  6E38               	movwf	(??_get_color_code+1)^0,c
  1748   000042  0EDC               	movlw	220
  1749   000044  6E37               	movwf	??_get_color_code^0,c
  1750   000046  0E60               	movlw	96
  1751   000048                     u2117:
  1752   000048  2EE8               	decfsz	wreg,f,c
  1753   00004A  D7FE               	bra	u2117
  1754   00004C  2E37               	decfsz	??_get_color_code^0,f,c
  1755   00004E  D7FC               	bra	u2117
  1756   000050  2E38               	decfsz	(??_get_color_code+1)^0,f,c
  1757   000052  D7FA               	bra	u2117
  1758   000054                     
  1759                           ;color.c: 181:     RGB.R = color_read_Red();
  1760   000054  EC82  F007         	call	_color_read_Red	;wreg free
  1761   000058  C005  F0EC         	movff	?_color_read_Red,_RGB
  1762   00005C  C006  F0ED         	movff	?_color_read_Red+1,_RGB+1
  1763   000060  0100               	movlb	0	; () banked
  1764   000062  6BEE               	clrf	(_RGB+2)& (0+255),b
  1765   000064  6BEF               	clrf	(_RGB+3)& (0+255),b
  1766   000066                     
  1767                           ; BSR set to: 0
  1768                           ;color.c: 182:     set_led_color(0b010);
  1769   000066  0E00               	movlw	0
  1770   000068  6E02               	movwf	(set_led_color@color+1)^0,c
  1771   00006A  0E02               	movlw	2
  1772   00006C  6E01               	movwf	set_led_color@color^0,c
  1773   00006E  EC22  F008         	call	_set_led_color	;wreg free
  1774   000072                     
  1775                           ;color.c: 183:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1776   000072  0E12               	movlw	18
  1777   000074  6E38               	movwf	(??_get_color_code+1)^0,c
  1778   000076  0EDC               	movlw	220
  1779   000078  6E37               	movwf	??_get_color_code^0,c
  1780   00007A  0E60               	movlw	96
  1781   00007C                     u2127:
  1782   00007C  2EE8               	decfsz	wreg,f,c
  1783   00007E  D7FE               	bra	u2127
  1784   000080  2E37               	decfsz	??_get_color_code^0,f,c
  1785   000082  D7FC               	bra	u2127
  1786   000084  2E38               	decfsz	(??_get_color_code+1)^0,f,c
  1787   000086  D7FA               	bra	u2127
  1788                           
  1789                           ;color.c: 184:     RGB.G = color_read_Green();
  1790   000088  ECAA  F007         	call	_color_read_Green	;wreg free
  1791   00008C  C005  F0F0         	movff	?_color_read_Green,_RGB+4
  1792   000090  C006  F0F1         	movff	?_color_read_Green+1,_RGB+5
  1793   000094  0100               	movlb	0	; () banked
  1794   000096  6BF2               	clrf	(_RGB+6)& (0+255),b
  1795   000098  6BF3               	clrf	(_RGB+7)& (0+255),b
  1796   00009A                     
  1797                           ; BSR set to: 0
  1798                           ;color.c: 185:     set_led_color(0b001);
  1799   00009A  0E00               	movlw	0
  1800   00009C  6E02               	movwf	(set_led_color@color+1)^0,c
  1801   00009E  0E01               	movlw	1
  1802   0000A0  6E01               	movwf	set_led_color@color^0,c
  1803   0000A2  EC22  F008         	call	_set_led_color	;wreg free
  1804   0000A6                     
  1805                           ;color.c: 186:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1806   0000A6  0E12               	movlw	18
  1807   0000A8  6E38               	movwf	(??_get_color_code+1)^0,c
  1808   0000AA  0EDC               	movlw	220
  1809   0000AC  6E37               	movwf	??_get_color_code^0,c
  1810   0000AE  0E60               	movlw	96
  1811   0000B0                     u2137:
  1812   0000B0  2EE8               	decfsz	wreg,f,c
  1813   0000B2  D7FE               	bra	u2137
  1814   0000B4  2E37               	decfsz	??_get_color_code^0,f,c
  1815   0000B6  D7FC               	bra	u2137
  1816   0000B8  2E38               	decfsz	(??_get_color_code+1)^0,f,c
  1817   0000BA  D7FA               	bra	u2137
  1818   0000BC                     
  1819                           ;color.c: 187:     RGB.B = color_read_Blue();
  1820   0000BC  ECFA  F007         	call	_color_read_Blue	;wreg free
  1821   0000C0  C005  F0F4         	movff	?_color_read_Blue,_RGB+8
  1822   0000C4  C006  F0F5         	movff	?_color_read_Blue+1,_RGB+9
  1823   0000C8  0100               	movlb	0	; () banked
  1824   0000CA  6BF6               	clrf	(_RGB+10)& (0+255),b
  1825   0000CC  6BF7               	clrf	(_RGB+11)& (0+255),b
  1826   0000CE                     
  1827                           ; BSR set to: 0
  1828                           ;color.c: 188:     set_led_color(0b000);
  1829   0000CE  0E00               	movlw	0
  1830   0000D0  6E02               	movwf	(set_led_color@color+1)^0,c
  1831   0000D2  0E00               	movlw	0
  1832   0000D4  6E01               	movwf	set_led_color@color^0,c
  1833   0000D6  EC22  F008         	call	_set_led_color	;wreg free
  1834   0000DA                     
  1835                           ;color.c: 190:     struct RGB_val NormalizedRGB;;color.c: 191:     NormalizedRGB.R = RGB
      +                          .R >= Black_setup.R ? (RGB.R - Black_setup.R)*100/(White_setup.R - Black_setup.R) : 0;
  1836   0000DA  504B               	movf	_Black_setup^0,w,c
  1837   0000DC  0100               	movlb	0	; () banked
  1838   0000DE  5DEC               	subwf	_RGB& (0+255),w,b
  1839   0000E0  504C               	movf	(_Black_setup+1)^0,w,c
  1840   0000E2  59ED               	subwfb	(_RGB+1)& (0+255),w,b
  1841   0000E4  504D               	movf	(_Black_setup+2)^0,w,c
  1842   0000E6  59EE               	subwfb	(_RGB+2)& (0+255),w,b
  1843   0000E8  504E               	movf	(_Black_setup+3)^0,w,c
  1844   0000EA  59EF               	subwfb	(_RGB+3)& (0+255),w,b
  1845   0000EC  B0D8               	btfsc	status,0,c
  1846   0000EE  EF7B  F000         	goto	u1391
  1847   0000F2  EF7D  F000         	goto	u1390
  1848   0000F6                     u1391:
  1849   0000F6  EF87  F000         	goto	l2329
  1850   0000FA                     u1390:
  1851   0000FA                     
  1852                           ; BSR set to: 0
  1853   0000FA  0E00               	movlw	0
  1854   0000FC  6FCC               	movwf	_get_color_code$458& (0+255),b
  1855   0000FE  0E00               	movlw	0
  1856   000100  6FCD               	movwf	(_get_color_code$458+1)& (0+255),b
  1857   000102  0E00               	movlw	0
  1858   000104  6FCE               	movwf	(_get_color_code$458+2)& (0+255),b
  1859   000106  0E00               	movlw	0
  1860   000108  6FCF               	movwf	(_get_color_code$458+3)& (0+255),b
  1861   00010A  EFBC  F000         	goto	l2331
  1862   00010E                     l2329:
  1863                           
  1864                           ; BSR set to: 0
  1865   00010E  504B               	movf	_Black_setup^0,w,c
  1866   000110  5DEC               	subwf	_RGB& (0+255),w,b
  1867   000112  6E01               	movwf	___lmul@multiplier^0,c
  1868   000114  504C               	movf	(_Black_setup+1)^0,w,c
  1869   000116  59ED               	subwfb	(_RGB+1)& (0+255),w,b
  1870   000118  6E02               	movwf	(___lmul@multiplier+1)^0,c
  1871   00011A  504D               	movf	(_Black_setup+2)^0,w,c
  1872   00011C  59EE               	subwfb	(_RGB+2)& (0+255),w,b
  1873   00011E  6E03               	movwf	(___lmul@multiplier+2)^0,c
  1874   000120  504E               	movf	(_Black_setup+3)^0,w,c
  1875   000122  59EF               	subwfb	(_RGB+3)& (0+255),w,b
  1876   000124  6E04               	movwf	(___lmul@multiplier+3)^0,c
  1877   000126  0E64               	movlw	100
  1878   000128  6E05               	movwf	___lmul@multiplicand^0,c
  1879   00012A  0E00               	movlw	0
  1880   00012C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1881   00012E  0E00               	movlw	0
  1882   000130  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1883   000132  0E00               	movlw	0
  1884   000134  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1885   000136  ECF4  F006         	call	___lmul	;wreg free
  1886   00013A  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1887   00013E  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1888   000142  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1889   000146  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1890   00014A  504B               	movf	_Black_setup^0,w,c
  1891   00014C  0100               	movlb	0	; () banked
  1892   00014E  5D60               	subwf	_White_setup& (0+255),w,b
  1893   000150  6E11               	movwf	___lldiv@divisor^0,c
  1894   000152  504C               	movf	(_Black_setup+1)^0,w,c
  1895   000154  5961               	subwfb	(_White_setup+1)& (0+255),w,b
  1896   000156  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1897   000158  504D               	movf	(_Black_setup+2)^0,w,c
  1898   00015A  5962               	subwfb	(_White_setup+2)& (0+255),w,b
  1899   00015C  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1900   00015E  504E               	movf	(_Black_setup+3)^0,w,c
  1901   000160  5963               	subwfb	(_White_setup+3)& (0+255),w,b
  1902   000162  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1903   000164  EC47  F005         	call	___lldiv	;wreg free
  1904   000168  C00D  F0CC         	movff	?___lldiv,_get_color_code$458
  1905   00016C  C00E  F0CD         	movff	?___lldiv+1,_get_color_code$458+1
  1906   000170  C00F  F0CE         	movff	?___lldiv+2,_get_color_code$458+2
  1907   000174  C010  F0CF         	movff	?___lldiv+3,_get_color_code$458+3
  1908   000178                     l2331:
  1909   000178  C0CC  F0E0         	movff	_get_color_code$458,get_color_code@NormalizedRGB
  1910   00017C  C0CD  F0E1         	movff	_get_color_code$458+1,get_color_code@NormalizedRGB+1
  1911   000180  C0CE  F0E2         	movff	_get_color_code$458+2,get_color_code@NormalizedRGB+2
  1912   000184  C0CF  F0E3         	movff	_get_color_code$458+3,get_color_code@NormalizedRGB+3
  1913   000188                     
  1914                           ;color.c: 192:     NormalizedRGB.G = RGB.G >= Black_setup.G ? (RGB.G - Black_setup.G)*10
      +                          0/(White_setup.G - Black_setup.G) : 0;
  1915   000188  504F               	movf	(_Black_setup+4)^0,w,c
  1916   00018A  0100               	movlb	0	; () banked
  1917   00018C  5DF0               	subwf	(_RGB+4)& (0+255),w,b
  1918   00018E  5050               	movf	(_Black_setup+5)^0,w,c
  1919   000190  59F1               	subwfb	(_RGB+5)& (0+255),w,b
  1920   000192  5051               	movf	(_Black_setup+6)^0,w,c
  1921   000194  59F2               	subwfb	(_RGB+6)& (0+255),w,b
  1922   000196  5052               	movf	(_Black_setup+7)^0,w,c
  1923   000198  59F3               	subwfb	(_RGB+7)& (0+255),w,b
  1924   00019A  B0D8               	btfsc	status,0,c
  1925   00019C  EFD2  F000         	goto	u1401
  1926   0001A0  EFD4  F000         	goto	u1400
  1927   0001A4                     u1401:
  1928   0001A4  EFDE  F000         	goto	l2337
  1929   0001A8                     u1400:
  1930   0001A8                     
  1931                           ; BSR set to: 0
  1932   0001A8  0E00               	movlw	0
  1933   0001AA  6FD0               	movwf	_get_color_code$459& (0+255),b
  1934   0001AC  0E00               	movlw	0
  1935   0001AE  6FD1               	movwf	(_get_color_code$459+1)& (0+255),b
  1936   0001B0  0E00               	movlw	0
  1937   0001B2  6FD2               	movwf	(_get_color_code$459+2)& (0+255),b
  1938   0001B4  0E00               	movlw	0
  1939   0001B6  6FD3               	movwf	(_get_color_code$459+3)& (0+255),b
  1940   0001B8  EF13  F001         	goto	l2339
  1941   0001BC                     l2337:
  1942                           
  1943                           ; BSR set to: 0
  1944   0001BC  504F               	movf	(_Black_setup+4)^0,w,c
  1945   0001BE  5DF0               	subwf	(_RGB+4)& (0+255),w,b
  1946   0001C0  6E01               	movwf	___lmul@multiplier^0,c
  1947   0001C2  5050               	movf	(_Black_setup+5)^0,w,c
  1948   0001C4  59F1               	subwfb	(_RGB+5)& (0+255),w,b
  1949   0001C6  6E02               	movwf	(___lmul@multiplier+1)^0,c
  1950   0001C8  5051               	movf	(_Black_setup+6)^0,w,c
  1951   0001CA  59F2               	subwfb	(_RGB+6)& (0+255),w,b
  1952   0001CC  6E03               	movwf	(___lmul@multiplier+2)^0,c
  1953   0001CE  5052               	movf	(_Black_setup+7)^0,w,c
  1954   0001D0  59F3               	subwfb	(_RGB+7)& (0+255),w,b
  1955   0001D2  6E04               	movwf	(___lmul@multiplier+3)^0,c
  1956   0001D4  0E64               	movlw	100
  1957   0001D6  6E05               	movwf	___lmul@multiplicand^0,c
  1958   0001D8  0E00               	movlw	0
  1959   0001DA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1960   0001DC  0E00               	movlw	0
  1961   0001DE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1962   0001E0  0E00               	movlw	0
  1963   0001E2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1964   0001E4  ECF4  F006         	call	___lmul	;wreg free
  1965   0001E8  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1966   0001EC  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1967   0001F0  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1968   0001F4  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1969   0001F8  504F               	movf	(_Black_setup+4)^0,w,c
  1970   0001FA  0100               	movlb	0	; () banked
  1971   0001FC  5D64               	subwf	(_White_setup+4)& (0+255),w,b
  1972   0001FE  6E11               	movwf	___lldiv@divisor^0,c
  1973   000200  5050               	movf	(_Black_setup+5)^0,w,c
  1974   000202  5965               	subwfb	(_White_setup+5)& (0+255),w,b
  1975   000204  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1976   000206  5051               	movf	(_Black_setup+6)^0,w,c
  1977   000208  5966               	subwfb	(_White_setup+6)& (0+255),w,b
  1978   00020A  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1979   00020C  5052               	movf	(_Black_setup+7)^0,w,c
  1980   00020E  5967               	subwfb	(_White_setup+7)& (0+255),w,b
  1981   000210  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1982   000212  EC47  F005         	call	___lldiv	;wreg free
  1983   000216  C00D  F0D0         	movff	?___lldiv,_get_color_code$459
  1984   00021A  C00E  F0D1         	movff	?___lldiv+1,_get_color_code$459+1
  1985   00021E  C00F  F0D2         	movff	?___lldiv+2,_get_color_code$459+2
  1986   000222  C010  F0D3         	movff	?___lldiv+3,_get_color_code$459+3
  1987   000226                     l2339:
  1988   000226  C0D0  F0E4         	movff	_get_color_code$459,get_color_code@NormalizedRGB+4
  1989   00022A  C0D1  F0E5         	movff	_get_color_code$459+1,get_color_code@NormalizedRGB+5
  1990   00022E  C0D2  F0E6         	movff	_get_color_code$459+2,get_color_code@NormalizedRGB+6
  1991   000232  C0D3  F0E7         	movff	_get_color_code$459+3,get_color_code@NormalizedRGB+7
  1992   000236                     
  1993                           ;color.c: 193:     NormalizedRGB.B = RGB.B >= Black_setup.B ? (RGB.B - Black_setup.B)*10
      +                          0/(White_setup.B - Black_setup.B) : 0;
  1994   000236  5053               	movf	(_Black_setup+8)^0,w,c
  1995   000238  0100               	movlb	0	; () banked
  1996   00023A  5DF4               	subwf	(_RGB+8)& (0+255),w,b
  1997   00023C  5054               	movf	(_Black_setup+9)^0,w,c
  1998   00023E  59F5               	subwfb	(_RGB+9)& (0+255),w,b
  1999   000240  5055               	movf	(_Black_setup+10)^0,w,c
  2000   000242  59F6               	subwfb	(_RGB+10)& (0+255),w,b
  2001   000244  5056               	movf	(_Black_setup+11)^0,w,c
  2002   000246  59F7               	subwfb	(_RGB+11)& (0+255),w,b
  2003   000248  B0D8               	btfsc	status,0,c
  2004   00024A  EF29  F001         	goto	u1411
  2005   00024E  EF2B  F001         	goto	u1410
  2006   000252                     u1411:
  2007   000252  EF35  F001         	goto	l2345
  2008   000256                     u1410:
  2009   000256                     
  2010                           ; BSR set to: 0
  2011   000256  0E00               	movlw	0
  2012   000258  6FD4               	movwf	_get_color_code$460& (0+255),b
  2013   00025A  0E00               	movlw	0
  2014   00025C  6FD5               	movwf	(_get_color_code$460+1)& (0+255),b
  2015   00025E  0E00               	movlw	0
  2016   000260  6FD6               	movwf	(_get_color_code$460+2)& (0+255),b
  2017   000262  0E00               	movlw	0
  2018   000264  6FD7               	movwf	(_get_color_code$460+3)& (0+255),b
  2019   000266  EF6A  F001         	goto	l2347
  2020   00026A                     l2345:
  2021                           
  2022                           ; BSR set to: 0
  2023   00026A  5053               	movf	(_Black_setup+8)^0,w,c
  2024   00026C  5DF4               	subwf	(_RGB+8)& (0+255),w,b
  2025   00026E  6E01               	movwf	___lmul@multiplier^0,c
  2026   000270  5054               	movf	(_Black_setup+9)^0,w,c
  2027   000272  59F5               	subwfb	(_RGB+9)& (0+255),w,b
  2028   000274  6E02               	movwf	(___lmul@multiplier+1)^0,c
  2029   000276  5055               	movf	(_Black_setup+10)^0,w,c
  2030   000278  59F6               	subwfb	(_RGB+10)& (0+255),w,b
  2031   00027A  6E03               	movwf	(___lmul@multiplier+2)^0,c
  2032   00027C  5056               	movf	(_Black_setup+11)^0,w,c
  2033   00027E  59F7               	subwfb	(_RGB+11)& (0+255),w,b
  2034   000280  6E04               	movwf	(___lmul@multiplier+3)^0,c
  2035   000282  0E64               	movlw	100
  2036   000284  6E05               	movwf	___lmul@multiplicand^0,c
  2037   000286  0E00               	movlw	0
  2038   000288  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2039   00028A  0E00               	movlw	0
  2040   00028C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2041   00028E  0E00               	movlw	0
  2042   000290  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2043   000292  ECF4  F006         	call	___lmul	;wreg free
  2044   000296  C001  F00D         	movff	?___lmul,___lldiv@dividend
  2045   00029A  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  2046   00029E  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  2047   0002A2  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  2048   0002A6  5053               	movf	(_Black_setup+8)^0,w,c
  2049   0002A8  0100               	movlb	0	; () banked
  2050   0002AA  5D68               	subwf	(_White_setup+8)& (0+255),w,b
  2051   0002AC  6E11               	movwf	___lldiv@divisor^0,c
  2052   0002AE  5054               	movf	(_Black_setup+9)^0,w,c
  2053   0002B0  5969               	subwfb	(_White_setup+9)& (0+255),w,b
  2054   0002B2  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2055   0002B4  5055               	movf	(_Black_setup+10)^0,w,c
  2056   0002B6  596A               	subwfb	(_White_setup+10)& (0+255),w,b
  2057   0002B8  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2058   0002BA  5056               	movf	(_Black_setup+11)^0,w,c
  2059   0002BC  596B               	subwfb	(_White_setup+11)& (0+255),w,b
  2060   0002BE  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2061   0002C0  EC47  F005         	call	___lldiv	;wreg free
  2062   0002C4  C00D  F0D4         	movff	?___lldiv,_get_color_code$460
  2063   0002C8  C00E  F0D5         	movff	?___lldiv+1,_get_color_code$460+1
  2064   0002CC  C00F  F0D6         	movff	?___lldiv+2,_get_color_code$460+2
  2065   0002D0  C010  F0D7         	movff	?___lldiv+3,_get_color_code$460+3
  2066   0002D4                     l2347:
  2067   0002D4  C0D4  F0E8         	movff	_get_color_code$460,get_color_code@NormalizedRGB+8
  2068   0002D8  C0D5  F0E9         	movff	_get_color_code$460+1,get_color_code@NormalizedRGB+9
  2069   0002DC  C0D6  F0EA         	movff	_get_color_code$460+2,get_color_code@NormalizedRGB+10
  2070   0002E0  C0D7  F0EB         	movff	_get_color_code$460+3,get_color_code@NormalizedRGB+11
  2071   0002E4                     
  2072                           ;color.c: 195:     unsigned int min_value = get_color_distance(NormalizedRGB,Color_rules
      +                          [0]);
  2073   0002E4  EE20  F0E0         	lfsr	2,get_color_code@NormalizedRGB
  2074   0002E8  EE00  F007         	lfsr	0,get_color_distance@color1
  2075   0002EC  0E0B               	movlw	11
  2076   0002EE                     u1421:
  2077   0002EE  CFDB FFEB          	movff	plusw2,plusw0
  2078   0002F2  06E8               	decf	wreg,f,c
  2079   0002F4  E2FC               	bc	u1421
  2080   0002F6  EE21  F000         	lfsr	2,_Color_rules
  2081   0002FA  EE00  F013         	lfsr	0,get_color_distance@color2
  2082   0002FE  0E0B               	movlw	11
  2083   000300                     u1431:
  2084   000300  CFDB FFEB          	movff	plusw2,plusw0
  2085   000304  06E8               	decf	wreg,f,c
  2086   000306  E2FC               	bc	u1431
  2087   000308  EC9E  F002         	call	_get_color_distance	;wreg free
  2088   00030C  C007  F0D8         	movff	?_get_color_distance,get_color_code@min_value
  2089   000310  C008  F0D9         	movff	?_get_color_distance+1,get_color_code@min_value+1
  2090   000314                     
  2091                           ;color.c: 196:     unsigned int min_index = 0;
  2092   000314  0E00               	movlw	0
  2093   000316  0100               	movlb	0	; () banked
  2094   000318  6FDB               	movwf	(get_color_code@min_index+1)& (0+255),b
  2095   00031A  0E00               	movlw	0
  2096   00031C  6FDA               	movwf	get_color_code@min_index& (0+255),b
  2097   00031E                     
  2098                           ; BSR set to: 0
  2099                           ;color.c: 197:     for(unsigned int i = 1;i < 9; i++){
  2100   00031E  0E00               	movlw	0
  2101   000320  6FDF               	movwf	(get_color_code@i+1)& (0+255),b
  2102   000322  0E01               	movlw	1
  2103   000324  6FDE               	movwf	get_color_code@i& (0+255),b
  2104   000326                     l2359:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;color.c: 198:         unsigned int value = get_color_distance(NormalizedRGB,Color_rules
      +                          [i]);
  2108   000326  C0DE  F001         	movff	get_color_code@i,___wmul@multiplier
  2109   00032A  C0DF  F002         	movff	get_color_code@i+1,___wmul@multiplier+1
  2110   00032E  0E00               	movlw	0
  2111   000330  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2112   000332  0E0C               	movlw	12
  2113   000334  6E03               	movwf	___wmul@multiplicand^0,c
  2114   000336  ECA7  F008         	call	___wmul	;wreg free
  2115   00033A  0E00               	movlw	low _Color_rules
  2116   00033C  2401               	addwf	?___wmul^0,w,c
  2117   00033E  6ED9               	movwf	fsr2l,c
  2118   000340  0E01               	movlw	high _Color_rules
  2119   000342  2002               	addwfc	(?___wmul+1)^0,w,c
  2120   000344  6EDA               	movwf	fsr2h,c
  2121   000346  EE10  F0C0         	lfsr	1,_get_color_code$2465
  2122   00034A  0E0B               	movlw	11
  2123   00034C                     u1441:
  2124   00034C  CFDB FFE3          	movff	plusw2,plusw1
  2125   000350  06E8               	decf	wreg,f,c
  2126   000352  E2FC               	bc	u1441
  2127   000354                     
  2128                           ;color.c: 198:         unsigned int value = get_color_distance(NormalizedRGB,Color_rules
      +                          [i]);
  2129   000354  EE20  F0E0         	lfsr	2,get_color_code@NormalizedRGB
  2130   000358  EE00  F007         	lfsr	0,get_color_distance@color1
  2131   00035C  0E0B               	movlw	11
  2132   00035E                     u1451:
  2133   00035E  CFDB FFEB          	movff	plusw2,plusw0
  2134   000362  06E8               	decf	wreg,f,c
  2135   000364  E2FC               	bc	u1451
  2136   000366  EE20  F0C0         	lfsr	2,_get_color_code$2465
  2137   00036A  EE00  F013         	lfsr	0,get_color_distance@color2
  2138   00036E  0E0B               	movlw	11
  2139   000370                     u1461:
  2140   000370  CFDB FFEB          	movff	plusw2,plusw0
  2141   000374  06E8               	decf	wreg,f,c
  2142   000376  E2FC               	bc	u1461
  2143   000378  EC9E  F002         	call	_get_color_distance	;wreg free
  2144   00037C  C007  F0DC         	movff	?_get_color_distance,get_color_code@value
  2145   000380  C008  F0DD         	movff	?_get_color_distance+1,get_color_code@value+1
  2146   000384                     
  2147                           ;color.c: 199:         if(value < min_value){
  2148   000384  0100               	movlb	0	; () banked
  2149   000386  51D8               	movf	get_color_code@min_value& (0+255),w,b
  2150   000388  5DDC               	subwf	get_color_code@value& (0+255),w,b
  2151   00038A  51D9               	movf	(get_color_code@min_value+1)& (0+255),w,b
  2152   00038C  59DD               	subwfb	(get_color_code@value+1)& (0+255),w,b
  2153   00038E  B0D8               	btfsc	status,0,c
  2154   000390  EFCC  F001         	goto	u1471
  2155   000394  EFCE  F001         	goto	u1470
  2156   000398                     u1471:
  2157   000398  EFD6  F001         	goto	l2367
  2158   00039C                     u1470:
  2159   00039C                     
  2160                           ; BSR set to: 0
  2161                           ;color.c: 200:             min_index = i;
  2162   00039C  C0DE  F0DA         	movff	get_color_code@i,get_color_code@min_index
  2163   0003A0  C0DF  F0DB         	movff	get_color_code@i+1,get_color_code@min_index+1
  2164                           
  2165                           ;color.c: 201:             min_value = value;
  2166   0003A4  C0DC  F0D8         	movff	get_color_code@value,get_color_code@min_value
  2167   0003A8  C0DD  F0D9         	movff	get_color_code@value+1,get_color_code@min_value+1
  2168   0003AC                     l2367:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;color.c: 203:     }
  2172   0003AC  4BDE               	infsnz	get_color_code@i& (0+255),f,b
  2173   0003AE  2BDF               	incf	(get_color_code@i+1)& (0+255),f,b
  2174   0003B0                     
  2175                           ; BSR set to: 0
  2176   0003B0  51DF               	movf	(get_color_code@i+1)& (0+255),w,b
  2177   0003B2  E109               	bnz	u1480
  2178   0003B4  0E09               	movlw	9
  2179   0003B6  5DDE               	subwf	get_color_code@i& (0+255),w,b
  2180   0003B8  A0D8               	btfss	status,0,c
  2181   0003BA  EFE1  F001         	goto	u1481
  2182   0003BE  EFE3  F001         	goto	u1480
  2183   0003C2                     u1481:
  2184   0003C2  EF93  F001         	goto	l2359
  2185   0003C6                     u1480:
  2186   0003C6                     
  2187                           ; BSR set to: 0
  2188                           ;color.c: 204:     return min_index;
  2189   0003C6  C0DA  F035         	movff	get_color_code@min_index,?_get_color_code
  2190   0003CA  C0DB  F036         	movff	get_color_code@min_index+1,?_get_color_code+1
  2191   0003CE                     
  2192                           ; BSR set to: 0
  2193   0003CE  0012               	return		;funcret
  2194   0003D0                     __end_of_get_color_code:
  2195                           	callstack 0
  2196                           
  2197 ;; *************** function _get_color_distance *****************
  2198 ;; Defined at:
  2199 ;;		line 146 in file "color.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  color1         12    6[COMRAM] struct RGB_val
  2202 ;;  color2         12   18[COMRAM] struct RGB_val
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  B_offset        2   50[COMRAM] unsigned int 
  2205 ;;  G_offset        2   48[COMRAM] unsigned int 
  2206 ;;  R_offset        2   46[COMRAM] unsigned int 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  2    6[COMRAM] unsigned int 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2216 ;;      Params:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Totals:        46       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;Total ram usage:       46 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 3
  2223 ;; This function calls:
  2224 ;;		___wmul
  2225 ;; This function is called by:
  2226 ;;		_get_color_code
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text8
  2231   00053C                     __ptext8:
  2232                           	callstack 0
  2233   00053C                     _get_color_distance:
  2234                           	callstack 26
  2235   00053C                     
  2236                           ;color.c: 147:     unsigned int R_offset = color1.R >= color2.R ? color1.R - color2.R : 
      +                          color2.R - color1.R;
  2237   00053C  5013               	movf	get_color_distance@color2^0,w,c
  2238   00053E  5C07               	subwf	get_color_distance@color1^0,w,c
  2239   000540  5014               	movf	(get_color_distance@color2+1)^0,w,c
  2240   000542  5808               	subwfb	(get_color_distance@color1+1)^0,w,c
  2241   000544  5015               	movf	(get_color_distance@color2+2)^0,w,c
  2242   000546  5809               	subwfb	(get_color_distance@color1+2)^0,w,c
  2243   000548  5016               	movf	(get_color_distance@color2+3)^0,w,c
  2244   00054A  580A               	subwfb	(get_color_distance@color1+3)^0,w,c
  2245   00054C  B0D8               	btfsc	status,0,c
  2246   00054E  EFAB  F002         	goto	u1151
  2247   000552  EFAD  F002         	goto	u1150
  2248   000556                     u1151:
  2249   000556  EFBB  F002         	goto	l2189
  2250   00055A                     u1150:
  2251   00055A  5007               	movf	get_color_distance@color1^0,w,c
  2252   00055C  5C13               	subwf	get_color_distance@color2^0,w,c
  2253   00055E  6E23               	movwf	_get_color_distance$417^0,c
  2254   000560  5008               	movf	(get_color_distance@color1+1)^0,w,c
  2255   000562  5814               	subwfb	(get_color_distance@color2+1)^0,w,c
  2256   000564  6E24               	movwf	(_get_color_distance$417+1)^0,c
  2257   000566  5009               	movf	(get_color_distance@color1+2)^0,w,c
  2258   000568  5815               	subwfb	(get_color_distance@color2+2)^0,w,c
  2259   00056A  6E25               	movwf	(_get_color_distance$417+2)^0,c
  2260   00056C  500A               	movf	(get_color_distance@color1+3)^0,w,c
  2261   00056E  5816               	subwfb	(get_color_distance@color2+3)^0,w,c
  2262   000570  6E26               	movwf	(_get_color_distance$417+3)^0,c
  2263   000572  EFC7  F002         	goto	l2191
  2264   000576                     l2189:
  2265   000576  5013               	movf	get_color_distance@color2^0,w,c
  2266   000578  5C07               	subwf	get_color_distance@color1^0,w,c
  2267   00057A  6E23               	movwf	_get_color_distance$417^0,c
  2268   00057C  5014               	movf	(get_color_distance@color2+1)^0,w,c
  2269   00057E  5808               	subwfb	(get_color_distance@color1+1)^0,w,c
  2270   000580  6E24               	movwf	(_get_color_distance$417+1)^0,c
  2271   000582  5015               	movf	(get_color_distance@color2+2)^0,w,c
  2272   000584  5809               	subwfb	(get_color_distance@color1+2)^0,w,c
  2273   000586  6E25               	movwf	(_get_color_distance$417+2)^0,c
  2274   000588  5016               	movf	(get_color_distance@color2+3)^0,w,c
  2275   00058A  580A               	subwfb	(get_color_distance@color1+3)^0,w,c
  2276   00058C  6E26               	movwf	(_get_color_distance$417+3)^0,c
  2277   00058E                     l2191:
  2278   00058E  C023  F02F         	movff	_get_color_distance$417,get_color_distance@R_offset
  2279   000592  C024  F030         	movff	_get_color_distance$417+1,get_color_distance@R_offset+1
  2280                           
  2281                           ;color.c: 148:     unsigned int G_offset = color1.G >= color2.G ? color1.G - color2.G : 
      +                          color2.G - color1.G;
  2282   000596  5017               	movf	(get_color_distance@color2+4)^0,w,c
  2283   000598  5C0B               	subwf	(get_color_distance@color1+4)^0,w,c
  2284   00059A  5018               	movf	(get_color_distance@color2+5)^0,w,c
  2285   00059C  580C               	subwfb	(get_color_distance@color1+5)^0,w,c
  2286   00059E  5019               	movf	(get_color_distance@color2+6)^0,w,c
  2287   0005A0  580D               	subwfb	(get_color_distance@color1+6)^0,w,c
  2288   0005A2  501A               	movf	(get_color_distance@color2+7)^0,w,c
  2289   0005A4  580E               	subwfb	(get_color_distance@color1+7)^0,w,c
  2290   0005A6  B0D8               	btfsc	status,0,c
  2291   0005A8  EFD8  F002         	goto	u1161
  2292   0005AC  EFDA  F002         	goto	u1160
  2293   0005B0                     u1161:
  2294   0005B0  EFE8  F002         	goto	l2195
  2295   0005B4                     u1160:
  2296   0005B4  500B               	movf	(get_color_distance@color1+4)^0,w,c
  2297   0005B6  5C17               	subwf	(get_color_distance@color2+4)^0,w,c
  2298   0005B8  6E27               	movwf	_get_color_distance$419^0,c
  2299   0005BA  500C               	movf	(get_color_distance@color1+5)^0,w,c
  2300   0005BC  5818               	subwfb	(get_color_distance@color2+5)^0,w,c
  2301   0005BE  6E28               	movwf	(_get_color_distance$419+1)^0,c
  2302   0005C0  500D               	movf	(get_color_distance@color1+6)^0,w,c
  2303   0005C2  5819               	subwfb	(get_color_distance@color2+6)^0,w,c
  2304   0005C4  6E29               	movwf	(_get_color_distance$419+2)^0,c
  2305   0005C6  500E               	movf	(get_color_distance@color1+7)^0,w,c
  2306   0005C8  581A               	subwfb	(get_color_distance@color2+7)^0,w,c
  2307   0005CA  6E2A               	movwf	(_get_color_distance$419+3)^0,c
  2308   0005CC  EFF4  F002         	goto	l2197
  2309   0005D0                     l2195:
  2310   0005D0  5017               	movf	(get_color_distance@color2+4)^0,w,c
  2311   0005D2  5C0B               	subwf	(get_color_distance@color1+4)^0,w,c
  2312   0005D4  6E27               	movwf	_get_color_distance$419^0,c
  2313   0005D6  5018               	movf	(get_color_distance@color2+5)^0,w,c
  2314   0005D8  580C               	subwfb	(get_color_distance@color1+5)^0,w,c
  2315   0005DA  6E28               	movwf	(_get_color_distance$419+1)^0,c
  2316   0005DC  5019               	movf	(get_color_distance@color2+6)^0,w,c
  2317   0005DE  580D               	subwfb	(get_color_distance@color1+6)^0,w,c
  2318   0005E0  6E29               	movwf	(_get_color_distance$419+2)^0,c
  2319   0005E2  501A               	movf	(get_color_distance@color2+7)^0,w,c
  2320   0005E4  580E               	subwfb	(get_color_distance@color1+7)^0,w,c
  2321   0005E6  6E2A               	movwf	(_get_color_distance$419+3)^0,c
  2322   0005E8                     l2197:
  2323   0005E8  C027  F031         	movff	_get_color_distance$419,get_color_distance@G_offset
  2324   0005EC  C028  F032         	movff	_get_color_distance$419+1,get_color_distance@G_offset+1
  2325                           
  2326                           ;color.c: 149:     unsigned int B_offset = color1.B >= color2.B ? color1.B - color2.B : 
      +                          color2.B - color1.B;
  2327   0005F0  501B               	movf	(get_color_distance@color2+8)^0,w,c
  2328   0005F2  5C0F               	subwf	(get_color_distance@color1+8)^0,w,c
  2329   0005F4  501C               	movf	(get_color_distance@color2+9)^0,w,c
  2330   0005F6  5810               	subwfb	(get_color_distance@color1+9)^0,w,c
  2331   0005F8  501D               	movf	(get_color_distance@color2+10)^0,w,c
  2332   0005FA  5811               	subwfb	(get_color_distance@color1+10)^0,w,c
  2333   0005FC  501E               	movf	(get_color_distance@color2+11)^0,w,c
  2334   0005FE  5812               	subwfb	(get_color_distance@color1+11)^0,w,c
  2335   000600  B0D8               	btfsc	status,0,c
  2336   000602  EF05  F003         	goto	u1171
  2337   000606  EF07  F003         	goto	u1170
  2338   00060A                     u1171:
  2339   00060A  EF15  F003         	goto	l2201
  2340   00060E                     u1170:
  2341   00060E  500F               	movf	(get_color_distance@color1+8)^0,w,c
  2342   000610  5C1B               	subwf	(get_color_distance@color2+8)^0,w,c
  2343   000612  6E2B               	movwf	_get_color_distance$421^0,c
  2344   000614  5010               	movf	(get_color_distance@color1+9)^0,w,c
  2345   000616  581C               	subwfb	(get_color_distance@color2+9)^0,w,c
  2346   000618  6E2C               	movwf	(_get_color_distance$421+1)^0,c
  2347   00061A  5011               	movf	(get_color_distance@color1+10)^0,w,c
  2348   00061C  581D               	subwfb	(get_color_distance@color2+10)^0,w,c
  2349   00061E  6E2D               	movwf	(_get_color_distance$421+2)^0,c
  2350   000620  5012               	movf	(get_color_distance@color1+11)^0,w,c
  2351   000622  581E               	subwfb	(get_color_distance@color2+11)^0,w,c
  2352   000624  6E2E               	movwf	(_get_color_distance$421+3)^0,c
  2353   000626  EF21  F003         	goto	l2203
  2354   00062A                     l2201:
  2355   00062A  501B               	movf	(get_color_distance@color2+8)^0,w,c
  2356   00062C  5C0F               	subwf	(get_color_distance@color1+8)^0,w,c
  2357   00062E  6E2B               	movwf	_get_color_distance$421^0,c
  2358   000630  501C               	movf	(get_color_distance@color2+9)^0,w,c
  2359   000632  5810               	subwfb	(get_color_distance@color1+9)^0,w,c
  2360   000634  6E2C               	movwf	(_get_color_distance$421+1)^0,c
  2361   000636  501D               	movf	(get_color_distance@color2+10)^0,w,c
  2362   000638  5811               	subwfb	(get_color_distance@color1+10)^0,w,c
  2363   00063A  6E2D               	movwf	(_get_color_distance$421+2)^0,c
  2364   00063C  501E               	movf	(get_color_distance@color2+11)^0,w,c
  2365   00063E  5812               	subwfb	(get_color_distance@color1+11)^0,w,c
  2366   000640  6E2E               	movwf	(_get_color_distance$421+3)^0,c
  2367   000642                     l2203:
  2368   000642  C02B  F033         	movff	_get_color_distance$421,get_color_distance@B_offset
  2369   000646  C02C  F034         	movff	_get_color_distance$421+1,get_color_distance@B_offset+1
  2370   00064A                     
  2371                           ;color.c: 151:     return R_offset*R_offset + G_offset*G_offset + B_offset*B_offset;
  2372   00064A  C02F  F001         	movff	get_color_distance@R_offset,___wmul@multiplier
  2373   00064E  C030  F002         	movff	get_color_distance@R_offset+1,___wmul@multiplier+1
  2374   000652  C02F  F003         	movff	get_color_distance@R_offset,___wmul@multiplicand
  2375   000656  C030  F004         	movff	get_color_distance@R_offset+1,___wmul@multiplicand+1
  2376   00065A  ECA7  F008         	call	___wmul	;wreg free
  2377   00065E  C001  F01F         	movff	?___wmul,??_get_color_distance
  2378   000662  C002  F020         	movff	?___wmul+1,??_get_color_distance+1
  2379   000666  C031  F001         	movff	get_color_distance@G_offset,___wmul@multiplier
  2380   00066A  C032  F002         	movff	get_color_distance@G_offset+1,___wmul@multiplier+1
  2381   00066E  C031  F003         	movff	get_color_distance@G_offset,___wmul@multiplicand
  2382   000672  C032  F004         	movff	get_color_distance@G_offset+1,___wmul@multiplicand+1
  2383   000676  ECA7  F008         	call	___wmul	;wreg free
  2384   00067A  5001               	movf	?___wmul^0,w,c
  2385   00067C  241F               	addwf	??_get_color_distance^0,w,c
  2386   00067E  6E21               	movwf	(??_get_color_distance+2)^0,c
  2387   000680  5002               	movf	(?___wmul+1)^0,w,c
  2388   000682  2020               	addwfc	(??_get_color_distance+1)^0,w,c
  2389   000684  6E22               	movwf	(??_get_color_distance+3)^0,c
  2390   000686  C033  F001         	movff	get_color_distance@B_offset,___wmul@multiplier
  2391   00068A  C034  F002         	movff	get_color_distance@B_offset+1,___wmul@multiplier+1
  2392   00068E  C033  F003         	movff	get_color_distance@B_offset,___wmul@multiplicand
  2393   000692  C034  F004         	movff	get_color_distance@B_offset+1,___wmul@multiplicand+1
  2394   000696  ECA7  F008         	call	___wmul	;wreg free
  2395   00069A  5001               	movf	?___wmul^0,w,c
  2396   00069C  2421               	addwf	(??_get_color_distance+2)^0,w,c
  2397   00069E  6E07               	movwf	?_get_color_distance^0,c
  2398   0006A0  5002               	movf	(?___wmul+1)^0,w,c
  2399   0006A2  2022               	addwfc	(??_get_color_distance+3)^0,w,c
  2400   0006A4  6E08               	movwf	(?_get_color_distance+1)^0,c
  2401   0006A6  0012               	return		;funcret
  2402   0006A8                     __end_of_get_color_distance:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function ___wmul *****************
  2406 ;; Defined at:
  2407 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  multiplier      2    0[COMRAM] unsigned int 
  2410 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  product         2    4[COMRAM] unsigned int 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  2    0[COMRAM] unsigned int 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, prodl, prodh
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2422 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2425 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;Total ram usage:        6 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; Hardware stack levels required when called: 2
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_get_color_distance
  2433 ;;		_get_color_code
  2434 ;;		_get_wall_presence
  2435 ;;		_setMotorPWM
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text9
  2440   00114E                     __ptext9:
  2441                           	callstack 0
  2442   00114E                     ___wmul:
  2443                           	callstack 26
  2444   00114E  5001               	movf	___wmul@multiplier^0,w,c
  2445   001150  0203               	mulwf	___wmul@multiplicand^0,c
  2446   001152  CFF3 F005          	movff	prodl,___wmul@product
  2447   001156  CFF4 F006          	movff	prodh,___wmul@product+1
  2448   00115A  5001               	movf	___wmul@multiplier^0,w,c
  2449   00115C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2450   00115E  50F3               	movf	243,w,c
  2451   001160  2606               	addwf	(___wmul@product+1)^0,f,c
  2452   001162  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2453   001164  0203               	mulwf	___wmul@multiplicand^0,c
  2454   001166  50F3               	movf	243,w,c
  2455   001168  2606               	addwf	(___wmul@product+1)^0,f,c
  2456   00116A  C005  F001         	movff	___wmul@product,?___wmul
  2457   00116E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2458   001172  0012               	return		;funcret
  2459   001174                     __end_of___wmul:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function ___lmul *****************
  2463 ;; Defined at:
  2464 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  multiplier      4    0[COMRAM] unsigned long 
  2467 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  product         4    8[COMRAM] unsigned long 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  4    0[COMRAM] unsigned long 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2479 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2480 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;Total ram usage:       12 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; Hardware stack levels required when called: 2
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_get_color_code
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text10
  2494   000DE8                     __ptext10:
  2495                           	callstack 0
  2496   000DE8                     ___lmul:
  2497                           	callstack 27
  2498   000DE8  0E00               	movlw	0
  2499   000DEA  6E09               	movwf	___lmul@product^0,c
  2500   000DEC  0E00               	movlw	0
  2501   000DEE  6E0A               	movwf	(___lmul@product+1)^0,c
  2502   000DF0  0E00               	movlw	0
  2503   000DF2  6E0B               	movwf	(___lmul@product+2)^0,c
  2504   000DF4  0E00               	movlw	0
  2505   000DF6  6E0C               	movwf	(___lmul@product+3)^0,c
  2506   000DF8                     l2227:
  2507   000DF8  A001               	btfss	___lmul@multiplier^0,0,c
  2508   000DFA  EF01  F007         	goto	u1201
  2509   000DFE  EF03  F007         	goto	u1200
  2510   000E02                     u1201:
  2511   000E02  EF0B  F007         	goto	l2231
  2512   000E06                     u1200:
  2513   000E06  5005               	movf	___lmul@multiplicand^0,w,c
  2514   000E08  2609               	addwf	___lmul@product^0,f,c
  2515   000E0A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  2516   000E0C  220A               	addwfc	(___lmul@product+1)^0,f,c
  2517   000E0E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  2518   000E10  220B               	addwfc	(___lmul@product+2)^0,f,c
  2519   000E12  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  2520   000E14  220C               	addwfc	(___lmul@product+3)^0,f,c
  2521   000E16                     l2231:
  2522   000E16  90D8               	bcf	status,0,c
  2523   000E18  3605               	rlcf	___lmul@multiplicand^0,f,c
  2524   000E1A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2525   000E1C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2526   000E1E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2527   000E20  90D8               	bcf	status,0,c
  2528   000E22  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  2529   000E24  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  2530   000E26  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  2531   000E28  3201               	rrcf	___lmul@multiplier^0,f,c
  2532   000E2A  5001               	movf	___lmul@multiplier^0,w,c
  2533   000E2C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  2534   000E2E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  2535   000E30  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  2536   000E32  A4D8               	btfss	status,2,c
  2537   000E34  EF1E  F007         	goto	u1211
  2538   000E38  EF20  F007         	goto	u1210
  2539   000E3C                     u1211:
  2540   000E3C  EFFC  F006         	goto	l2227
  2541   000E40                     u1210:
  2542   000E40  C009  F001         	movff	___lmul@product,?___lmul
  2543   000E44  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  2544   000E48  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  2545   000E4C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  2546   000E50  0012               	return		;funcret
  2547   000E52                     __end_of___lmul:
  2548                           	callstack 0
  2549                           
  2550 ;; *************** function ___lldiv *****************
  2551 ;; Defined at:
  2552 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  dividend        4   12[COMRAM] unsigned long 
  2555 ;;  divisor         4   16[COMRAM] unsigned long 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  quotient        4   20[COMRAM] unsigned long 
  2558 ;;  counter         1   24[COMRAM] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  4   12[COMRAM] unsigned long 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2568 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2569 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2571 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2572 ;;Total ram usage:       13 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 2
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_get_color_code
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text11
  2583   000A8E                     __ptext11:
  2584                           	callstack 0
  2585   000A8E                     ___lldiv:
  2586                           	callstack 27
  2587   000A8E  0E00               	movlw	0
  2588   000A90  6E15               	movwf	___lldiv@quotient^0,c
  2589   000A92  0E00               	movlw	0
  2590   000A94  6E16               	movwf	(___lldiv@quotient+1)^0,c
  2591   000A96  0E00               	movlw	0
  2592   000A98  6E17               	movwf	(___lldiv@quotient+2)^0,c
  2593   000A9A  0E00               	movlw	0
  2594   000A9C  6E18               	movwf	(___lldiv@quotient+3)^0,c
  2595   000A9E  5011               	movf	___lldiv@divisor^0,w,c
  2596   000AA0  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  2597   000AA2  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  2598   000AA4  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  2599   000AA6  B4D8               	btfsc	status,2,c
  2600   000AA8  EF58  F005         	goto	u1221
  2601   000AAC  EF5A  F005         	goto	u1220
  2602   000AB0                     u1221:
  2603   000AB0  EF90  F005         	goto	l435
  2604   000AB4                     u1220:
  2605   000AB4  0E01               	movlw	1
  2606   000AB6  6E19               	movwf	___lldiv@counter^0,c
  2607   000AB8  EF64  F005         	goto	l2243
  2608   000ABC                     l2241:
  2609   000ABC  90D8               	bcf	status,0,c
  2610   000ABE  3611               	rlcf	___lldiv@divisor^0,f,c
  2611   000AC0  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  2612   000AC2  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  2613   000AC4  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  2614   000AC6  2A19               	incf	___lldiv@counter^0,f,c
  2615   000AC8                     l2243:
  2616   000AC8  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  2617   000ACA  EF69  F005         	goto	u1231
  2618   000ACE  EF6B  F005         	goto	u1230
  2619   000AD2                     u1231:
  2620   000AD2  EF5E  F005         	goto	l2241
  2621   000AD6                     u1230:
  2622   000AD6                     l2245:
  2623   000AD6  90D8               	bcf	status,0,c
  2624   000AD8  3615               	rlcf	___lldiv@quotient^0,f,c
  2625   000ADA  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  2626   000ADC  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  2627   000ADE  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  2628   000AE0  5011               	movf	___lldiv@divisor^0,w,c
  2629   000AE2  5C0D               	subwf	___lldiv@dividend^0,w,c
  2630   000AE4  5012               	movf	(___lldiv@divisor+1)^0,w,c
  2631   000AE6  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  2632   000AE8  5013               	movf	(___lldiv@divisor+2)^0,w,c
  2633   000AEA  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  2634   000AEC  5014               	movf	(___lldiv@divisor+3)^0,w,c
  2635   000AEE  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  2636   000AF0  A0D8               	btfss	status,0,c
  2637   000AF2  EF7D  F005         	goto	u1241
  2638   000AF6  EF7F  F005         	goto	u1240
  2639   000AFA                     u1241:
  2640   000AFA  EF88  F005         	goto	l2253
  2641   000AFE                     u1240:
  2642   000AFE  5011               	movf	___lldiv@divisor^0,w,c
  2643   000B00  5E0D               	subwf	___lldiv@dividend^0,f,c
  2644   000B02  5012               	movf	(___lldiv@divisor+1)^0,w,c
  2645   000B04  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  2646   000B06  5013               	movf	(___lldiv@divisor+2)^0,w,c
  2647   000B08  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  2648   000B0A  5014               	movf	(___lldiv@divisor+3)^0,w,c
  2649   000B0C  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  2650   000B0E  8015               	bsf	___lldiv@quotient^0,0,c
  2651   000B10                     l2253:
  2652   000B10  90D8               	bcf	status,0,c
  2653   000B12  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  2654   000B14  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  2655   000B16  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  2656   000B18  3211               	rrcf	___lldiv@divisor^0,f,c
  2657   000B1A  2E19               	decfsz	___lldiv@counter^0,f,c
  2658   000B1C  EF6B  F005         	goto	l2245
  2659   000B20                     l435:
  2660   000B20  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  2661   000B24  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  2662   000B28  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  2663   000B2C  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  2664   000B30  0012               	return		;funcret
  2665   000B32                     __end_of___lldiv:
  2666                           	callstack 0
  2667                           
  2668 ;; *************** function _color_click_init *****************
  2669 ;; Defined at:
  2670 ;;		line 30 in file "color.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;Total ram usage:        1 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; Hardware stack levels required when called: 6
  2691 ;; This function calls:
  2692 ;;		_I2C_2_Master_Init
  2693 ;;		_calibrate_black
  2694 ;;		_calibrate_white
  2695 ;;		_color_writetoaddr
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text12
  2702   0006A8                     __ptext12:
  2703                           	callstack 0
  2704   0006A8                     _color_click_init:
  2705                           	callstack 24
  2706   0006A8                     
  2707                           ;color.c: 33:     I2C_2_Master_Init();
  2708   0006A8  EC7E  F008         	call	_I2C_2_Master_Init	;wreg free
  2709   0006AC                     
  2710                           ;color.c: 36:   color_writetoaddr(0x00, 0x01);
  2711   0006AC  0E01               	movlw	1
  2712   0006AE  6E03               	movwf	color_writetoaddr@value^0,c
  2713   0006B0  0E00               	movlw	0
  2714   0006B2  ECBA  F008         	call	_color_writetoaddr
  2715   0006B6                     
  2716                           ;color.c: 37:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2717   0006B6  0E3F               	movlw	63
  2718   0006B8  6E16               	movwf	??_color_click_init^0,c
  2719   0006BA  0E55               	movlw	85
  2720   0006BC                     u2147:
  2721   0006BC  2EE8               	decfsz	wreg,f,c
  2722   0006BE  D7FE               	bra	u2147
  2723   0006C0  2E16               	decfsz	??_color_click_init^0,f,c
  2724   0006C2  D7FC               	bra	u2147
  2725   0006C4  F000               	nop	
  2726   0006C6                     
  2727                           ;color.c: 40:  color_writetoaddr(0x00, 0x03);
  2728   0006C6  0E03               	movlw	3
  2729   0006C8  6E03               	movwf	color_writetoaddr@value^0,c
  2730   0006CA  0E00               	movlw	0
  2731   0006CC  ECBA  F008         	call	_color_writetoaddr
  2732   0006D0                     
  2733                           ;color.c: 43:  color_writetoaddr(0x01, 0xD5);
  2734   0006D0  0ED5               	movlw	213
  2735   0006D2  6E03               	movwf	color_writetoaddr@value^0,c
  2736   0006D4  0E01               	movlw	1
  2737   0006D6  ECBA  F008         	call	_color_writetoaddr
  2738   0006DA                     
  2739                           ;color.c: 45:     TRISFbits.TRISF7 = 0;
  2740   0006DA  9E86               	bcf	134,7,c	;volatile
  2741   0006DC                     
  2742                           ;color.c: 46:     TRISGbits.TRISG1 = 0;
  2743   0006DC  9287               	bcf	135,1,c	;volatile
  2744   0006DE                     
  2745                           ;color.c: 47:     TRISAbits.TRISA4 = 0;
  2746   0006DE  9881               	bcf	129,4,c	;volatile
  2747   0006E0                     
  2748                           ;color.c: 49:     Color_rules[0] = Red_rule;
  2749   0006E0  EE20  F0B4         	lfsr	2,_Red_rule
  2750   0006E4  EE11  F000         	lfsr	1,_Color_rules
  2751   0006E8  0E0B               	movlw	11
  2752   0006EA                     u1251:
  2753   0006EA  CFDB FFE3          	movff	plusw2,plusw1
  2754   0006EE  06E8               	decf	wreg,f,c
  2755   0006F0  E2FC               	bc	u1251
  2756   0006F2                     
  2757                           ;color.c: 50:     Color_rules[1] = Green_rule;
  2758   0006F2  EE20  F0A8         	lfsr	2,_Green_rule
  2759   0006F6  EE11  F00C         	lfsr	1,_Color_rules+12
  2760   0006FA  0E0B               	movlw	11
  2761   0006FC                     u1261:
  2762   0006FC  CFDB FFE3          	movff	plusw2,plusw1
  2763   000700  06E8               	decf	wreg,f,c
  2764   000702  E2FC               	bc	u1261
  2765   000704                     
  2766                           ;color.c: 51:     Color_rules[2] = Blue_rule;
  2767   000704  EE20  F09C         	lfsr	2,_Blue_rule
  2768   000708  EE11  F018         	lfsr	1,_Color_rules+24
  2769   00070C  0E0B               	movlw	11
  2770   00070E                     u1271:
  2771   00070E  CFDB FFE3          	movff	plusw2,plusw1
  2772   000712  06E8               	decf	wreg,f,c
  2773   000714  E2FC               	bc	u1271
  2774   000716                     
  2775                           ;color.c: 52:     Color_rules[3] = Yellow_rule;
  2776   000716  EE20  F090         	lfsr	2,_Yellow_rule
  2777   00071A  EE11  F024         	lfsr	1,_Color_rules+36
  2778   00071E  0E0B               	movlw	11
  2779   000720                     u1281:
  2780   000720  CFDB FFE3          	movff	plusw2,plusw1
  2781   000724  06E8               	decf	wreg,f,c
  2782   000726  E2FC               	bc	u1281
  2783   000728                     
  2784                           ;color.c: 53:     Color_rules[4] = Pink_rule;
  2785   000728  EE20  F084         	lfsr	2,_Pink_rule
  2786   00072C  EE11  F030         	lfsr	1,_Color_rules+48
  2787   000730  0E0B               	movlw	11
  2788   000732                     u1291:
  2789   000732  CFDB FFE3          	movff	plusw2,plusw1
  2790   000736  06E8               	decf	wreg,f,c
  2791   000738  E2FC               	bc	u1291
  2792   00073A                     
  2793                           ;color.c: 54:     Color_rules[5] = Orange_rule;
  2794   00073A  EE20  F078         	lfsr	2,_Orange_rule
  2795   00073E  EE11  F03C         	lfsr	1,_Color_rules+60
  2796   000742  0E0B               	movlw	11
  2797   000744                     u1301:
  2798   000744  CFDB FFE3          	movff	plusw2,plusw1
  2799   000748  06E8               	decf	wreg,f,c
  2800   00074A  E2FC               	bc	u1301
  2801   00074C                     
  2802                           ;color.c: 55:     Color_rules[6] = Lightblue_rule;
  2803   00074C  EE20  F06C         	lfsr	2,_Lightblue_rule
  2804   000750  EE11  F048         	lfsr	1,_Color_rules+72
  2805   000754  0E0B               	movlw	11
  2806   000756                     u1311:
  2807   000756  CFDB FFE3          	movff	plusw2,plusw1
  2808   00075A  06E8               	decf	wreg,f,c
  2809   00075C  E2FC               	bc	u1311
  2810   00075E                     
  2811                           ;color.c: 56:     Color_rules[7] = White_rule;
  2812   00075E  EE21  F0DC         	lfsr	2,_White_rule
  2813   000762  EE11  F054         	lfsr	1,_Color_rules+84
  2814   000766  0E0B               	movlw	11
  2815   000768                     u1321:
  2816   000768  CFDB FFE3          	movff	plusw2,plusw1
  2817   00076C  06E8               	decf	wreg,f,c
  2818   00076E  E2FC               	bc	u1321
  2819   000770                     
  2820                           ;color.c: 57:     Color_rules[8] = Black_rule;
  2821   000770  EE21  F0D0         	lfsr	2,_Black_rule
  2822   000774  EE11  F060         	lfsr	1,_Color_rules+96
  2823   000778  0E0B               	movlw	11
  2824   00077A                     u1331:
  2825   00077A  CFDB FFE3          	movff	plusw2,plusw1
  2826   00077E  06E8               	decf	wreg,f,c
  2827   000780  E2FC               	bc	u1331
  2828   000782                     
  2829                           ;color.c: 66:     TRISFbits.TRISF3=1;
  2830   000782  8686               	bsf	134,3,c	;volatile
  2831   000784                     
  2832                           ;color.c: 67:     ANSELFbits.ANSELF3=0;
  2833   000784  010E               	movlb	14	; () banked
  2834   000786  97B4               	bcf	180,3,b	;volatile
  2835   000788                     
  2836                           ; BSR set to: 14
  2837                           ;color.c: 68:     TRISFbits.TRISF2=1;
  2838   000788  8486               	bsf	134,2,c	;volatile
  2839   00078A                     
  2840                           ; BSR set to: 14
  2841                           ;color.c: 69:     ANSELFbits.ANSELF2=0;
  2842   00078A  95B4               	bcf	180,2,b	;volatile
  2843   00078C                     l67:
  2844   00078C  A68E               	btfss	142,3,c	;volatile
  2845   00078E  EFCB  F003         	goto	u1341
  2846   000792  EFCD  F003         	goto	u1340
  2847   000796                     u1341:
  2848   000796  EFD4  F003         	goto	l71
  2849   00079A                     u1340:
  2850   00079A  B48E               	btfsc	142,2,c	;volatile
  2851   00079C  EFD2  F003         	goto	u1351
  2852   0007A0  EFD4  F003         	goto	u1350
  2853   0007A4                     u1351:
  2854   0007A4  EFC6  F003         	goto	l67
  2855   0007A8                     u1350:
  2856   0007A8                     l71:
  2857                           
  2858                           ;color.c: 72:     if(!PORTFbits.RF2){
  2859   0007A8  B48E               	btfsc	142,2,c	;volatile
  2860   0007AA  EFD9  F003         	goto	u1361
  2861   0007AE  EFDB  F003         	goto	u1360
  2862   0007B2                     u1361:
  2863   0007B2  EFDD  F003         	goto	l2303
  2864   0007B6                     u1360:
  2865   0007B6  EFEF  F003         	goto	l73
  2866   0007BA                     l2303:
  2867                           
  2868                           ;color.c: 75:     calibrate_white();
  2869   0007BA  ECF2  F004         	call	_calibrate_white	;wreg free
  2870   0007BE                     l74:
  2871   0007BE  B68E               	btfsc	142,3,c	;volatile
  2872   0007C0  EFE4  F003         	goto	u1371
  2873   0007C4  EFE6  F003         	goto	u1370
  2874   0007C8                     u1371:
  2875   0007C8  EFDF  F003         	goto	l74
  2876   0007CC                     u1370:
  2877   0007CC                     
  2878                           ;color.c: 77:     calibrate_black();
  2879   0007CC  ECF0  F003         	call	_calibrate_black	;wreg free
  2880   0007D0                     l77:
  2881   0007D0  B68E               	btfsc	142,3,c	;volatile
  2882   0007D2  EFED  F003         	goto	u1381
  2883   0007D6  EFEF  F003         	goto	u1380
  2884   0007DA                     u1381:
  2885   0007DA  EFE8  F003         	goto	l77
  2886   0007DE                     u1380:
  2887   0007DE                     l73:
  2888   0007DE  0012               	return		;funcret
  2889   0007E0                     __end_of_color_click_init:
  2890                           	callstack 0
  2891                           
  2892 ;; *************** function _color_writetoaddr *****************
  2893 ;; Defined at:
  2894 ;;		line 82 in file "color.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  address         1    wreg     unsigned char 
  2897 ;;  value           1    2[COMRAM] unsigned char 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  address         1    3[COMRAM] unsigned char 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2909 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2913 ;;Total ram usage:        2 bytes
  2914 ;; Hardware stack levels used: 1
  2915 ;; Hardware stack levels required when called: 4
  2916 ;; This function calls:
  2917 ;;		_I2C_2_Master_Start
  2918 ;;		_I2C_2_Master_Stop
  2919 ;;		_I2C_2_Master_Write
  2920 ;; This function is called by:
  2921 ;;		_color_click_init
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text13
  2926   001174                     __ptext13:
  2927                           	callstack 0
  2928   001174                     _color_writetoaddr:
  2929                           	callstack 25
  2930                           
  2931                           ;incstack = 0
  2932                           ;color_writetoaddr@address stored from wreg
  2933   001174  6E04               	movwf	color_writetoaddr@address^0,c
  2934   001176                     
  2935                           ;color.c: 83:     I2C_2_Master_Start();
  2936   001176  ECF9  F008         	call	_I2C_2_Master_Start	;wreg free
  2937                           
  2938                           ;color.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2939   00117A  0E52               	movlw	82
  2940   00117C  ECE8  F008         	call	_I2C_2_Master_Write
  2941                           
  2942                           ;color.c: 85:     I2C_2_Master_Write(0x80 | address);
  2943   001180  5004               	movf	color_writetoaddr@address^0,w,c
  2944   001182  0980               	iorlw	128
  2945   001184  ECE8  F008         	call	_I2C_2_Master_Write
  2946                           
  2947                           ;color.c: 86:     I2C_2_Master_Write(value);
  2948   001188  5003               	movf	color_writetoaddr@value^0,w,c
  2949   00118A  ECE8  F008         	call	_I2C_2_Master_Write
  2950                           
  2951                           ;color.c: 87:     I2C_2_Master_Stop();
  2952   00118E  ECF4  F008         	call	_I2C_2_Master_Stop	;wreg free
  2953   001192  0012               	return		;funcret
  2954   001194                     __end_of_color_writetoaddr:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function _calibrate_white *****************
  2958 ;; Defined at:
  2959 ;;		line 229 in file "color.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;Total ram usage:        2 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 5
  2980 ;; This function calls:
  2981 ;;		_color_read_Blue
  2982 ;;		_color_read_Green
  2983 ;;		_color_read_Red
  2984 ;;		_set_led_color
  2985 ;; This function is called by:
  2986 ;;		_color_click_init
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text14
  2991   0009E4                     __ptext14:
  2992                           	callstack 0
  2993   0009E4                     _calibrate_white:
  2994                           	callstack 24
  2995   0009E4                     
  2996                           ;color.c: 230:     set_led_color(0b100);
  2997   0009E4  0E00               	movlw	0
  2998   0009E6  6E02               	movwf	(set_led_color@color+1)^0,c
  2999   0009E8  0E04               	movlw	4
  3000   0009EA  6E01               	movwf	set_led_color@color^0,c
  3001   0009EC  EC22  F008         	call	_set_led_color	;wreg free
  3002   0009F0                     
  3003                           ;color.c: 231:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3004   0009F0  0E12               	movlw	18
  3005   0009F2  6E0D               	movwf	(??_calibrate_white+1)^0,c
  3006   0009F4  0EDC               	movlw	220
  3007   0009F6  6E0C               	movwf	??_calibrate_white^0,c
  3008   0009F8  0E60               	movlw	96
  3009   0009FA                     u2157:
  3010   0009FA  2EE8               	decfsz	wreg,f,c
  3011   0009FC  D7FE               	bra	u2157
  3012   0009FE  2E0C               	decfsz	??_calibrate_white^0,f,c
  3013   000A00  D7FC               	bra	u2157
  3014   000A02  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  3015   000A04  D7FA               	bra	u2157
  3016   000A06                     
  3017                           ;color.c: 232:     White_setup.R = color_read_Red();
  3018   000A06  EC82  F007         	call	_color_read_Red	;wreg free
  3019   000A0A  C005  F060         	movff	?_color_read_Red,_White_setup
  3020   000A0E  C006  F061         	movff	?_color_read_Red+1,_White_setup+1
  3021   000A12  0100               	movlb	0	; () banked
  3022   000A14  6B62               	clrf	(_White_setup+2)& (0+255),b
  3023   000A16  6B63               	clrf	(_White_setup+3)& (0+255),b
  3024   000A18                     
  3025                           ; BSR set to: 0
  3026                           ;color.c: 233:     set_led_color(0b010);
  3027   000A18  0E00               	movlw	0
  3028   000A1A  6E02               	movwf	(set_led_color@color+1)^0,c
  3029   000A1C  0E02               	movlw	2
  3030   000A1E  6E01               	movwf	set_led_color@color^0,c
  3031   000A20  EC22  F008         	call	_set_led_color	;wreg free
  3032   000A24                     
  3033                           ;color.c: 234:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3034   000A24  0E12               	movlw	18
  3035   000A26  6E0D               	movwf	(??_calibrate_white+1)^0,c
  3036   000A28  0EDC               	movlw	220
  3037   000A2A  6E0C               	movwf	??_calibrate_white^0,c
  3038   000A2C  0E60               	movlw	96
  3039   000A2E                     u2167:
  3040   000A2E  2EE8               	decfsz	wreg,f,c
  3041   000A30  D7FE               	bra	u2167
  3042   000A32  2E0C               	decfsz	??_calibrate_white^0,f,c
  3043   000A34  D7FC               	bra	u2167
  3044   000A36  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  3045   000A38  D7FA               	bra	u2167
  3046                           
  3047                           ;color.c: 235:     White_setup.G = color_read_Green();
  3048   000A3A  ECAA  F007         	call	_color_read_Green	;wreg free
  3049   000A3E  C005  F064         	movff	?_color_read_Green,_White_setup+4
  3050   000A42  C006  F065         	movff	?_color_read_Green+1,_White_setup+5
  3051   000A46  0100               	movlb	0	; () banked
  3052   000A48  6B66               	clrf	(_White_setup+6)& (0+255),b
  3053   000A4A  6B67               	clrf	(_White_setup+7)& (0+255),b
  3054   000A4C                     
  3055                           ; BSR set to: 0
  3056                           ;color.c: 236:     set_led_color(0b001);
  3057   000A4C  0E00               	movlw	0
  3058   000A4E  6E02               	movwf	(set_led_color@color+1)^0,c
  3059   000A50  0E01               	movlw	1
  3060   000A52  6E01               	movwf	set_led_color@color^0,c
  3061   000A54  EC22  F008         	call	_set_led_color	;wreg free
  3062   000A58                     
  3063                           ;color.c: 237:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3064   000A58  0E12               	movlw	18
  3065   000A5A  6E0D               	movwf	(??_calibrate_white+1)^0,c
  3066   000A5C  0EDC               	movlw	220
  3067   000A5E  6E0C               	movwf	??_calibrate_white^0,c
  3068   000A60  0E60               	movlw	96
  3069   000A62                     u2177:
  3070   000A62  2EE8               	decfsz	wreg,f,c
  3071   000A64  D7FE               	bra	u2177
  3072   000A66  2E0C               	decfsz	??_calibrate_white^0,f,c
  3073   000A68  D7FC               	bra	u2177
  3074   000A6A  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  3075   000A6C  D7FA               	bra	u2177
  3076   000A6E                     
  3077                           ;color.c: 238:     White_setup.B = color_read_Blue();
  3078   000A6E  ECFA  F007         	call	_color_read_Blue	;wreg free
  3079   000A72  C005  F068         	movff	?_color_read_Blue,_White_setup+8
  3080   000A76  C006  F069         	movff	?_color_read_Blue+1,_White_setup+9
  3081   000A7A  0100               	movlb	0	; () banked
  3082   000A7C  6B6A               	clrf	(_White_setup+10)& (0+255),b
  3083   000A7E  6B6B               	clrf	(_White_setup+11)& (0+255),b
  3084   000A80                     
  3085                           ; BSR set to: 0
  3086                           ;color.c: 239:     set_led_color(0b000);
  3087   000A80  0E00               	movlw	0
  3088   000A82  6E02               	movwf	(set_led_color@color+1)^0,c
  3089   000A84  0E00               	movlw	0
  3090   000A86  6E01               	movwf	set_led_color@color^0,c
  3091   000A88  EC22  F008         	call	_set_led_color	;wreg free
  3092   000A8C  0012               	return		;funcret
  3093   000A8E                     __end_of_calibrate_white:
  3094                           	callstack 0
  3095                           
  3096 ;; *************** function _calibrate_black *****************
  3097 ;; Defined at:
  3098 ;;		line 209 in file "color.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  clear2          2   17[COMRAM] unsigned int 
  3103 ;;  clear1          2   15[COMRAM] unsigned int 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3114 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3116 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3117 ;;Total ram usage:        8 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 5
  3120 ;; This function calls:
  3121 ;;		___lwdiv
  3122 ;;		_color_read_Blue
  3123 ;;		_color_read_Clear
  3124 ;;		_color_read_Green
  3125 ;;		_color_read_Red
  3126 ;;		_set_led_color
  3127 ;; This function is called by:
  3128 ;;		_color_click_init
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text15
  3133   0007E0                     __ptext15:
  3134                           	callstack 0
  3135   0007E0                     _calibrate_black:
  3136                           	callstack 24
  3137   0007E0                     
  3138                           ;color.c: 210:     set_led_color(0b100);
  3139   0007E0  0E00               	movlw	0
  3140   0007E2  6E02               	movwf	(set_led_color@color+1)^0,c
  3141   0007E4  0E04               	movlw	4
  3142   0007E6  6E01               	movwf	set_led_color@color^0,c
  3143   0007E8  EC22  F008         	call	_set_led_color	;wreg free
  3144   0007EC                     
  3145                           ;color.c: 211:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3146   0007EC  0E12               	movlw	18
  3147   0007EE  6E0F               	movwf	(??_calibrate_black+1)^0,c
  3148   0007F0  0EDC               	movlw	220
  3149   0007F2  6E0E               	movwf	??_calibrate_black^0,c
  3150   0007F4  0E60               	movlw	96
  3151   0007F6                     u2187:
  3152   0007F6  2EE8               	decfsz	wreg,f,c
  3153   0007F8  D7FE               	bra	u2187
  3154   0007FA  2E0E               	decfsz	??_calibrate_black^0,f,c
  3155   0007FC  D7FC               	bra	u2187
  3156   0007FE  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  3157   000800  D7FA               	bra	u2187
  3158   000802                     
  3159                           ;color.c: 212:     Black_setup.R = color_read_Red();
  3160   000802  EC82  F007         	call	_color_read_Red	;wreg free
  3161   000806  C005  F04B         	movff	?_color_read_Red,_Black_setup
  3162   00080A  C006  F04C         	movff	?_color_read_Red+1,_Black_setup+1
  3163   00080E  6A4D               	clrf	(_Black_setup+2)^0,c
  3164   000810  6A4E               	clrf	(_Black_setup+3)^0,c
  3165   000812                     
  3166                           ;color.c: 213:     set_led_color(0b010);
  3167   000812  0E00               	movlw	0
  3168   000814  6E02               	movwf	(set_led_color@color+1)^0,c
  3169   000816  0E02               	movlw	2
  3170   000818  6E01               	movwf	set_led_color@color^0,c
  3171   00081A  EC22  F008         	call	_set_led_color	;wreg free
  3172   00081E                     
  3173                           ;color.c: 214:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3174   00081E  0E12               	movlw	18
  3175   000820  6E0F               	movwf	(??_calibrate_black+1)^0,c
  3176   000822  0EDC               	movlw	220
  3177   000824  6E0E               	movwf	??_calibrate_black^0,c
  3178   000826  0E60               	movlw	96
  3179   000828                     u2197:
  3180   000828  2EE8               	decfsz	wreg,f,c
  3181   00082A  D7FE               	bra	u2197
  3182   00082C  2E0E               	decfsz	??_calibrate_black^0,f,c
  3183   00082E  D7FC               	bra	u2197
  3184   000830  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  3185   000832  D7FA               	bra	u2197
  3186                           
  3187                           ;color.c: 215:     Black_setup.G = color_read_Green();
  3188   000834  ECAA  F007         	call	_color_read_Green	;wreg free
  3189   000838  C005  F04F         	movff	?_color_read_Green,_Black_setup+4
  3190   00083C  C006  F050         	movff	?_color_read_Green+1,_Black_setup+5
  3191   000840  6A51               	clrf	(_Black_setup+6)^0,c
  3192   000842  6A52               	clrf	(_Black_setup+7)^0,c
  3193   000844                     
  3194                           ;color.c: 216:     set_led_color(0b001);
  3195   000844  0E00               	movlw	0
  3196   000846  6E02               	movwf	(set_led_color@color+1)^0,c
  3197   000848  0E01               	movlw	1
  3198   00084A  6E01               	movwf	set_led_color@color^0,c
  3199   00084C  EC22  F008         	call	_set_led_color	;wreg free
  3200   000850                     
  3201                           ;color.c: 217:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3202   000850  0E12               	movlw	18
  3203   000852  6E0F               	movwf	(??_calibrate_black+1)^0,c
  3204   000854  0EDC               	movlw	220
  3205   000856  6E0E               	movwf	??_calibrate_black^0,c
  3206   000858  0E60               	movlw	96
  3207   00085A                     u2207:
  3208   00085A  2EE8               	decfsz	wreg,f,c
  3209   00085C  D7FE               	bra	u2207
  3210   00085E  2E0E               	decfsz	??_calibrate_black^0,f,c
  3211   000860  D7FC               	bra	u2207
  3212   000862  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  3213   000864  D7FA               	bra	u2207
  3214   000866                     
  3215                           ;color.c: 218:     Black_setup.B = color_read_Blue();
  3216   000866  ECFA  F007         	call	_color_read_Blue	;wreg free
  3217   00086A  C005  F053         	movff	?_color_read_Blue,_Black_setup+8
  3218   00086E  C006  F054         	movff	?_color_read_Blue+1,_Black_setup+9
  3219   000872  6A55               	clrf	(_Black_setup+10)^0,c
  3220   000874  6A56               	clrf	(_Black_setup+11)^0,c
  3221   000876                     
  3222                           ;color.c: 219:     set_led_color(0b000);
  3223   000876  0E00               	movlw	0
  3224   000878  6E02               	movwf	(set_led_color@color+1)^0,c
  3225   00087A  0E00               	movlw	0
  3226   00087C  6E01               	movwf	set_led_color@color^0,c
  3227   00087E  EC22  F008         	call	_set_led_color	;wreg free
  3228                           
  3229                           ;color.c: 220:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3230   000882  0E12               	movlw	18
  3231   000884  6E0F               	movwf	(??_calibrate_black+1)^0,c
  3232   000886  0EDC               	movlw	220
  3233   000888  6E0E               	movwf	??_calibrate_black^0,c
  3234   00088A  0E60               	movlw	96
  3235   00088C                     u2217:
  3236   00088C  2EE8               	decfsz	wreg,f,c
  3237   00088E  D7FE               	bra	u2217
  3238   000890  2E0E               	decfsz	??_calibrate_black^0,f,c
  3239   000892  D7FC               	bra	u2217
  3240   000894  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  3241   000896  D7FA               	bra	u2217
  3242   000898                     
  3243                           ;color.c: 221:     unsigned int clear1 = color_read_Clear();
  3244   000898  ECD2  F007         	call	_color_read_Clear	;wreg free
  3245   00089C  C005  F010         	movff	?_color_read_Clear,calibrate_black@clear1
  3246   0008A0  C006  F011         	movff	?_color_read_Clear+1,calibrate_black@clear1+1
  3247   0008A4                     
  3248                           ;color.c: 222:     set_led_color(0b111);
  3249   0008A4  0E00               	movlw	0
  3250   0008A6  6E02               	movwf	(set_led_color@color+1)^0,c
  3251   0008A8  0E07               	movlw	7
  3252   0008AA  6E01               	movwf	set_led_color@color^0,c
  3253   0008AC  EC22  F008         	call	_set_led_color	;wreg free
  3254   0008B0                     
  3255                           ;color.c: 223:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3256   0008B0  0E12               	movlw	18
  3257   0008B2  6E0F               	movwf	(??_calibrate_black+1)^0,c
  3258   0008B4  0EDC               	movlw	220
  3259   0008B6  6E0E               	movwf	??_calibrate_black^0,c
  3260   0008B8  0E60               	movlw	96
  3261   0008BA                     u2227:
  3262   0008BA  2EE8               	decfsz	wreg,f,c
  3263   0008BC  D7FE               	bra	u2227
  3264   0008BE  2E0E               	decfsz	??_calibrate_black^0,f,c
  3265   0008C0  D7FC               	bra	u2227
  3266   0008C2  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  3267   0008C4  D7FA               	bra	u2227
  3268   0008C6                     
  3269                           ;color.c: 224:     unsigned int clear2 = color_read_Clear();
  3270   0008C6  ECD2  F007         	call	_color_read_Clear	;wreg free
  3271   0008CA  C005  F012         	movff	?_color_read_Clear,calibrate_black@clear2
  3272   0008CE  C006  F013         	movff	?_color_read_Clear+1,calibrate_black@clear2+1
  3273                           
  3274                           ;color.c: 225:     set_led_color(0b000);
  3275   0008D2  0E00               	movlw	0
  3276   0008D4  6E02               	movwf	(set_led_color@color+1)^0,c
  3277   0008D6  0E00               	movlw	0
  3278   0008D8  6E01               	movwf	set_led_color@color^0,c
  3279   0008DA  EC22  F008         	call	_set_led_color	;wreg free
  3280   0008DE                     
  3281                           ;color.c: 226:     wall_coef = clear2/clear1/5;
  3282   0008DE  C010  F009         	movff	calibrate_black@clear1,___lwdiv@divisor
  3283   0008E2  C011  F00A         	movff	calibrate_black@clear1+1,___lwdiv@divisor+1
  3284   0008E6  C012  F007         	movff	calibrate_black@clear2,___lwdiv@dividend
  3285   0008EA  C013  F008         	movff	calibrate_black@clear2+1,___lwdiv@dividend+1
  3286   0008EE  ECBA  F006         	call	___lwdiv	;wreg free
  3287   0008F2  C007  F014         	movff	?___lwdiv,_calibrate_black$2466
  3288   0008F6  C008  F015         	movff	?___lwdiv+1,_calibrate_black$2466+1
  3289   0008FA                     
  3290                           ;color.c: 226:     wall_coef = clear2/clear1/5;
  3291   0008FA  C014  F007         	movff	_calibrate_black$2466,___lwdiv@dividend
  3292   0008FE  C015  F008         	movff	_calibrate_black$2466+1,___lwdiv@dividend+1
  3293   000902  0E00               	movlw	0
  3294   000904  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3295   000906  0E05               	movlw	5
  3296   000908  6E09               	movwf	___lwdiv@divisor^0,c
  3297   00090A  ECBA  F006         	call	___lwdiv	;wreg free
  3298   00090E  C007  F059         	movff	?___lwdiv,_wall_coef
  3299   000912  C008  F05A         	movff	?___lwdiv+1,_wall_coef+1
  3300   000916  0012               	return		;funcret
  3301   000918                     __end_of_calibrate_black:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _set_led_color *****************
  3305 ;; Defined at:
  3306 ;;		line 154 in file "color.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  color           2    0[COMRAM] unsigned int 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		None
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;Total ram usage:        2 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 2
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_get_color_code
  3331 ;;		_calibrate_black
  3332 ;;		_calibrate_white
  3333 ;;		_get_wall_presence
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text16
  3338   001044                     __ptext16:
  3339                           	callstack 0
  3340   001044                     _set_led_color:
  3341                           	callstack 27
  3342   001044                     
  3343                           ;color.c: 158:     if(color & 0b100){
  3344   001044  A401               	btfss	set_led_color@color^0,2,c
  3345   001046  EF27  F008         	goto	u1091
  3346   00104A  EF29  F008         	goto	u1090
  3347   00104E                     u1091:
  3348   00104E  EF2C  F008         	goto	l112
  3349   001052                     u1090:
  3350   001052                     
  3351                           ;color.c: 159:         LATGbits.LATG1 = 1;
  3352   001052  827F               	bsf	127,1,c	;volatile
  3353                           
  3354                           ;color.c: 160:     }else{
  3355   001054  EF2D  F008         	goto	l113
  3356   001058                     l112:
  3357                           
  3358                           ;color.c: 161:         LATGbits.LATG1 = 0;
  3359   001058  927F               	bcf	127,1,c	;volatile
  3360   00105A                     l113:
  3361                           
  3362                           ;color.c: 163:     if(color & 0b010){
  3363   00105A  A201               	btfss	set_led_color@color^0,1,c
  3364   00105C  EF32  F008         	goto	u1101
  3365   001060  EF34  F008         	goto	u1100
  3366   001064                     u1101:
  3367   001064  EF37  F008         	goto	l114
  3368   001068                     u1100:
  3369   001068                     
  3370                           ;color.c: 164:         LATAbits.LATA4 = 1;
  3371   001068  8879               	bsf	121,4,c	;volatile
  3372                           
  3373                           ;color.c: 165:     }else{
  3374   00106A  EF38  F008         	goto	l115
  3375   00106E                     l114:
  3376                           
  3377                           ;color.c: 166:         LATAbits.LATA4 = 0;
  3378   00106E  9879               	bcf	121,4,c	;volatile
  3379   001070                     l115:
  3380                           
  3381                           ;color.c: 168:     if(color & 0b001){
  3382   001070  A001               	btfss	set_led_color@color^0,0,c
  3383   001072  EF3D  F008         	goto	u1111
  3384   001076  EF3F  F008         	goto	u1110
  3385   00107A                     u1111:
  3386   00107A  EF42  F008         	goto	l116
  3387   00107E                     u1110:
  3388   00107E                     
  3389                           ;color.c: 169:         LATFbits.LATF7 = 1;
  3390   00107E  8E7E               	bsf	126,7,c	;volatile
  3391                           
  3392                           ;color.c: 170:     }else{
  3393   001080  EF43  F008         	goto	l118
  3394   001084                     l116:
  3395                           
  3396                           ;color.c: 171:         LATFbits.LATF7 = 0;
  3397   001084  9E7E               	bcf	126,7,c	;volatile
  3398   001086                     l118:
  3399   001086  0012               	return		;funcret
  3400   001088                     __end_of_set_led_color:
  3401                           	callstack 0
  3402                           
  3403 ;; *************** function _color_read_Red *****************
  3404 ;; Defined at:
  3405 ;;		line 90 in file "color.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  tmp             2    9[COMRAM] unsigned int 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  2    4[COMRAM] unsigned int 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3421 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3422 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;Total ram usage:        7 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 4
  3426 ;; This function calls:
  3427 ;;		_I2C_2_Master_Read
  3428 ;;		_I2C_2_Master_RepStart
  3429 ;;		_I2C_2_Master_Start
  3430 ;;		_I2C_2_Master_Stop
  3431 ;;		_I2C_2_Master_Write
  3432 ;; This function is called by:
  3433 ;;		_get_color_code
  3434 ;;		_calibrate_black
  3435 ;;		_calibrate_white
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text17
  3440   000F04                     __ptext17:
  3441                           	callstack 0
  3442   000F04                     _color_read_Red:
  3443                           	callstack 25
  3444   000F04                     
  3445                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3446   000F04  ECF9  F008         	call	_I2C_2_Master_Start	;wreg free
  3447                           
  3448                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3449   000F08  0E52               	movlw	82
  3450   000F0A  ECE8  F008         	call	_I2C_2_Master_Write
  3451                           
  3452                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x16);
  3453   000F0E  0EB6               	movlw	182
  3454   000F10  ECE8  F008         	call	_I2C_2_Master_Write
  3455                           
  3456                           ;color.c: 96:  I2C_2_Master_RepStart();
  3457   000F14  ECFE  F008         	call	_I2C_2_Master_RepStart	;wreg free
  3458                           
  3459                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3460   000F18  0E53               	movlw	83
  3461   000F1A  ECE8  F008         	call	_I2C_2_Master_Write
  3462                           
  3463                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3464   000F1E  0E01               	movlw	1
  3465   000F20  EC44  F008         	call	_I2C_2_Master_Read
  3466   000F24  6E07               	movwf	??_color_read_Red^0,c
  3467   000F26  5007               	movf	??_color_read_Red^0,w,c
  3468   000F28  6E0A               	movwf	color_read_Red@tmp^0,c
  3469   000F2A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3470                           
  3471                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3472   000F2C  0E00               	movlw	0
  3473   000F2E  EC44  F008         	call	_I2C_2_Master_Read
  3474   000F32  6E07               	movwf	??_color_read_Red^0,c
  3475   000F34  5007               	movf	??_color_read_Red^0,w,c
  3476   000F36  6E09               	movwf	(??_color_read_Red+2)^0,c
  3477   000F38  6A08               	clrf	(??_color_read_Red+1)^0,c
  3478   000F3A  500A               	movf	color_read_Red@tmp^0,w,c
  3479   000F3C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3480   000F3E  6E0A               	movwf	color_read_Red@tmp^0,c
  3481   000F40  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3482   000F42  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3483   000F44  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3484                           
  3485                           ;color.c: 100:  I2C_2_Master_Stop();
  3486   000F46  ECF4  F008         	call	_I2C_2_Master_Stop	;wreg free
  3487   000F4A                     
  3488                           ;color.c: 101:  return tmp;
  3489   000F4A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3490   000F4E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3491   000F52  0012               	return		;funcret
  3492   000F54                     __end_of_color_read_Red:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _color_read_Green *****************
  3496 ;; Defined at:
  3497 ;;		line 118 in file "color.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  tmp             2    9[COMRAM] unsigned int 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  2    4[COMRAM] unsigned int 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3513 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3514 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3515 ;;Total ram usage:        7 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 4
  3518 ;; This function calls:
  3519 ;;		_I2C_2_Master_Read
  3520 ;;		_I2C_2_Master_RepStart
  3521 ;;		_I2C_2_Master_Start
  3522 ;;		_I2C_2_Master_Stop
  3523 ;;		_I2C_2_Master_Write
  3524 ;; This function is called by:
  3525 ;;		_get_color_code
  3526 ;;		_calibrate_black
  3527 ;;		_calibrate_white
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text18
  3532   000F54                     __ptext18:
  3533                           	callstack 0
  3534   000F54                     _color_read_Green:
  3535                           	callstack 25
  3536   000F54                     
  3537                           ;color.c: 120:  unsigned int tmp;;color.c: 121:  I2C_2_Master_Start();
  3538   000F54  ECF9  F008         	call	_I2C_2_Master_Start	;wreg free
  3539                           
  3540                           ;color.c: 122:  I2C_2_Master_Write(0x52 | 0x00);
  3541   000F58  0E52               	movlw	82
  3542   000F5A  ECE8  F008         	call	_I2C_2_Master_Write
  3543                           
  3544                           ;color.c: 123:  I2C_2_Master_Write(0xA0 | 0x18);
  3545   000F5E  0EB8               	movlw	184
  3546   000F60  ECE8  F008         	call	_I2C_2_Master_Write
  3547                           
  3548                           ;color.c: 124:  I2C_2_Master_RepStart();
  3549   000F64  ECFE  F008         	call	_I2C_2_Master_RepStart	;wreg free
  3550                           
  3551                           ;color.c: 125:  I2C_2_Master_Write(0x52 | 0x01);
  3552   000F68  0E53               	movlw	83
  3553   000F6A  ECE8  F008         	call	_I2C_2_Master_Write
  3554                           
  3555                           ;color.c: 126:  tmp=I2C_2_Master_Read(1);
  3556   000F6E  0E01               	movlw	1
  3557   000F70  EC44  F008         	call	_I2C_2_Master_Read
  3558   000F74  6E07               	movwf	??_color_read_Green^0,c
  3559   000F76  5007               	movf	??_color_read_Green^0,w,c
  3560   000F78  6E0A               	movwf	color_read_Green@tmp^0,c
  3561   000F7A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3562                           
  3563                           ;color.c: 127:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3564   000F7C  0E00               	movlw	0
  3565   000F7E  EC44  F008         	call	_I2C_2_Master_Read
  3566   000F82  6E07               	movwf	??_color_read_Green^0,c
  3567   000F84  5007               	movf	??_color_read_Green^0,w,c
  3568   000F86  6E09               	movwf	(??_color_read_Green+2)^0,c
  3569   000F88  6A08               	clrf	(??_color_read_Green+1)^0,c
  3570   000F8A  500A               	movf	color_read_Green@tmp^0,w,c
  3571   000F8C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3572   000F8E  6E0A               	movwf	color_read_Green@tmp^0,c
  3573   000F90  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3574   000F92  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3575   000F94  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3576                           
  3577                           ;color.c: 128:  I2C_2_Master_Stop();
  3578   000F96  ECF4  F008         	call	_I2C_2_Master_Stop	;wreg free
  3579   000F9A                     
  3580                           ;color.c: 129:  return tmp;
  3581   000F9A  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3582   000F9E  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3583   000FA2  0012               	return		;funcret
  3584   000FA4                     __end_of_color_read_Green:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _color_read_Clear *****************
  3588 ;; Defined at:
  3589 ;;		line 132 in file "color.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  tmp             2    9[COMRAM] unsigned int 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  2    4[COMRAM] unsigned int 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3605 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3606 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3607 ;;Total ram usage:        7 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 4
  3610 ;; This function calls:
  3611 ;;		_I2C_2_Master_Read
  3612 ;;		_I2C_2_Master_RepStart
  3613 ;;		_I2C_2_Master_Start
  3614 ;;		_I2C_2_Master_Stop
  3615 ;;		_I2C_2_Master_Write
  3616 ;; This function is called by:
  3617 ;;		_calibrate_black
  3618 ;;		_get_wall_presence
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text19
  3623   000FA4                     __ptext19:
  3624                           	callstack 0
  3625   000FA4                     _color_read_Clear:
  3626                           	callstack 25
  3627   000FA4                     
  3628                           ;color.c: 134:  unsigned int tmp;;color.c: 135:  I2C_2_Master_Start();
  3629   000FA4  ECF9  F008         	call	_I2C_2_Master_Start	;wreg free
  3630                           
  3631                           ;color.c: 136:  I2C_2_Master_Write(0x52 | 0x00);
  3632   000FA8  0E52               	movlw	82
  3633   000FAA  ECE8  F008         	call	_I2C_2_Master_Write
  3634                           
  3635                           ;color.c: 137:  I2C_2_Master_Write(0xA0 | 0x14);
  3636   000FAE  0EB4               	movlw	180
  3637   000FB0  ECE8  F008         	call	_I2C_2_Master_Write
  3638                           
  3639                           ;color.c: 138:  I2C_2_Master_RepStart();
  3640   000FB4  ECFE  F008         	call	_I2C_2_Master_RepStart	;wreg free
  3641                           
  3642                           ;color.c: 139:  I2C_2_Master_Write(0x52 | 0x01);
  3643   000FB8  0E53               	movlw	83
  3644   000FBA  ECE8  F008         	call	_I2C_2_Master_Write
  3645                           
  3646                           ;color.c: 140:  tmp=I2C_2_Master_Read(1);
  3647   000FBE  0E01               	movlw	1
  3648   000FC0  EC44  F008         	call	_I2C_2_Master_Read
  3649   000FC4  6E07               	movwf	??_color_read_Clear^0,c
  3650   000FC6  5007               	movf	??_color_read_Clear^0,w,c
  3651   000FC8  6E0A               	movwf	color_read_Clear@tmp^0,c
  3652   000FCA  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3653                           
  3654                           ;color.c: 141:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3655   000FCC  0E00               	movlw	0
  3656   000FCE  EC44  F008         	call	_I2C_2_Master_Read
  3657   000FD2  6E07               	movwf	??_color_read_Clear^0,c
  3658   000FD4  5007               	movf	??_color_read_Clear^0,w,c
  3659   000FD6  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3660   000FD8  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3661   000FDA  500A               	movf	color_read_Clear@tmp^0,w,c
  3662   000FDC  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3663   000FDE  6E0A               	movwf	color_read_Clear@tmp^0,c
  3664   000FE0  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3665   000FE2  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3666   000FE4  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3667                           
  3668                           ;color.c: 142:  I2C_2_Master_Stop();
  3669   000FE6  ECF4  F008         	call	_I2C_2_Master_Stop	;wreg free
  3670   000FEA                     
  3671                           ;color.c: 143:  return tmp;
  3672   000FEA  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3673   000FEE  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3674   000FF2  0012               	return		;funcret
  3675   000FF4                     __end_of_color_read_Clear:
  3676                           	callstack 0
  3677                           
  3678 ;; *************** function _color_read_Blue *****************
  3679 ;; Defined at:
  3680 ;;		line 104 in file "color.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  tmp             2    9[COMRAM] unsigned int 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  2    4[COMRAM] unsigned int 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;Total ram usage:        7 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; Hardware stack levels required when called: 4
  3701 ;; This function calls:
  3702 ;;		_I2C_2_Master_Read
  3703 ;;		_I2C_2_Master_RepStart
  3704 ;;		_I2C_2_Master_Start
  3705 ;;		_I2C_2_Master_Stop
  3706 ;;		_I2C_2_Master_Write
  3707 ;; This function is called by:
  3708 ;;		_get_color_code
  3709 ;;		_calibrate_black
  3710 ;;		_calibrate_white
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text20
  3715   000FF4                     __ptext20:
  3716                           	callstack 0
  3717   000FF4                     _color_read_Blue:
  3718                           	callstack 25
  3719   000FF4                     
  3720                           ;color.c: 106:  unsigned int tmp;;color.c: 107:  I2C_2_Master_Start();
  3721   000FF4  ECF9  F008         	call	_I2C_2_Master_Start	;wreg free
  3722                           
  3723                           ;color.c: 108:  I2C_2_Master_Write(0x52 | 0x00);
  3724   000FF8  0E52               	movlw	82
  3725   000FFA  ECE8  F008         	call	_I2C_2_Master_Write
  3726                           
  3727                           ;color.c: 109:  I2C_2_Master_Write(0xA0 | 0x1A);
  3728   000FFE  0EBA               	movlw	186
  3729   001000  ECE8  F008         	call	_I2C_2_Master_Write
  3730                           
  3731                           ;color.c: 110:  I2C_2_Master_RepStart();
  3732   001004  ECFE  F008         	call	_I2C_2_Master_RepStart	;wreg free
  3733                           
  3734                           ;color.c: 111:  I2C_2_Master_Write(0x52 | 0x01);
  3735   001008  0E53               	movlw	83
  3736   00100A  ECE8  F008         	call	_I2C_2_Master_Write
  3737                           
  3738                           ;color.c: 112:  tmp=I2C_2_Master_Read(1);
  3739   00100E  0E01               	movlw	1
  3740   001010  EC44  F008         	call	_I2C_2_Master_Read
  3741   001014  6E07               	movwf	??_color_read_Blue^0,c
  3742   001016  5007               	movf	??_color_read_Blue^0,w,c
  3743   001018  6E0A               	movwf	color_read_Blue@tmp^0,c
  3744   00101A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3745                           
  3746                           ;color.c: 113:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3747   00101C  0E00               	movlw	0
  3748   00101E  EC44  F008         	call	_I2C_2_Master_Read
  3749   001022  6E07               	movwf	??_color_read_Blue^0,c
  3750   001024  5007               	movf	??_color_read_Blue^0,w,c
  3751   001026  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3752   001028  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3753   00102A  500A               	movf	color_read_Blue@tmp^0,w,c
  3754   00102C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3755   00102E  6E0A               	movwf	color_read_Blue@tmp^0,c
  3756   001030  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3757   001032  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3758   001034  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3759                           
  3760                           ;color.c: 114:  I2C_2_Master_Stop();
  3761   001036  ECF4  F008         	call	_I2C_2_Master_Stop	;wreg free
  3762   00103A                     
  3763                           ;color.c: 115:  return tmp;
  3764   00103A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3765   00103E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3766   001042  0012               	return		;funcret
  3767   001044                     __end_of_color_read_Blue:
  3768                           	callstack 0
  3769                           
  3770 ;; *************** function _I2C_2_Master_Write *****************
  3771 ;; Defined at:
  3772 ;;		line 45 in file "i2c.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  data_byte       1    wreg     unsigned char 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  data_byte       1    1[COMRAM] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, status,2, status,0, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3790 ;;Total ram usage:        1 bytes
  3791 ;; Hardware stack levels used: 1
  3792 ;; Hardware stack levels required when called: 3
  3793 ;; This function calls:
  3794 ;;		_I2C_2_Master_Idle
  3795 ;; This function is called by:
  3796 ;;		_color_writetoaddr
  3797 ;;		_color_read_Red
  3798 ;;		_color_read_Blue
  3799 ;;		_color_read_Green
  3800 ;;		_color_read_Clear
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text21
  3805   0011D0                     __ptext21:
  3806                           	callstack 0
  3807   0011D0                     _I2C_2_Master_Write:
  3808                           	callstack 25
  3809                           
  3810                           ;incstack = 0
  3811                           ;I2C_2_Master_Write@data_byte stored from wreg
  3812   0011D0  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3813   0011D2                     
  3814                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3815   0011D2  EC93  F008         	call	_I2C_2_Master_Idle	;wreg free
  3816   0011D6                     
  3817                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3818   0011D6  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3819   0011DA  0012               	return		;funcret
  3820   0011DC                     __end_of_I2C_2_Master_Write:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function _I2C_2_Master_Stop *****************
  3824 ;; Defined at:
  3825 ;;		line 39 in file "i2c.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;Total ram usage:        0 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 3
  3846 ;; This function calls:
  3847 ;;		_I2C_2_Master_Idle
  3848 ;; This function is called by:
  3849 ;;		_color_writetoaddr
  3850 ;;		_color_read_Red
  3851 ;;		_color_read_Blue
  3852 ;;		_color_read_Green
  3853 ;;		_color_read_Clear
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text22
  3858   0011E8                     __ptext22:
  3859                           	callstack 0
  3860   0011E8                     _I2C_2_Master_Stop:
  3861                           	callstack 25
  3862   0011E8                     
  3863                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3864   0011E8  EC93  F008         	call	_I2C_2_Master_Idle	;wreg free
  3865   0011EC                     
  3866                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3867   0011EC  010E               	movlb	14	; () banked
  3868   0011EE  85DA               	bsf	218,2,b	;volatile
  3869   0011F0                     
  3870                           ; BSR set to: 14
  3871   0011F0  0012               	return		;funcret
  3872   0011F2                     __end_of_I2C_2_Master_Stop:
  3873                           	callstack 0
  3874                           
  3875 ;; *************** function _I2C_2_Master_Start *****************
  3876 ;; Defined at:
  3877 ;;		line 27 in file "i2c.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used: 1
  3897 ;; Hardware stack levels required when called: 3
  3898 ;; This function calls:
  3899 ;;		_I2C_2_Master_Idle
  3900 ;; This function is called by:
  3901 ;;		_color_writetoaddr
  3902 ;;		_color_read_Red
  3903 ;;		_color_read_Blue
  3904 ;;		_color_read_Green
  3905 ;;		_color_read_Clear
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text23
  3910   0011F2                     __ptext23:
  3911                           	callstack 0
  3912   0011F2                     _I2C_2_Master_Start:
  3913                           	callstack 25
  3914   0011F2                     
  3915                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3916   0011F2  EC93  F008         	call	_I2C_2_Master_Idle	;wreg free
  3917   0011F6                     
  3918                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3919   0011F6  010E               	movlb	14	; () banked
  3920   0011F8  81DA               	bsf	218,0,b	;volatile
  3921   0011FA                     
  3922                           ; BSR set to: 14
  3923   0011FA  0012               	return		;funcret
  3924   0011FC                     __end_of_I2C_2_Master_Start:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _I2C_2_Master_RepStart *****************
  3928 ;; Defined at:
  3929 ;;		line 33 in file "i2c.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;		None
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0, cstack
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;Total ram usage:        0 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 3
  3950 ;; This function calls:
  3951 ;;		_I2C_2_Master_Idle
  3952 ;; This function is called by:
  3953 ;;		_color_read_Red
  3954 ;;		_color_read_Blue
  3955 ;;		_color_read_Green
  3956 ;;		_color_read_Clear
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text24
  3961   0011FC                     __ptext24:
  3962                           	callstack 0
  3963   0011FC                     _I2C_2_Master_RepStart:
  3964                           	callstack 25
  3965   0011FC                     
  3966                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3967   0011FC  EC93  F008         	call	_I2C_2_Master_Idle	;wreg free
  3968   001200                     
  3969                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3970   001200  010E               	movlb	14	; () banked
  3971   001202  83DA               	bsf	218,1,b	;volatile
  3972   001204                     
  3973                           ; BSR set to: 14
  3974   001204  0012               	return		;funcret
  3975   001206                     __end_of_I2C_2_Master_RepStart:
  3976                           	callstack 0
  3977                           
  3978 ;; *************** function _I2C_2_Master_Read *****************
  3979 ;; Defined at:
  3980 ;;		line 51 in file "i2c.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  ack             1    wreg     unsigned char 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  ack             1    2[COMRAM] unsigned char 
  3985 ;;  tmp             1    3[COMRAM] unsigned char 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      unsigned char 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3998 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;Total ram usage:        3 bytes
  4000 ;; Hardware stack levels used: 1
  4001 ;; Hardware stack levels required when called: 3
  4002 ;; This function calls:
  4003 ;;		_I2C_2_Master_Idle
  4004 ;; This function is called by:
  4005 ;;		_color_read_Red
  4006 ;;		_color_read_Blue
  4007 ;;		_color_read_Green
  4008 ;;		_color_read_Clear
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text25
  4013   001088                     __ptext25:
  4014                           	callstack 0
  4015   001088                     _I2C_2_Master_Read:
  4016                           	callstack 25
  4017                           
  4018                           ; BSR set to: 14
  4019                           ;incstack = 0
  4020                           ;I2C_2_Master_Read@ack stored from wreg
  4021   001088  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4022   00108A                     
  4023                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4024   00108A  EC93  F008         	call	_I2C_2_Master_Idle	;wreg free
  4025   00108E                     
  4026                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4027   00108E  010E               	movlb	14	; () banked
  4028   001090  87DA               	bsf	218,3,b	;volatile
  4029                           
  4030                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4031   001092  EC93  F008         	call	_I2C_2_Master_Idle	;wreg free
  4032   001096                     
  4033                           ;i2c.c: 57:   tmp = SSP2BUF;
  4034   001096  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4035                           
  4036                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4037   00109A  EC93  F008         	call	_I2C_2_Master_Idle	;wreg free
  4038   00109E                     
  4039                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4040   00109E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4041   0010A0  B4D8               	btfsc	status,2,c
  4042   0010A2  EF55  F008         	goto	u1071
  4043   0010A6  EF59  F008         	goto	u1070
  4044   0010AA                     u1071:
  4045   0010AA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4046   0010AC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4047   0010AE  EF5A  F008         	goto	u1088
  4048   0010B2                     u1070:
  4049   0010B2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4050   0010B4                     u1088:
  4051   0010B4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4052   0010B6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4053   0010B8  010E               	movlb	14	; () banked
  4054   0010BA  51DA               	movf	218,w,b	;volatile
  4055   0010BC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4056   0010BE  0BDF               	andlw	-33
  4057   0010C0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4058   0010C2  6FDA               	movwf	218,b	;volatile
  4059   0010C4                     
  4060                           ; BSR set to: 14
  4061                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4062   0010C4  89DA               	bsf	218,4,b	;volatile
  4063   0010C6                     
  4064                           ; BSR set to: 14
  4065                           ;i2c.c: 61:   return tmp;
  4066   0010C6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4067   0010C8                     
  4068                           ; BSR set to: 14
  4069   0010C8  0012               	return		;funcret
  4070   0010CA                     __end_of_I2C_2_Master_Read:
  4071                           	callstack 0
  4072                           
  4073 ;; *************** function _I2C_2_Master_Idle *****************
  4074 ;; Defined at:
  4075 ;;		line 22 in file "i2c.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      void 
  4082 ;; Registers used:
  4083 ;;		wreg, status,2, status,0
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;Total ram usage:        1 bytes
  4094 ;; Hardware stack levels used: 1
  4095 ;; Hardware stack levels required when called: 2
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_I2C_2_Master_Start
  4100 ;;		_I2C_2_Master_RepStart
  4101 ;;		_I2C_2_Master_Stop
  4102 ;;		_I2C_2_Master_Write
  4103 ;;		_I2C_2_Master_Read
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text26
  4108   001126                     __ptext26:
  4109                           	callstack 0
  4110   001126                     _I2C_2_Master_Idle:
  4111                           	callstack 25
  4112   001126                     l314:
  4113   001126  010E               	movlb	14	; () banked
  4114   001128  B5D8               	btfsc	216,2,b	;volatile
  4115   00112A  EF99  F008         	goto	u1051
  4116   00112E  EF9B  F008         	goto	u1050
  4117   001132                     u1051:
  4118   001132  EF93  F008         	goto	l314
  4119   001136                     u1050:
  4120   001136                     
  4121                           ; BSR set to: 14
  4122   001136  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4123   00113A  0E1F               	movlw	31
  4124   00113C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4125   00113E  A4D8               	btfss	status,2,c
  4126   001140  EFA4  F008         	goto	u1061
  4127   001144  EFA6  F008         	goto	u1060
  4128   001148                     u1061:
  4129   001148  EF93  F008         	goto	l314
  4130   00114C                     u1060:
  4131   00114C                     
  4132                           ; BSR set to: 14
  4133   00114C  0012               	return		;funcret
  4134   00114E                     __end_of_I2C_2_Master_Idle:
  4135                           	callstack 0
  4136                           
  4137 ;; *************** function ___lwdiv *****************
  4138 ;; Defined at:
  4139 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  dividend        2    6[COMRAM] unsigned int 
  4142 ;;  divisor         2    8[COMRAM] unsigned int 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  quotient        2   10[COMRAM] unsigned int 
  4145 ;;  counter         1   12[COMRAM] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  2    6[COMRAM] unsigned int 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4155 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4156 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;Total ram usage:        7 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; Hardware stack levels required when called: 2
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_calibrate_black
  4166 ;;		_setMotorPWM
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text27
  4171   000D74                     __ptext27:
  4172                           	callstack 0
  4173   000D74                     ___lwdiv:
  4174                           	callstack 26
  4175   000D74  0E00               	movlw	0
  4176   000D76  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  4177   000D78  0E00               	movlw	0
  4178   000D7A  6E0B               	movwf	___lwdiv@quotient^0,c
  4179   000D7C  5009               	movf	___lwdiv@divisor^0,w,c
  4180   000D7E  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4181   000D80  B4D8               	btfsc	status,2,c
  4182   000D82  EFC5  F006         	goto	u1121
  4183   000D86  EFC7  F006         	goto	u1120
  4184   000D8A                     u1121:
  4185   000D8A  EFEF  F006         	goto	l899
  4186   000D8E                     u1120:
  4187   000D8E  0E01               	movlw	1
  4188   000D90  6E0D               	movwf	___lwdiv@counter^0,c
  4189   000D92  EFCF  F006         	goto	l2109
  4190   000D96                     l2107:
  4191   000D96  90D8               	bcf	status,0,c
  4192   000D98  3609               	rlcf	___lwdiv@divisor^0,f,c
  4193   000D9A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4194   000D9C  2A0D               	incf	___lwdiv@counter^0,f,c
  4195   000D9E                     l2109:
  4196   000D9E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  4197   000DA0  EFD4  F006         	goto	u1131
  4198   000DA4  EFD6  F006         	goto	u1130
  4199   000DA8                     u1131:
  4200   000DA8  EFCB  F006         	goto	l2107
  4201   000DAC                     u1130:
  4202   000DAC                     l2111:
  4203   000DAC  90D8               	bcf	status,0,c
  4204   000DAE  360B               	rlcf	___lwdiv@quotient^0,f,c
  4205   000DB0  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4206   000DB2  5009               	movf	___lwdiv@divisor^0,w,c
  4207   000DB4  5C07               	subwf	___lwdiv@dividend^0,w,c
  4208   000DB6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4209   000DB8  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4210   000DBA  A0D8               	btfss	status,0,c
  4211   000DBC  EFE2  F006         	goto	u1141
  4212   000DC0  EFE4  F006         	goto	u1140
  4213   000DC4                     u1141:
  4214   000DC4  EFE9  F006         	goto	l2119
  4215   000DC8                     u1140:
  4216   000DC8  5009               	movf	___lwdiv@divisor^0,w,c
  4217   000DCA  5E07               	subwf	___lwdiv@dividend^0,f,c
  4218   000DCC  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4219   000DCE  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4220   000DD0  800B               	bsf	___lwdiv@quotient^0,0,c
  4221   000DD2                     l2119:
  4222   000DD2  90D8               	bcf	status,0,c
  4223   000DD4  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4224   000DD6  3209               	rrcf	___lwdiv@divisor^0,f,c
  4225   000DD8  2E0D               	decfsz	___lwdiv@counter^0,f,c
  4226   000DDA  EFD6  F006         	goto	l2111
  4227   000DDE                     l899:
  4228   000DDE  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4229   000DE2  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4230   000DE6  0012               	return		;funcret
  4231   000DE8                     __end_of___lwdiv:
  4232                           	callstack 0
  4233                           
  4234 ;; *************** function _I2C_2_Master_Init *****************
  4235 ;; Defined at:
  4236 ;;		line 4 in file "i2c.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;Total ram usage:        0 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; Hardware stack levels required when called: 2
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_color_click_init
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text28
  4265   0010FC                     __ptext28:
  4266                           	callstack 0
  4267   0010FC                     _I2C_2_Master_Init:
  4268                           	callstack 27
  4269   0010FC                     
  4270                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4271   0010FC  010E               	movlb	14	; () banked
  4272   0010FE  51D9               	movf	217,w,b	;volatile
  4273   001100  0BF0               	andlw	-16
  4274   001102  0908               	iorlw	8
  4275   001104  6FD9               	movwf	217,b	;volatile
  4276   001106                     
  4277                           ; BSR set to: 14
  4278                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4279   001106  8BD9               	bsf	217,5,b	;volatile
  4280                           
  4281                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4282   001108  0E9F               	movlw	159
  4283   00110A  6FD6               	movwf	214,b	;volatile
  4284   00110C                     
  4285                           ; BSR set to: 14
  4286                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4287   00110C  8A84               	bsf	132,5,c	;volatile
  4288   00110E                     
  4289                           ; BSR set to: 14
  4290                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4291   00110E  8C84               	bsf	132,6,c	;volatile
  4292   001110                     
  4293                           ; BSR set to: 14
  4294                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4295   001110  9BA7               	bcf	167,5,b	;volatile
  4296   001112                     
  4297                           ; BSR set to: 14
  4298                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4299   001112  9DA7               	bcf	167,6,b	;volatile
  4300                           
  4301                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4302   001114  0E1D               	movlw	29
  4303   001116  6F1D               	movwf	29,b	;volatile
  4304                           
  4305                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4306   001118  0E1E               	movlw	30
  4307   00111A  6F1C               	movwf	28,b	;volatile
  4308                           
  4309                           ;i2c.c: 18:   RD5PPS=0x1C;
  4310   00111C  0E1C               	movlw	28
  4311   00111E  6F6F               	movwf	111,b	;volatile
  4312                           
  4313                           ;i2c.c: 19:   RD6PPS=0x1B;
  4314   001120  0E1B               	movlw	27
  4315   001122  6F70               	movwf	112,b	;volatile
  4316   001124                     
  4317                           ; BSR set to: 14
  4318   001124  0012               	return		;funcret
  4319   001126                     __end_of_I2C_2_Master_Init:
  4320                           	callstack 0
  4321                           
  4322 ;; *************** function _Timer0_init *****************
  4323 ;; Defined at:
  4324 ;;		line 7 in file "timers.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4342 ;;Total ram usage:        0 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 2
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_main
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text29
  4353   001194                     __ptext29:
  4354                           	callstack 0
  4355   001194                     _Timer0_init:
  4356                           	callstack 28
  4357   001194                     
  4358                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4359   001194  50D6               	movf	214,w,c	;volatile
  4360   001196  0B1F               	andlw	-225
  4361   001198  0940               	iorlw	64
  4362   00119A  6ED6               	movwf	214,c	;volatile
  4363   00119C                     
  4364                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4365   00119C  88D6               	bsf	214,4,c	;volatile
  4366                           
  4367                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4368   00119E  50D6               	movf	214,w,c	;volatile
  4369   0011A0  0BF0               	andlw	-16
  4370   0011A2  0908               	iorlw	8
  4371   0011A4  6ED6               	movwf	214,c	;volatile
  4372                           
  4373                           ;timers.c: 13:     TMR0H=0b11100111;
  4374   0011A6  0EE7               	movlw	231
  4375   0011A8  6ED4               	movwf	212,c	;volatile
  4376                           
  4377                           ;timers.c: 14:     TMR0L=0b10010101;
  4378   0011AA  0E95               	movlw	149
  4379   0011AC  6ED3               	movwf	211,c	;volatile
  4380   0011AE                     
  4381                           ;timers.c: 15:     T0CON0bits.T016BIT=1;
  4382   0011AE  88D5               	bsf	213,4,c	;volatile
  4383   0011B0                     
  4384                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  4385   0011B0  8ED5               	bsf	213,7,c	;volatile
  4386   0011B2  0012               	return		;funcret
  4387   0011B4                     __end_of_Timer0_init:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function _Interrupts_init *****************
  4391 ;; Defined at:
  4392 ;;		line 10 in file "interrupts.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;		None
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		None
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;Total ram usage:        0 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; Hardware stack levels required when called: 2
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_main
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text30
  4421   0011DC                     __ptext30:
  4422                           	callstack 0
  4423   0011DC                     _Interrupts_init:
  4424                           	callstack 28
  4425   0011DC                     
  4426                           ;interrupts.c: 12:     INTCONbits.PEIE = 1;
  4427   0011DC  8CF2               	bsf	242,6,c	;volatile
  4428                           
  4429                           ;interrupts.c: 13:     PIE0bits.TMR0IE = 1;
  4430   0011DE  010E               	movlb	14	; () banked
  4431   0011E0  8B29               	bsf	41,5,b	;volatile
  4432                           
  4433                           ;interrupts.c: 14:     PIE2bits.C1IE = 1;
  4434   0011E2  812B               	bsf	43,0,b	;volatile
  4435                           
  4436                           ;interrupts.c: 15:     INTCONbits.GIE = 1;
  4437   0011E4  8EF2               	bsf	242,7,c	;volatile
  4438   0011E6                     
  4439                           ; BSR set to: 14
  4440   0011E6  0012               	return		;funcret
  4441   0011E8                     __end_of_Interrupts_init:
  4442                           	callstack 0
  4443                           
  4444 ;; *************** function _HighISR *****************
  4445 ;; Defined at:
  4446 ;;		line 22 in file "interrupts.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used: 1
  4466 ;; Hardware stack levels required when called: 1
  4467 ;; This function calls:
  4468 ;;		_increment_seconds
  4469 ;; This function is called by:
  4470 ;;		Interrupt level 2
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	intcode
  4475   000008                     __pintcode:
  4476                           	callstack 0
  4477   000008                     _HighISR:
  4478                           	callstack 24
  4479                           
  4480                           ; BSR set to: 14
  4481                           ;incstack = 0
  4482   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4483   00000A                     
  4484                           ;interrupts.c: 24:     if(PIR0bits.TMR0IF == 1){
  4485   00000A  010E               	movlb	14	; () banked
  4486   00000C  AB33               	btfss	51,5,b	;volatile
  4487   00000E  EF0B  F000         	goto	i2u67_41
  4488   000012  EF0D  F000         	goto	i2u67_40
  4489   000016                     i2u67_41:
  4490   000016  EF15  F000         	goto	i2l355
  4491   00001A                     i2u67_40:
  4492   00001A                     
  4493                           ; BSR set to: 14
  4494                           ;interrupts.c: 25:     increment_seconds();
  4495   00001A  EC03  F009         	call	_increment_seconds	;wreg free
  4496   00001E                     
  4497                           ;interrupts.c: 27:     TMR0H=0b11100111;
  4498   00001E  0EE7               	movlw	231
  4499   000020  6ED4               	movwf	212,c	;volatile
  4500   000022                     
  4501                           ;interrupts.c: 28:     TMR0L=0b10010101;
  4502   000022  0E95               	movlw	149
  4503   000024  6ED3               	movwf	211,c	;volatile
  4504   000026                     
  4505                           ;interrupts.c: 30:     PIR0bits.TMR0IF = 0;
  4506   000026  010E               	movlb	14	; () banked
  4507   000028  9B33               	bcf	51,5,b	;volatile
  4508   00002A                     i2l355:
  4509                           
  4510                           ; BSR set to: 14
  4511   00002A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4512   00002C  0011               	retfie		f
  4513   00002E                     __end_of_HighISR:
  4514                           	callstack 0
  4515                           
  4516 ;; *************** function _increment_seconds *****************
  4517 ;; Defined at:
  4518 ;;		line 318 in file "dc_motor.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;		None
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;		None
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      void 
  4525 ;; Registers used:
  4526 ;;		status,2, status,0
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4536 ;;Total ram usage:        0 bytes
  4537 ;; Hardware stack levels used: 1
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_HighISR
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text32
  4546   001206                     __ptext32:
  4547                           	callstack 0
  4548   001206                     _increment_seconds:
  4549                           	callstack 24
  4550   001206                     
  4551                           ;dc_motor.c: 320:     seconds += 1;
  4552   001206  4A5D               	infsnz	_seconds^0,f,c
  4553   001208  2A5E               	incf	(_seconds+1)^0,f,c
  4554   00120A  0012               	return		;funcret
  4555   00120C                     __end_of_increment_seconds:
  4556                           	callstack 0
  4557   000000                     
  4558                           	psect	rparam
  4559   000000                     
  4560                           	psect	temp
  4561   00005F                     btemp:
  4562                           	callstack 0
  4563   00005F                     	ds	1
  4564   000000                     int$flags	set	btemp
  4565   000000                     wtemp8	set	btemp+1
  4566   000000                     ttemp5	set	btemp+1
  4567   000000                     ttemp6	set	btemp+4
  4568   000000                     ttemp7	set	btemp+8
  4569                           
  4570                           	psect	idloc
  4571                           
  4572                           ;Config register IDLOC0 @ 0x200000
  4573                           ;	unspecified, using default values
  4574   200000                     	org	2097152
  4575   200000  0FFF               	dw	4095
  4576                           
  4577                           ;Config register IDLOC1 @ 0x200002
  4578                           ;	unspecified, using default values
  4579   200002                     	org	2097154
  4580   200002  0FFF               	dw	4095
  4581                           
  4582                           ;Config register IDLOC2 @ 0x200004
  4583                           ;	unspecified, using default values
  4584   200004                     	org	2097156
  4585   200004  0FFF               	dw	4095
  4586                           
  4587                           ;Config register IDLOC3 @ 0x200006
  4588                           ;	unspecified, using default values
  4589   200006                     	org	2097158
  4590   200006  0FFF               	dw	4095
  4591                           
  4592                           ;Config register IDLOC4 @ 0x200008
  4593                           ;	unspecified, using default values
  4594   200008                     	org	2097160
  4595   200008  0FFF               	dw	4095
  4596                           
  4597                           ;Config register IDLOC5 @ 0x20000A
  4598                           ;	unspecified, using default values
  4599   20000A                     	org	2097162
  4600   20000A  0FFF               	dw	4095
  4601                           
  4602                           ;Config register IDLOC6 @ 0x20000C
  4603                           ;	unspecified, using default values
  4604   20000C                     	org	2097164
  4605   20000C  0FFF               	dw	4095
  4606                           
  4607                           ;Config register IDLOC7 @ 0x20000E
  4608                           ;	unspecified, using default values
  4609   20000E                     	org	2097166
  4610   20000E  0FFF               	dw	4095
  4611                           
  4612                           	psect	config
  4613                           
  4614                           ;Config register CONFIG1L @ 0x300000
  4615                           ;	External Oscillator mode Selection bits
  4616                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4617                           ;	Power-up default value for COSC bits
  4618                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4619   300000                     	org	3145728
  4620   300000  AA                 	db	170
  4621                           
  4622                           ;Config register CONFIG1H @ 0x300001
  4623                           ;	unspecified, using default values
  4624                           ;	Clock Out Enable bit
  4625                           ;	CLKOUTEN = 0x1, unprogrammed default
  4626                           ;	Clock Switch Enable bit
  4627                           ;	CSWEN = 0x1, unprogrammed default
  4628                           ;	Fail-Safe Clock Monitor Enable bit
  4629                           ;	FCMEN = 0x1, unprogrammed default
  4630   300001                     	org	3145729
  4631   300001  FF                 	db	255
  4632                           
  4633                           ;Config register CONFIG2L @ 0x300002
  4634                           ;	unspecified, using default values
  4635                           ;	Master Clear Enable bit
  4636                           ;	MCLRE = 0x1, unprogrammed default
  4637                           ;	Power-up Timer Enable bit
  4638                           ;	PWRTE = 0x1, unprogrammed default
  4639                           ;	Low-power BOR enable bit
  4640                           ;	LPBOREN = 0x1, unprogrammed default
  4641                           ;	Brown-out Reset Enable bits
  4642                           ;	BOREN = 0x3, unprogrammed default
  4643   300002                     	org	3145730
  4644   300002  FF                 	db	255
  4645                           
  4646                           ;Config register CONFIG2H @ 0x300003
  4647                           ;	unspecified, using default values
  4648                           ;	Brown Out Reset Voltage selection bits
  4649                           ;	BORV = 0x3, unprogrammed default
  4650                           ;	ZCD Disable bit
  4651                           ;	ZCD = 0x1, unprogrammed default
  4652                           ;	PPSLOCK bit One-Way Set Enable bit
  4653                           ;	PPS1WAY = 0x1, unprogrammed default
  4654                           ;	Stack Full/Underflow Reset Enable bit
  4655                           ;	STVREN = 0x1, unprogrammed default
  4656                           ;	Debugger Enable bit
  4657                           ;	DEBUG = 0x1, unprogrammed default
  4658                           ;	Extended Instruction Set Enable bit
  4659                           ;	XINST = 0x1, unprogrammed default
  4660   300003                     	org	3145731
  4661   300003  FF                 	db	255
  4662                           
  4663                           ;Config register CONFIG3L @ 0x300004
  4664                           ;	WDT Period Select bits
  4665                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4666                           ;	WDT operating mode
  4667                           ;	WDTE = OFF, WDT Disabled
  4668   300004                     	org	3145732
  4669   300004  9F                 	db	159
  4670                           
  4671                           ;Config register CONFIG3H @ 0x300005
  4672                           ;	unspecified, using default values
  4673                           ;	WDT Window Select bits
  4674                           ;	WDTCWS = 0x7, unprogrammed default
  4675                           ;	WDT input clock selector
  4676                           ;	WDTCCS = 0x7, unprogrammed default
  4677   300005                     	org	3145733
  4678   300005  FF                 	db	255
  4679                           
  4680                           ;Config register CONFIG4L @ 0x300006
  4681                           ;	unspecified, using default values
  4682                           ;	Write Protection Block 0
  4683                           ;	WRT0 = 0x1, unprogrammed default
  4684                           ;	Write Protection Block 1
  4685                           ;	WRT1 = 0x1, unprogrammed default
  4686                           ;	Write Protection Block 2
  4687                           ;	WRT2 = 0x1, unprogrammed default
  4688                           ;	Write Protection Block 3
  4689                           ;	WRT3 = 0x1, unprogrammed default
  4690                           ;	Write Protection Block 3
  4691                           ;	WRT4 = 0x1, unprogrammed default
  4692                           ;	Write Protection Block 3
  4693                           ;	WRT5 = 0x1, unprogrammed default
  4694                           ;	Write Protection Block 3
  4695                           ;	WRT6 = 0x1, unprogrammed default
  4696                           ;	Write Protection Block 3
  4697                           ;	WRT7 = 0x1, unprogrammed default
  4698   300006                     	org	3145734
  4699   300006  FF                 	db	255
  4700                           
  4701                           ;Config register CONFIG4H @ 0x300007
  4702                           ;	unspecified, using default values
  4703                           ;	Configuration Register Write Protection bit
  4704                           ;	WRTC = 0x1, unprogrammed default
  4705                           ;	Boot Block Write Protection bit
  4706                           ;	WRTB = 0x1, unprogrammed default
  4707                           ;	Data EEPROM Write Protection bit
  4708                           ;	WRTD = 0x1, unprogrammed default
  4709                           ;	Scanner Enable bit
  4710                           ;	SCANE = 0x1, unprogrammed default
  4711                           ;	Low Voltage Programming Enable bit
  4712                           ;	LVP = 0x1, unprogrammed default
  4713   300007                     	org	3145735
  4714   300007  FF                 	db	255
  4715                           
  4716                           ;Config register CONFIG5L @ 0x300008
  4717                           ;	unspecified, using default values
  4718                           ;	UserNVM Program Memory Code Protection bit
  4719                           ;	CP = 0x1, unprogrammed default
  4720                           ;	DataNVM Memory Code Protection bit
  4721                           ;	CPD = 0x1, unprogrammed default
  4722   300008                     	org	3145736
  4723   300008  FF                 	db	255
  4724                           
  4725                           ;Config register CONFIG5H @ 0x300009
  4726                           ;	unspecified, using default values
  4727   300009                     	org	3145737
  4728   300009  FF                 	db	255
  4729                           
  4730                           ;Config register CONFIG6L @ 0x30000A
  4731                           ;	unspecified, using default values
  4732                           ;	Table Read Protection Block 0
  4733                           ;	EBTR0 = 0x1, unprogrammed default
  4734                           ;	Table Read Protection Block 1
  4735                           ;	EBTR1 = 0x1, unprogrammed default
  4736                           ;	Table Read Protection Block 2
  4737                           ;	EBTR2 = 0x1, unprogrammed default
  4738                           ;	Table Read Protection Block 3
  4739                           ;	EBTR3 = 0x1, unprogrammed default
  4740                           ;	Table Read Protection Block 4
  4741                           ;	EBTR4 = 0x1, unprogrammed default
  4742                           ;	Table Read Protection Block 5
  4743                           ;	EBTR5 = 0x1, unprogrammed default
  4744                           ;	Table Read Protection Block 6
  4745                           ;	EBTR6 = 0x1, unprogrammed default
  4746                           ;	Table Read Protection Block 7
  4747                           ;	EBTR7 = 0x1, unprogrammed default
  4748   30000A                     	org	3145738
  4749   30000A  FF                 	db	255
  4750                           
  4751                           ;Config register CONFIG6H @ 0x30000B
  4752                           ;	unspecified, using default values
  4753                           ;	Boot Block Table Read Protection bit
  4754                           ;	EBTRB = 0x1, unprogrammed default
  4755   30000B                     	org	3145739
  4756   30000B  FF                 	db	255
  4757                           tosu	equ	0xFFF
  4758                           tosh	equ	0xFFE
  4759                           tosl	equ	0xFFD
  4760                           stkptr	equ	0xFFC
  4761                           pclatu	equ	0xFFB
  4762                           pclath	equ	0xFFA
  4763                           pcl	equ	0xFF9
  4764                           tblptru	equ	0xFF8
  4765                           tblptrh	equ	0xFF7
  4766                           tblptrl	equ	0xFF6
  4767                           tablat	equ	0xFF5
  4768                           prodh	equ	0xFF4
  4769                           prodl	equ	0xFF3
  4770                           indf0	equ	0xFEF
  4771                           postinc0	equ	0xFEE
  4772                           postdec0	equ	0xFED
  4773                           preinc0	equ	0xFEC
  4774                           plusw0	equ	0xFEB
  4775                           fsr0h	equ	0xFEA
  4776                           fsr0l	equ	0xFE9
  4777                           wreg	equ	0xFE8
  4778                           indf1	equ	0xFE7
  4779                           postinc1	equ	0xFE6
  4780                           postdec1	equ	0xFE5
  4781                           preinc1	equ	0xFE4
  4782                           plusw1	equ	0xFE3
  4783                           fsr1h	equ	0xFE2
  4784                           fsr1l	equ	0xFE1
  4785                           bsr	equ	0xFE0
  4786                           indf2	equ	0xFDF
  4787                           postinc2	equ	0xFDE
  4788                           postdec2	equ	0xFDD
  4789                           preinc2	equ	0xFDC
  4790                           plusw2	equ	0xFDB
  4791                           fsr2h	equ	0xFDA
  4792                           fsr2l	equ	0xFD9
  4793                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        124
    BSS         236
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      94
    BANK0           160     44     152
    BANK1           256      0     232
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    Calibrate@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    Calibrate@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    Calibrate@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    Calibrate@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveForward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveForward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveForward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    moveForward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveForward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveForward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    moveBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    moveBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    TimedfullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRightLong@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRightLong@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRightLong@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRightLong@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    S1015DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S1015DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), main@motorL(COMRAM[9]), RobotMovement@motorR(COMRAM[9]), RobotMovement@motorL(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_get_color_code
    _stop->_setMotorPWM
    _moveForward->_setMotorPWM
    _moveBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    _get_wall_presence->_color_read_Clear
    _get_color_code->_get_color_distance
    _get_color_distance->___wmul
    ___lldiv->___lmul
    _color_click_init->_calibrate_black
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _calibrate_black->___lwdiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_get_color_code

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   28554
                                             56 COMRAM    18    18      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                     _get_color_code
                  _get_wall_presence
                    _initDCmotorsPWM
                           _moveBack
                        _moveForward
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 4     0      4    4653
                                             19 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _moveForward                                          4     0      4    4849
                                             19 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _moveBack                                             8     2      6    4795
                                             19 COMRAM     8     2      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    4413
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_wall_presence                                    8     6      2    2632
                                             11 COMRAM     8     6      2
                             ___wmul
                   _color_read_Clear
                      _set_led_color
 ---------------------------------------------------------------------------------
 (1) _get_color_code                                      48    46      2    6509
                                             52 COMRAM     4     2      2
                                              0 BANK0     44    44      0
                            ___lldiv
                             ___lmul
                             ___wmul
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                 _get_color_distance
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _get_color_distance                                  46    22     24    2034
                                              6 COMRAM    46    22     24
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1115
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    4532
                                             21 COMRAM     1     1      0
                  _I2C_2_Master_Init
                    _calibrate_black
                    _calibrate_white
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      2     2      0    1697
                                             11 COMRAM     2     2      0
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _calibrate_black                                      8     8      0    2541
                                             13 COMRAM     8     8      0
                            ___lwdiv
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _set_led_color                                        2     0      2    1358
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     662
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0       0
                  _increment_seconds
 ---------------------------------------------------------------------------------
 (7) _increment_seconds                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _calibrate_black
       ___lwdiv
         ___wmul (ARG)
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _set_led_color
     _calibrate_white
       _color_read_Blue
       _color_read_Green
       _color_read_Red
       _set_led_color
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _get_color_code
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___wmul
     _color_read_Blue
     _color_read_Green
     _color_read_Red
     _get_color_distance
       ___wmul
     _set_led_color
   _get_wall_presence
     ___wmul
     _color_read_Clear
     _set_led_color
   _initDCmotorsPWM
   _moveBack
     _setMotorPWM
       ___lwdiv
       ___wmul
   _moveForward
     _setMotorPWM
   _stop
     _setMotorPWM

 _HighISR (ROOT)
   _increment_seconds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E8       7       90.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      5E       1      100.0%
BITBIGSFRllhllh     52      0       0      44        0.0%
BITBIGSFRllhlll     46      0       0      46        0.0%
BITBIGSFRlllllh     35      0       0      55        0.0%
BITBIGSFRllllll     2D      0       0      59        0.0%
BITBIGSFRllhlll     20      0       0      48        0.0%
BITBIGSFRlllhhh     1E      0       0      50        0.0%
BITBIGSFRhhhlhh     1B      0       0      33        0.0%
BITBIGSFRhhlll      17      0       0      38        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      51        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      49        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllllh      7      0       0      56        0.0%
BITBIGSFRhl          6      0       0      39        0.0%
BITBIGSFRllllhl      5      0       0      54        0.0%
BITBIGSFRllllhh      3      0       0      53        0.0%
BITBIGSFRllhlll      2      0       0      45        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      57        0.0%
BITBIGSFRllhlll      1      0       0      47        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      52        0.0%
BITBIGSFRllhlhh      1      0       0      42        0.0%
BITBIGSFRllhlhl      1      0       0      43        0.0%
BITBIGSFRllhh        1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DE      60        0.0%
DATA                 0      0     1DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Dec 07 21:18:37 2022

               _color_read_Red 0F04                _color_read_Blue 0FF4                             l71 07A8  
                           l73 07DE                             l82 1192                             l74 07BE  
                           l91 0FA2                             l67 078C                             l85 0F52  
                           l77 07D0                             l94 0FF2                             l88 1042  
          ___wmul@multiplicand 0003               _color_read_Clear 0FA4               ?_calibrate_black 0001  
             _color_read_Green 0F54              ??_Interrupts_init 0001                            l112 1058  
                          l113 105A                            l114 106E                            l115 1070  
                          l211 053A                            l116 1084                            l204 0C5C  
                          l141 0916                            l109 06A6                            l118 1086  
                          l214 10FA                            l311 1124                            l320 11FA  
                          l144 0A8C                            l136 03C6                            l314 1126  
                          l138 03CE                            l323 1204                            l147 0BCC  
                          l332 10C8                            l420 0E50                            l405 11B2  
                          l317 114C                            l326 11F0                            l254 0CE8  
                          l408 1172                            l329 11DA                            l257 0F02  
                          l442 0B30                            l435 0B20                            l419 0E40  
                          l349 11E6                            l906 0DE6                            l899 0DDE  
                          _RGB 00EC               ?_calibrate_white 0001                            wreg 000FE8  
                         l2101 0D74                           l2111 0DAC                           l2103 0D7C  
                         l2031 1136                           l2121 0DD8                           l2113 0DB2  
                         l2105 0D8E                           l2033 11F2                           l2041 11E8  
                         l2201 062A                           l2131 1110                           l2123 10FC  
                         l2115 0DC8                           l2107 0D96                           l2051 108E  
                         l2035 11F6                           l2043 11EC                           l2203 0642  
                         l2211 03EC                           l2133 1112                           l2125 1106  
                         l2117 0DD0                           l2109 0D9E                           l2029 1126  
                         l2053 1096                           l2045 11FC                           l2037 11D2  
                         l2141 0A06                           l2205 064A                           l2221 04B6  
                         l2213 0440                           l2127 110C                           l2119 0DD2  
                         l2055 109E                           l2047 1200                           l2039 11D6  
                         l2071 103A                           l2063 0F04                           l2151 0A6E  
                         l2143 0A18                           l2135 1176                           l2303 07BA  
                         l2231 0E16                           l2311 0054                           l2223 04FA  
                         l2215 0454                           l2129 110E                           l2057 10C4  
                         l2049 108A                           l2081 0FA4                           l2065 0F4A  
                         l2161 0812                           l2153 0A80                           l2145 0A24  
                         l2137 09E4                           l2305 07CC                           l2241 0ABC  
                         l2233 0E20                           l2225 0DE8                           l2321 00BC  
                         l2313 0066                           l2401 0C44                           l2217 0458  
                         l2209 03D0                           l2059 10C6                           l2083 0FEA  
                         l2075 0F54                           l2091 1068                           l2171 0876  
                         l2163 081E                           l2155 07E0                           l2147 0A4C  
                         l2139 09F0                           l2251 0B0E                           l2243 0AC8  
                         l2235 0A8E                           l2227 0DF8                           l2331 0178  
                         l2323 00CE                           l2315 0072                           l2307 0032  
                         l2403 0C4E                           l2219 049A                           l2411 10E2  
                         l2069 0FF4                           l2077 0F9A                           l2093 107E  
                         l2181 08DE                           l2173 0898                           l2165 0844  
                         l2157 07EC                           l2149 0A58                           l2261 06B6  
                         l2253 0B10                           l2245 0AD6                           l2237 0A9E  
                         l2229 0E06                           l2341 0236                           l2333 0188  
                         l2325 00DA                           l2317 009A                           l2309 003E  
                         l2405 0C50                           l2413 10EE                           l2087 1044  
                         l2183 08FA                           l2175 08A4                           l2167 0850  
                         l2159 0802                           l2271 06DE                           l2263 06C6  
                         l2255 0B1A                           l2247 0AE0                           l2239 0AB4  
                         l2095 114E                           l2191 058E                           l2351 0314  
                         l2343 0256                           l2335 01A8                           l2327 00FA  
                         l2319 00A6                           l2407 0C5A                           l2089 1052  
                         l2177 08B0                           l2169 0866                           l2281 0728  
                         l2273 06E0                           l2265 06D0                           l2257 06A8  
                         l2249 0AFE                           l2097 116A                           l2193 05B4  
                         l2185 053C                           l2361 0354                           l2353 031E  
                         l2345 026A                           l2337 01BC                           l2329 010E  
                         l2601 0CAE                           l2409 10CA                           l2179 08C6  
                         l2291 0782                           l2283 073A                           l2275 06F2  
                         l2267 06DA                           l2259 06AC                           l2195 05D0  
                         l2187 055A                           l2363 0384                           l2347 02D4  
                         l2339 0226                           l2371 0B32                           l2603 0CBA  
                         l2611 0EDE                           l2621 119C                           l2293 0784  
                         l2285 074C                           l2277 0704                           l2269 06DC  
                         l2197 05E8                           l2189 0576                           l2365 039C  
                         l2349 02E4                           l2381 0B8E                           l2373 0B3E  
                         l2605 0CD2                           l2613 0EEA                           l2701 092C  
                         l2623 11AE                           l2295 0788                           l2287 075E  
                         l2279 0716                           l2199 060E                           l2367 03AC  
                         l2359 0326                           l2383 0B9A                           l2375 0B54  
                         l2391 0C08                           l2615 0EF6                           l2607 0EB2  
                         l2711 093A                           l2703 092C                           l2617 11DC  
                         l2625 11B0                           l2297 078A                           l2289 0770  
                         l2369 03B0                           l2377 0B60                           l2393 0C2C  
                         l2609 0ED2                           l2721 095A                           l2713 093E  
                         l2705 0930                           l2619 1194                           l2299 079A  
                         l2379 0B6C                           l2395 0C36                           l2387 0BCE  
                         l2731 0976                           l2723 095E                           l2715 0942  
                         l2707 0934                           l2397 0C38                           l2389 0BDE  
                         l2741 09C0                           l2733 097E                           l2725 0962  
                         l2717 094A                           l2709 0936                           l2399 0C42  
                         l2591 0C5E                           l2735 0992                           l2727 0966  
                         l2719 0952                           l2593 0C6A                           l2737 09A8  
                         l2729 096E                           l2595 0C8A                           l2739 09BC  
                         l2597 0C96                           l2599 0CA2                           l2695 0918  
                         l2697 091C                           l2699 0920                           u1100 1068  
                         u1101 1064                           u1110 107E                           u1111 107A  
                         u1120 0D8E                           u1200 0E06                           u1121 0D8A  
                         u1201 0E02                           u1130 0DAC                           u1050 1136  
                         u1210 0E40                           u1131 0DA8                           u1051 1132  
                         u1211 0E3C                           u1140 0DC8                           u1060 114C  
                         u1220 0AB4                           u1141 0DC4                           u1061 1148  
                         u1301 0744                           u1221 0AB0                           u1070 10B2  
                         u1230 0AD6                           u1150 055A                           u1071 10AA  
                         u1311 0756                           u1231 0AD2                           u1151 0556  
                         u1240 0AFE                           u1160 05B4                           u1400 01A8  
                         u1321 0768                           u1241 0AFA                           u1161 05B0  
                         u1401 01A4                           u1090 1052                           u1170 060E  
                         u1410 0256                           u1091 104E                           u1331 077A  
                         u1251 06EA                           u1171 060A                           u1411 0252  
                         u2107 0B76                           u1340 079A                           u1500 0BC8  
                         u1180 03EC                           u1341 0796                           u1261 06FC  
                         u1421 02EE                           u2117 0048                           u1181 03E8  
                         u1350 07A8                           u1190 04B6                           u2207 085A  
                         u1351 07A4                           u1271 070E                           u1431 0300  
                         u2127 007C                           u1191 04B2                           u1088 10B4  
                         u1360 07B6                           u2217 088C                           u1361 07B2  
                         u1281 0720                           u1441 034C                           u2137 00B0  
                         u1370 07CC                           u2227 08BA                           u1371 07C8  
                         u1291 0732                           u2147 06BC                           u1451 035E  
                         u1380 07DE                           u2157 09FA                           u1381 07DA  
                         u1461 0370                           u1470 039C                           u1390 00FA  
                         u1710 09A8                           u2167 0A2E                           u1471 0398  
                         u1391 00F6                           u2087 0CC4                           u1711 09A4  
                         u1480 03C6                           u2177 0A62                           u1481 03C2  
                         u2097 0B48                           u1490 0BC6                           _T2PR 000FBC  
                   _Black_rule 01D0                           u2187 07F6                           u1491 0BC0  
                         u2197 0828                           u1590 0CE8                           u1591 0CE4  
                         _main 0918                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 005F  
                         _stop 10CA                           prodh 000FF4                           prodl 000FF3  
                         start 002E         __end_of_color_read_Red 0F54                __end_of_HighISR 002E  
                 ___param_bank 000000             _get_color_code$460 00D4             _get_color_code$458 00CC  
           _get_color_code$459 00D0                          ?_main 0001                __end_of___lldiv 0B32  
                        ?_stop 0014                    _Black_setup 004B                __end_of___lwdiv 0DE8  
                        i2l355 002A                          i2l269 120A                          _TMR0H 000FD4  
                        _TMR0L 000FD3            ___lmul@multiplicand 0005     __end_of_I2C_2_Master_Start 11FC  
   __end_of_I2C_2_Master_Write 11DC             _get_color_distance 053C                          _index 005B  
                        tablat 000FF5                          plusw0 000FEB                          plusw1 000FE3  
                        plusw2 000FDB            ?_get_color_distance 0007                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                          status 000FD8  
                        wtemp8 0060                     _Green_rule 00A8        __end_of_color_read_Blue 1044  
        _I2C_2_Master_RepStart 11FC                ?_color_read_Red 0005                __initialization 0CEA  
                 __end_of_main 09E4                   __end_of_stop 10FC           ??_get_color_distance 001F  
                       ??_main 0039                         ??_stop 0018                  __activetblptr 000000  
          _get_color_code$2465 00C0                   ?_setMotorPWM 000E                   ?_moveForward 0014  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RD6PPS 000E70                         _RE4PPS 000E76  
                       i2l1751 001A                         i2l1753 001E                         i2l1755 0022  
                       i2l1669 1206                         i2l1757 0026                         i2l1749 000A  
                       _RG6PPS 000E88                      ??_HighISR 0001       __end_of_color_click_init 07E0  
             ??_get_color_code 0037                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                       ___lmul 0DE8       get_color_distance@color1 0007       get_color_distance@color2 0013  
                       ___wmul 114E                      ??___lldiv 0015                      ??___lwdiv 000B  
                  _Color_rules 0100                         clear_0 0D50                         clear_1 0D5C  
                       isa$std 000001               __end_of_moveBack 0CEA          calibrate_black@clear1 0010  
        calibrate_black@clear2 0012                   __pdataCOMRAM 004B                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                 _Lightblue_rule 006C  
                   _White_rule 01DC                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003          __end_of_set_led_color 1088                     __accesstop 0060  
      __end_of__initialization 0D6A       __end_of_color_read_Clear 0FF4        get_wall_presence@clear1 0010  
      get_wall_presence@clear2 0012       __end_of_color_read_Green 0FA4         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0005                _Interrupts_init 11DC  
               __pcstackCOMRAM 0001                   __pidataBANK0 0E52                   __pidataBANK1 11C4  
          __end_of_Timer0_init 11B4                     __pbssBANK0 00EC                     __pbssBANK1 0100  
            _color_writetoaddr 1174                   _T2CLKCONbits 000FBF             ?_color_writetoaddr 0003  
                      ?___lmul 0001                        ?___wmul 0001                 ___lmul@product 0009  
              get_color_code@i 00DE            ??_color_writetoaddr 0004        get_color_code@min_index 00DA  
                      i2u67_40 001A                        i2u67_41 0016                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        get_color_code@min_value 00D8              _get_wall_presence 0B32  
                  _Orange_rule 0078             ?_get_wall_presence 000C        __end_of_Interrupts_init 11E8  
       color_writetoaddr@value 0003               ??_color_read_Red 0007                        _HighISR 0008  
    __end_of_color_writetoaddr 1194             _I2C_2_Master_Start 11F2             _I2C_2_Master_Write 11D0  
                    ?_moveBack 0014                        __Hparam 0000            ??_get_wall_presence 000E  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 1194  
                      ___lldiv 0A8E            ?_I2C_2_Master_Start 0001                        ___lwdiv 0D74  
          ?_I2C_2_Master_Write 0001                        __pcinit 0CEA                        __ramtop 0E00  
                      __ptext0 0918                        __ptext1 10CA                        __ptext2 0EB2  
                      __ptext3 0C5E                        __ptext4 03D0                        __ptext5 0BCE  
                      __ptext6 0B32                        __ptext7 0032                        __ptext8 053C  
                      __ptext9 114E                      _T2CONbits 000FBD                        _seconds 005D  
                    _T2HLTbits 000FBE      __end_of_get_wall_presence 0BCE           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 0D6A              ?_color_click_init 0001  
                   ??_moveBack 001A                ___lldiv@divisor 0011             ??_color_click_init 0016  
              ___lldiv@counter 0019                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                    _White_setup 0060  
              _initDCmotorsPWM 0BCE                     _timer_list 016C                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013                    _Yellow_rule 0090                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
         _calibrate_black$2466 0014       color_writetoaddr@address 0004     get_color_distance@B_offset 0033  
      ??_I2C_2_Master_RepStart 0002                  moveForward@mL 0014                  moveForward@mR 0016  
             ?_Interrupts_init 0001                    _CCP1CONbits 000FAB     get_color_distance@G_offset 0031  
            _increment_seconds 1206              ?_color_read_Clear 0005                    _CCP2CONbits 000FA7  
            ??_calibrate_black 000E              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  _CCP4CONbits 000F22                     main@motorL 0039                     main@motorR 0042  
            ??_calibrate_white 000C             ?_increment_seconds 0001             ??_color_read_Clear 0007  
           ??_color_read_Green 0007     get_color_distance@R_offset 002F                      _Blue_rule 009C  
          ??_increment_seconds 0001                 __end_of___lmul 0E52                 __end_of___wmul 1174  
                __pidataCOMRAM 11B4            color_read_Clear@tmp 000A            start_initialization 0CEA  
    __end_of_increment_seconds 120C                      _Pink_rule 0084            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 0C5E                       ??___lmul 0009                       ??___wmul 0005  
                  __pdataBANK0 0060                    __pdataBANK1 01DC         _get_color_distance$421 002B  
       _get_color_distance$417 0023         _get_color_distance$419 0027                    __pbssCOMRAM 005B  
                __pcstackBANK0 00C0            get_color_code@value 00DC                       ?_HighISR 0001  
             ___lwdiv@dividend 0007                   ?_Timer0_init 0001                     moveBack@mL 0014  
                   moveBack@mR 0016                      __pintcode 0008                       ?___lldiv 000D  
                     ?___lwdiv 0007                   moveBack@time 0018           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004    get_color_code@NormalizedRGB 00E0              _I2C_2_Master_Idle 1126  
            _I2C_2_Master_Init 10FC              _I2C_2_Master_Read 1088              _I2C_2_Master_Stop 11E8  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010                  ??_moveForward 0018             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79                  _set_led_color 1044            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 000F7B                       _LATEbits 000F7D                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _PIE0bits 000E29                       _PIE2bits 000E2B  
                     _PIR0bits 000E33               ?_initDCmotorsPWM 0001                      _wall_coef 0059  
                    _wait_time 0057                       _SSP2CON2 000EDA                       _SSP2STAT 000ED8  
           set_led_color@color 0001      __end_of_I2C_2_Master_Idle 114E      __end_of_I2C_2_Master_Init 1126  
    __end_of_I2C_2_Master_Read 10CA              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 11F2  
                 setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007  
              _calibrate_black 07E0                _calibrate_white 09E4              ___lmul@multiplier 0001  
                    copy_data0 0CFE                      copy_data1 0D1E                      copy_data2 0D3E  
               ?_set_led_color 0001  __end_of_I2C_2_Master_RepStart 1206             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 053C            __end_of_moveForward 0F04                       _Red_rule 00B4  
                     __Hrparam 0000                       __Lrparam 0000     __end_of_get_color_distance 06A8  
               _get_color_code 0032                     _ANSELDbits 000EA7                     _ANSELFbits 000EB4  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                ___lwdiv@divisor 0009  
              ___lwdiv@counter 000D                       __ptext10 0DE8                       __ptext11 0A8E  
                     __ptext20 0FF4                       __ptext12 06A8                       __ptext21 11D0  
                     __ptext13 1174                       __ptext30 11DC                       __ptext22 11E8  
                     __ptext14 09E4                       __ptext23 11F2                       __ptext15 07E0  
                     __ptext32 1206                       __ptext24 11FC                       __ptext16 1044  
                     __ptext25 1088                       __ptext17 0F04                       __ptext26 1126  
                     __ptext18 0F54                       __ptext27 0D74                       __ptext19 0FA4  
                     __ptext28 10FC                       __ptext29 1194                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       _moveBack 0C5E                       isa$xinst 000000  
                     int$flags 005F         __end_of_get_color_code 03D0        __end_of_calibrate_black 0918  
      __end_of_calibrate_white 0A8E                     _INTCONbits 000FF2                    _setMotorPWM 03D0  
                  _moveForward 0EB2                ??_set_led_color 0003                       intlevel2 0000  
             ___lldiv@dividend 000D                ?_get_color_code 0035               _color_click_init 06A8  
                   _SSP2DATPPS 000E1D               ___lldiv@quotient 0015                     _SSP2CLKPPS 000E1C  
