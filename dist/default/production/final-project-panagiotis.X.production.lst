

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 01 10:33:13 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Version 2.35
    42                           ; Generated 05/05/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F67K40 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000000                     
    77                           	psect	idataCOMRAM
    78   000584                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for _Black_setup
    82   000584  0404               	dw	1028
    83   000586  0000               	dw	0
    84   000588  024B               	dw	587
    85   00058A  0000               	dw	0
    86   00058C  00A1               	dw	161
    87   00058E  0000               	dw	0
    88                           
    89                           ;initializer for _White_setup
    90   000590  28FC               	dw	10492
    91   000592  0000               	dw	0
    92   000594  1B55               	dw	6997
    93   000596  0000               	dw	0
    94   000598  0770               	dw	1904
    95   00059A  0000               	dw	0
    96                           
    97                           ;initializer for _Green_rule
    98   00059C  0019               	dw	25
    99   00059E  0000               	dw	0
   100   0005A0  0036               	dw	54
   101   0005A2  0000               	dw	0
   102   0005A4  0008               	dw	8
   103   0005A6  0000               	dw	0
   104                           
   105                           ;initializer for _Red_rule
   106   0005A8  0048               	dw	72
   107   0005AA  0000               	dw	0
   108   0005AC  0002               	dw	2
   109   0005AE  0000               	dw	0
   110   0005B0  0002               	dw	2
   111   0005B2  0000               	dw	0
   112                           
   113                           ;initializer for _wait_time
   114   0005B4  01F4               	dw	500
   115                           
   116                           	psect	idataBANK0
   117   00046E                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for _White_rule
   121   00046E  0064               	dw	100
   122   000470  0000               	dw	0
   123   000472  0064               	dw	100
   124   000474  0000               	dw	0
   125   000476  0064               	dw	100
   126   000478  0000               	dw	0
   127                           
   128                           ;initializer for _Lightblue_rule
   129   00047A  0026               	dw	38
   130   00047C  0000               	dw	0
   131   00047E  0048               	dw	72
   132   000480  0000               	dw	0
   133   000482  0054               	dw	84
   134   000484  0000               	dw	0
   135                           
   136                           ;initializer for _Orange_rule
   137   000486  005C               	dw	92
   138   000488  0000               	dw	0
   139   00048A  0027               	dw	39
   140   00048C  0000               	dw	0
   141   00048E  001C               	dw	28
   142   000490  0000               	dw	0
   143                           
   144                           ;initializer for _Pink_rule
   145   000492  004D               	dw	77
   146   000494  0000               	dw	0
   147   000496  003C               	dw	60
   148   000498  0000               	dw	0
   149   00049A  0040               	dw	64
   150   00049C  0000               	dw	0
   151                           
   152                           ;initializer for _Yellow_rule
   153   00049E  005D               	dw	93
   154   0004A0  0000               	dw	0
   155   0004A2  004C               	dw	76
   156   0004A4  0000               	dw	0
   157   0004A6  0014               	dw	20
   158   0004A8  0000               	dw	0
   159                           
   160                           ;initializer for _Blue_rule
   161   0004AA  0003               	dw	3
   162   0004AC  0000               	dw	0
   163   0004AE  0009               	dw	9
   164   0004B0  0000               	dw	0
   165   0004B2  0024               	dw	36
   166   0004B4  0000               	dw	0
   167   000000                     _T0CON0bits	set	4053
   168   000000                     _T0CON1bits	set	4054
   169   000000                     _TRISDbits	set	3972
   170   000000                     _SSP2CON2bits	set	3802
   171   000000                     _SSP2CLKPPS	set	3612
   172   000000                     _SSP2DATPPS	set	3613
   173   000000                     _RC7PPS	set	3689
   174   000000                     _RE2PPS	set	3700
   175   000000                     _ANSELFbits	set	3764
   176   000000                     _TRISAbits	set	3969
   177   000000                     _TRISFbits	set	3974
   178   000000                     _PORTFbits	set	3982
   179   000000                     _TRISGbits	set	3975
   180   000000                     _TRISCbits	set	3971
   181   000000                     _TRISEbits	set	3973
   182   000000                     _SSP2BUF	set	3797
   183   000000                     _SSP2ADD	set	3798
   184   000000                     _SSP2CON1bits	set	3801
   185   000000                     _CCPR4H	set	3873
   186   000000                     _CCPR3H	set	3877
   187   000000                     _LATAbits	set	3961
   188   000000                     _LATGbits	set	3967
   189   000000                     _CCPR2H	set	4006
   190   000000                     _CCPR1H	set	4010
   191   000000                     _T2PR	set	4028
   192   000000                     _T2CONbits	set	4029
   193   000000                     _LATCbits	set	3963
   194   000000                     _LATEbits	set	3965
   195   000000                     _LATFbits	set	3966
   196   000000                     _RE4PPS	set	3702
   197   000000                     _RG6PPS	set	3720
   198   000000                     _RD5PPS	set	3695
   199   000000                     _ANSELDbits	set	3751
   200   000000                     _TMR0L	set	4051
   201   000000                     _TMR0H	set	4052
   202   000000                     _INTCONbits	set	4082
   203   000000                     _T2CLKCONbits	set	4031
   204   000000                     _T2HLTbits	set	4030
   205   000000                     _CCP1CONbits	set	4011
   206   000000                     _CCPTMRS0bits	set	4013
   207   000000                     _CCP2CONbits	set	4007
   208   000000                     _CCP3CONbits	set	3878
   209   000000                     _CCP4CONbits	set	3874
   210   000000                     _SSP2CON2	set	3802
   211   000000                     _SSP2STAT	set	3800
   212   000000                     _PIE0bits	set	3625
   213   000000                     _RD6PPS	set	3696
   214   000000                     _PIE2bits	set	3627
   215   000000                     _PIR0bits	set	3635
   216                           
   217                           ; #config settings
   218                           
   219                           	psect	cinit
   220   0002BE                     __pcinit:
   221                           	callstack 0
   222   0002BE                     start_initialization:
   223                           	callstack 0
   224   0002BE                     __initialization:
   225                           	callstack 0
   226                           
   227                           ; Initialize objects allocated to BANK0 (72 bytes)
   228                           ; load TBLPTR registers with __pidataBANK0
   229   0002BE  0E6E               	movlw	low __pidataBANK0
   230   0002C0  6EF6               	movwf	tblptrl,c
   231   0002C2  0E04               	movlw	high __pidataBANK0
   232   0002C4  6EF7               	movwf	tblptrh,c
   233   0002C6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   234   0002C8  6EF8               	movwf	tblptru,c
   235   0002CA  EE00  F060         	lfsr	0,__pdataBANK0
   236   0002CE  EE10 F048          	lfsr	1,72
   237   0002D2                     copy_data0:
   238   0002D2  0009               	tblrd		*+
   239   0002D4  CFF5 FFEE          	movff	tablat,postinc0
   240   0002D8  50E5               	movf	postdec1,w,c
   241   0002DA  50E1               	movf	fsr1l,w,c
   242   0002DC  E1FA               	bnz	copy_data0
   243                           
   244                           ; Initialize objects allocated to COMRAM (50 bytes)
   245                           ; load TBLPTR registers with __pidataCOMRAM
   246   0002DE  0E84               	movlw	low __pidataCOMRAM
   247   0002E0  6EF6               	movwf	tblptrl,c
   248   0002E2  0E05               	movlw	high __pidataCOMRAM
   249   0002E4  6EF7               	movwf	tblptrh,c
   250   0002E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   251   0002E8  6EF8               	movwf	tblptru,c
   252   0002EA  EE00  F001         	lfsr	0,__pdataCOMRAM
   253   0002EE  EE10 F032          	lfsr	1,50
   254   0002F2                     copy_data1:
   255   0002F2  0009               	tblrd		*+
   256   0002F4  CFF5 FFEE          	movff	tablat,postinc0
   257   0002F8  50E5               	movf	postdec1,w,c
   258   0002FA  50E1               	movf	fsr1l,w,c
   259   0002FC  E1FA               	bnz	copy_data1
   260                           
   261                           ; Clear objects allocated to BANK1 (108 bytes)
   262   0002FE  EE01  F000         	lfsr	0,__pbssBANK1
   263   000302  0E6C               	movlw	108
   264   000304                     clear_0:
   265   000304  6AEE               	clrf	postinc0,c
   266   000306  06E8               	decf	wreg,f,c
   267   000308  E1FD               	bnz	clear_0
   268                           
   269                           ; Clear objects allocated to BANK0 (12 bytes)
   270   00030A  EE00  F0A8         	lfsr	0,__pbssBANK0
   271   00030E  0E0C               	movlw	12
   272   000310                     clear_1:
   273   000310  6AEE               	clrf	postinc0,c
   274   000312  06E8               	decf	wreg,f,c
   275   000314  E1FD               	bnz	clear_1
   276                           
   277                           ; Clear objects allocated to COMRAM (14 bytes)
   278   000316  EE00  F050         	lfsr	0,__pbssCOMRAM
   279   00031A  0E0E               	movlw	14
   280   00031C                     clear_2:
   281   00031C  6AEE               	clrf	postinc0,c
   282   00031E  06E8               	decf	wreg,f,c
   283   000320  E1FD               	bnz	clear_2
   284   000322                     end_of_initialization:
   285                           	callstack 0
   286   000322                     __end_of__initialization:
   287                           	callstack 0
   288   000322  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   289   000324  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   290   000326  0100               	movlb	0
   291   000328  EF5B  F002         	goto	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMRAM
   294   000050                     __pbssCOMRAM:
   295                           	callstack 0
   296   000050                     _RGB:
   297                           	callstack 0
   298   000050                     	ds	12
   299   00005C                     _seconds:
   300                           	callstack 0
   301   00005C                     	ds	2
   302                           
   303                           	psect	dataCOMRAM
   304   000001                     __pdataCOMRAM:
   305                           	callstack 0
   306   000001                     _Black_setup:
   307                           	callstack 0
   308   000001                     	ds	12
   309   00000D                     _White_setup:
   310                           	callstack 0
   311   00000D                     	ds	12
   312   000019                     _Green_rule:
   313                           	callstack 0
   314   000019                     	ds	12
   315   000025                     _Red_rule:
   316                           	callstack 0
   317   000025                     	ds	12
   318   000031                     _wait_time:
   319                           	callstack 0
   320   000031                     	ds	2
   321                           
   322                           	psect	bssBANK0
   323   0000A8                     __pbssBANK0:
   324                           	callstack 0
   325   0000A8                     _Black_rule:
   326                           	callstack 0
   327   0000A8                     	ds	12
   328                           
   329                           	psect	dataBANK0
   330   000060                     __pdataBANK0:
   331                           	callstack 0
   332   000060                     _White_rule:
   333                           	callstack 0
   334   000060                     	ds	12
   335   00006C                     _Lightblue_rule:
   336                           	callstack 0
   337   00006C                     	ds	12
   338   000078                     _Orange_rule:
   339                           	callstack 0
   340   000078                     	ds	12
   341   000084                     _Pink_rule:
   342                           	callstack 0
   343   000084                     	ds	12
   344   000090                     _Yellow_rule:
   345                           	callstack 0
   346   000090                     	ds	12
   347   00009C                     _Blue_rule:
   348                           	callstack 0
   349   00009C                     	ds	12
   350                           
   351                           	psect	bssBANK1
   352   000100                     __pbssBANK1:
   353                           	callstack 0
   354   000100                     _Color_rules:
   355                           	callstack 0
   356   000100                     	ds	108
   357                           
   358                           	psect	cstackCOMRAM
   359   000033                     __pcstackCOMRAM:
   360                           	callstack 0
   361   000033                     ??_I2C_2_Master_Idle:
   362   000033                     set_led_color@color:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x0
   366   000033                     	ds	1
   367   000034                     ??_I2C_2_Master_Read:
   368   000034                     I2C_2_Master_Write@data_byte:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x1
   372   000034                     	ds	1
   373   000035                     color_writetoaddr@value:
   374                           	callstack 0
   375   000035                     I2C_2_Master_Read@ack:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x2
   379   000035                     	ds	1
   380   000036                     color_writetoaddr@address:
   381                           	callstack 0
   382   000036                     I2C_2_Master_Read@tmp:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x3
   386   000036                     	ds	1
   387   000037                     ?_color_read_Red:
   388                           	callstack 0
   389   000037                     ?_color_read_Blue:
   390                           	callstack 0
   391   000037                     ?_color_read_Green:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x4
   395   000037                     	ds	2
   396   000039                     ??_color_read_Red:
   397   000039                     ??_color_read_Blue:
   398   000039                     ??_color_read_Green:
   399                           
   400                           ; 1 bytes @ 0x6
   401   000039                     	ds	3
   402   00003C                     color_read_Red@tmp:
   403                           	callstack 0
   404   00003C                     color_read_Blue@tmp:
   405                           	callstack 0
   406   00003C                     color_read_Green@tmp:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x9
   410   00003C                     	ds	2
   411   00003E                     ??_calibrate_white:
   412   00003E                     ??_calibrate_black:
   413   00003E                     ?_get_wall_presence:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0xB
   417   00003E                     	ds	2
   418   000040                     ??_color_click_init:
   419   000040                     get_wall_presence@wall_RGB:
   420                           	callstack 0
   421                           
   422                           ; 12 bytes @ 0xD
   423   000040                     	ds	12
   424   00004C                     ??_main:
   425                           
   426                           ; 1 bytes @ 0x19
   427   00004C                     	ds	2
   428   00004E                     main@color_code:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x1B
   432   00004E                     	ds	2
   433                           
   434 ;;
   435 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   436 ;;
   437 ;; *************** function _main *****************
   438 ;; Defined at:
   439 ;;		line 18 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  color_code      2   27[COMRAM] unsigned int 
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   456 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   457 ;;Total ram usage:        4 bytes
   458 ;; Hardware stack levels required when called: 7
   459 ;; This function calls:
   460 ;;		_Interrupts_init
   461 ;;		_Timer0_init
   462 ;;		_color_click_init
   463 ;;		_get_wall_presence
   464 ;;		_set_led_color
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           	psect	text0
   471   0004B6                     __ptext0:
   472                           	callstack 0
   473   0004B6                     _main:
   474                           	callstack 24
   475   0004B6                     
   476                           ;main.c: 19:     Timer0_init();
   477   0004B6  EC14  F003         	call	_Timer0_init	;wreg free
   478   0004BA                     
   479                           ;main.c: 20:     Interrupts_init();
   480   0004BA  EC2A  F003         	call	_Interrupts_init	;wreg free
   481   0004BE                     
   482                           ;main.c: 21:     color_click_init();
   483   0004BE  EC19  F000         	call	_color_click_init	;wreg free
   484   0004C2                     l2000:
   485                           
   486                           ;main.c: 43:         set_led_color(0b111);
   487   0004C2  0E00               	movlw	0
   488   0004C4  6E34               	movwf	(set_led_color@color+1)^0,c
   489   0004C6  0E07               	movlw	7
   490   0004C8  6E33               	movwf	set_led_color@color^0,c
   491   0004CA  EC7F  F002         	call	_set_led_color	;wreg free
   492   0004CE                     
   493                           ;main.c: 44:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   494   0004CE  0E52               	movlw	82
   495   0004D0  6E4D               	movwf	(??_main+1)^0,c
   496   0004D2  0E2B               	movlw	43
   497   0004D4  6E4C               	movwf	??_main^0,c
   498   0004D6  0E00               	movlw	0
   499   0004D8                     u1637:
   500   0004D8  2EE8               	decfsz	wreg,f,c
   501   0004DA  D7FE               	bra	u1637
   502   0004DC  2E4C               	decfsz	??_main^0,f,c
   503   0004DE  D7FC               	bra	u1637
   504   0004E0  2E4D               	decfsz	(??_main+1)^0,f,c
   505   0004E2  D7FA               	bra	u1637
   506   0004E4  D000               	nop2	
   507   0004E6                     
   508                           ;main.c: 45:         unsigned int color_code = get_wall_presence();
   509   0004E6  EC96  F001         	call	_get_wall_presence	;wreg free
   510   0004EA  C03E  F04E         	movff	?_get_wall_presence,main@color_code
   511   0004EE  C03F  F04F         	movff	?_get_wall_presence+1,main@color_code+1
   512   0004F2                     
   513                           ;main.c: 46:         color_code += 1;
   514   0004F2  4A4E               	infsnz	main@color_code^0,f,c
   515   0004F4  2A4F               	incf	(main@color_code+1)^0,f,c
   516   0004F6  EF61  F002         	goto	l2000
   517   0004FA  EF17  F000         	goto	start
   518   0004FE                     __end_of_main:
   519                           	callstack 0
   520                           
   521 ;; *************** function _get_wall_presence *****************
   522 ;; Defined at:
   523 ;;		line 233 in file "color.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  wall_RGB       12   13[COMRAM] struct RGB_val
   528 ;; Return value:  Size  Location     Type
   529 ;;                  2   11[COMRAM] unsigned int 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   538 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   540 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   541 ;;Total ram usage:       14 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; Hardware stack levels required when called: 5
   544 ;; This function calls:
   545 ;;		_color_read_Blue
   546 ;;		_color_read_Green
   547 ;;		_color_read_Red
   548 ;;		_set_led_color
   549 ;; This function is called by:
   550 ;;		_main
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text1
   555   00032C                     __ptext1:
   556                           	callstack 0
   557   00032C                     _get_wall_presence:
   558                           	callstack 25
   559   00032C                     
   560                           ;color.c: 234:     struct RGB_val wall_RGB;;color.c: 235:     wall_RGB.R = color_read_Re
      +                          d();
   561   00032C  ECBF  F001         	call	_color_read_Red	;wreg free
   562   000330  C037  F040         	movff	?_color_read_Red,get_wall_presence@wall_RGB
   563   000334  C038  F041         	movff	?_color_read_Red+1,get_wall_presence@wall_RGB+1
   564   000338  6A42               	clrf	(get_wall_presence@wall_RGB+2)^0,c
   565   00033A  6A43               	clrf	(get_wall_presence@wall_RGB+3)^0,c
   566                           
   567                           ;color.c: 236:     wall_RGB.G = color_read_Green();
   568   00033C  ECE7  F001         	call	_color_read_Green	;wreg free
   569   000340  C037  F044         	movff	?_color_read_Green,get_wall_presence@wall_RGB+4
   570   000344  C038  F045         	movff	?_color_read_Green+1,get_wall_presence@wall_RGB+5
   571   000348  6A46               	clrf	(get_wall_presence@wall_RGB+6)^0,c
   572   00034A  6A47               	clrf	(get_wall_presence@wall_RGB+7)^0,c
   573                           
   574                           ;color.c: 237:     wall_RGB.B = color_read_Blue();
   575   00034C  EC0F  F002         	call	_color_read_Blue	;wreg free
   576   000350  C037  F048         	movff	?_color_read_Blue,get_wall_presence@wall_RGB+8
   577   000354  C038  F049         	movff	?_color_read_Blue+1,get_wall_presence@wall_RGB+9
   578   000358  6A4A               	clrf	(get_wall_presence@wall_RGB+10)^0,c
   579   00035A  6A4B               	clrf	(get_wall_presence@wall_RGB+11)^0,c
   580   00035C                     
   581                           ;color.c: 239:     set_led_color(0b000);
   582   00035C  0E00               	movlw	0
   583   00035E  6E34               	movwf	(set_led_color@color+1)^0,c
   584   000360  0E00               	movlw	0
   585   000362  6E33               	movwf	set_led_color@color^0,c
   586   000364  EC7F  F002         	call	_set_led_color	;wreg free
   587   000368                     
   588                           ;color.c: 240:     wall_RGB.R += 1;
   589   000368  0E01               	movlw	1
   590   00036A  2640               	addwf	get_wall_presence@wall_RGB^0,f,c
   591   00036C  0E00               	movlw	0
   592   00036E  2241               	addwfc	(get_wall_presence@wall_RGB+1)^0,f,c
   593   000370  2242               	addwfc	(get_wall_presence@wall_RGB+2)^0,f,c
   594   000372  2243               	addwfc	(get_wall_presence@wall_RGB+3)^0,f,c
   595                           
   596                           ;color.c: 241:     return 1;
   597   000374  0E00               	movlw	0
   598   000376  6E3F               	movwf	(?_get_wall_presence+1)^0,c
   599   000378  0E01               	movlw	1
   600   00037A  6E3E               	movwf	?_get_wall_presence^0,c
   601   00037C  0012               	return		;funcret
   602   00037E                     __end_of_get_wall_presence:
   603                           	callstack 0
   604                           
   605 ;; *************** function _color_click_init *****************
   606 ;; Defined at:
   607 ;;		line 28 in file "color.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   623 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   625 ;;Total ram usage:        1 bytes
   626 ;; Hardware stack levels used: 1
   627 ;; Hardware stack levels required when called: 6
   628 ;; This function calls:
   629 ;;		_I2C_2_Master_Init
   630 ;;		_calibrate_black
   631 ;;		_calibrate_white
   632 ;;		_color_writetoaddr
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text2
   639   000032                     __ptext2:
   640                           	callstack 0
   641   000032                     _color_click_init:
   642                           	callstack 24
   643   000032                     
   644                           ;color.c: 31:     I2C_2_Master_Init();
   645   000032  ECDB  F002         	call	_I2C_2_Master_Init	;wreg free
   646   000036                     
   647                           ;color.c: 34:   color_writetoaddr(0x00, 0x01);
   648   000036  0E01               	movlw	1
   649   000038  6E35               	movwf	color_writetoaddr@value^0,c
   650   00003A  0E00               	movlw	0
   651   00003C  EC04  F003         	call	_color_writetoaddr
   652   000040                     
   653                           ;color.c: 35:     _delay((unsigned long)((3)*(64000000/4000.0)));
   654   000040  0E3F               	movlw	63
   655   000042  6E40               	movwf	??_color_click_init^0,c
   656   000044  0E55               	movlw	85
   657   000046                     u1647:
   658   000046  2EE8               	decfsz	wreg,f,c
   659   000048  D7FE               	bra	u1647
   660   00004A  2E40               	decfsz	??_color_click_init^0,f,c
   661   00004C  D7FC               	bra	u1647
   662   00004E  F000               	nop	
   663   000050                     
   664                           ;color.c: 38:  color_writetoaddr(0x00, 0x03);
   665   000050  0E03               	movlw	3
   666   000052  6E35               	movwf	color_writetoaddr@value^0,c
   667   000054  0E00               	movlw	0
   668   000056  EC04  F003         	call	_color_writetoaddr
   669   00005A                     
   670                           ;color.c: 41:  color_writetoaddr(0x01, 0xD5);
   671   00005A  0ED5               	movlw	213
   672   00005C  6E35               	movwf	color_writetoaddr@value^0,c
   673   00005E  0E01               	movlw	1
   674   000060  EC04  F003         	call	_color_writetoaddr
   675   000064                     
   676                           ;color.c: 43:     TRISFbits.TRISF7 = 0;
   677   000064  9E86               	bcf	134,7,c	;volatile
   678   000066                     
   679                           ;color.c: 44:     TRISGbits.TRISG1 = 0;
   680   000066  9287               	bcf	135,1,c	;volatile
   681   000068                     
   682                           ;color.c: 45:     TRISAbits.TRISA4 = 0;
   683   000068  9881               	bcf	129,4,c	;volatile
   684   00006A                     
   685                           ;color.c: 47:     Color_rules[0] = Red_rule;
   686   00006A  EE20  F025         	lfsr	2,_Red_rule
   687   00006E  EE11  F000         	lfsr	1,_Color_rules
   688   000072  0E0B               	movlw	11
   689   000074                     u871:
   690   000074  CFDB FFE3          	movff	plusw2,plusw1
   691   000078  06E8               	decf	wreg,f,c
   692   00007A  E2FC               	bc	u871
   693   00007C                     
   694                           ;color.c: 48:     Color_rules[1] = Green_rule;
   695   00007C  EE20  F019         	lfsr	2,_Green_rule
   696   000080  EE11  F00C         	lfsr	1,_Color_rules+12
   697   000084  0E0B               	movlw	11
   698   000086                     u881:
   699   000086  CFDB FFE3          	movff	plusw2,plusw1
   700   00008A  06E8               	decf	wreg,f,c
   701   00008C  E2FC               	bc	u881
   702   00008E                     
   703                           ;color.c: 49:     Color_rules[2] = Blue_rule;
   704   00008E  EE20  F09C         	lfsr	2,_Blue_rule
   705   000092  EE11  F018         	lfsr	1,_Color_rules+24
   706   000096  0E0B               	movlw	11
   707   000098                     u891:
   708   000098  CFDB FFE3          	movff	plusw2,plusw1
   709   00009C  06E8               	decf	wreg,f,c
   710   00009E  E2FC               	bc	u891
   711   0000A0                     
   712                           ;color.c: 50:     Color_rules[3] = Yellow_rule;
   713   0000A0  EE20  F090         	lfsr	2,_Yellow_rule
   714   0000A4  EE11  F024         	lfsr	1,_Color_rules+36
   715   0000A8  0E0B               	movlw	11
   716   0000AA                     u901:
   717   0000AA  CFDB FFE3          	movff	plusw2,plusw1
   718   0000AE  06E8               	decf	wreg,f,c
   719   0000B0  E2FC               	bc	u901
   720   0000B2                     
   721                           ;color.c: 51:     Color_rules[4] = Pink_rule;
   722   0000B2  EE20  F084         	lfsr	2,_Pink_rule
   723   0000B6  EE11  F030         	lfsr	1,_Color_rules+48
   724   0000BA  0E0B               	movlw	11
   725   0000BC                     u911:
   726   0000BC  CFDB FFE3          	movff	plusw2,plusw1
   727   0000C0  06E8               	decf	wreg,f,c
   728   0000C2  E2FC               	bc	u911
   729   0000C4                     
   730                           ;color.c: 52:     Color_rules[5] = Orange_rule;
   731   0000C4  EE20  F078         	lfsr	2,_Orange_rule
   732   0000C8  EE11  F03C         	lfsr	1,_Color_rules+60
   733   0000CC  0E0B               	movlw	11
   734   0000CE                     u921:
   735   0000CE  CFDB FFE3          	movff	plusw2,plusw1
   736   0000D2  06E8               	decf	wreg,f,c
   737   0000D4  E2FC               	bc	u921
   738   0000D6                     
   739                           ;color.c: 53:     Color_rules[6] = Lightblue_rule;
   740   0000D6  EE20  F06C         	lfsr	2,_Lightblue_rule
   741   0000DA  EE11  F048         	lfsr	1,_Color_rules+72
   742   0000DE  0E0B               	movlw	11
   743   0000E0                     u931:
   744   0000E0  CFDB FFE3          	movff	plusw2,plusw1
   745   0000E4  06E8               	decf	wreg,f,c
   746   0000E6  E2FC               	bc	u931
   747   0000E8                     
   748                           ;color.c: 54:     Color_rules[7] = White_rule;
   749   0000E8  EE20  F060         	lfsr	2,_White_rule
   750   0000EC  EE11  F054         	lfsr	1,_Color_rules+84
   751   0000F0  0E0B               	movlw	11
   752   0000F2                     u941:
   753   0000F2  CFDB FFE3          	movff	plusw2,plusw1
   754   0000F6  06E8               	decf	wreg,f,c
   755   0000F8  E2FC               	bc	u941
   756   0000FA                     
   757                           ;color.c: 55:     Color_rules[8] = Black_rule;
   758   0000FA  EE20  F0A8         	lfsr	2,_Black_rule
   759   0000FE  EE11  F060         	lfsr	1,_Color_rules+96
   760   000102  0E0B               	movlw	11
   761   000104                     u951:
   762   000104  CFDB FFE3          	movff	plusw2,plusw1
   763   000108  06E8               	decf	wreg,f,c
   764   00010A  E2FC               	bc	u951
   765   00010C                     
   766                           ;color.c: 64:     TRISFbits.TRISF3=1;
   767   00010C  8686               	bsf	134,3,c	;volatile
   768   00010E                     
   769                           ;color.c: 65:     ANSELFbits.ANSELF3=0;
   770   00010E  010E               	movlb	14	; () banked
   771   000110  97B4               	bcf	180,3,b	;volatile
   772   000112                     
   773                           ; BSR set to: 14
   774                           ;color.c: 66:     TRISFbits.TRISF2=1;
   775   000112  8486               	bsf	134,2,c	;volatile
   776   000114                     
   777                           ; BSR set to: 14
   778                           ;color.c: 67:     ANSELFbits.ANSELF2=0;
   779   000114  95B4               	bcf	180,2,b	;volatile
   780   000116                     l65:
   781   000116  A68E               	btfss	142,3,c	;volatile
   782   000118  EF90  F000         	goto	u961
   783   00011C  EF92  F000         	goto	u960
   784   000120                     u961:
   785   000120  EF99  F000         	goto	l69
   786   000124                     u960:
   787   000124  B48E               	btfsc	142,2,c	;volatile
   788   000126  EF97  F000         	goto	u971
   789   00012A  EF99  F000         	goto	u970
   790   00012E                     u971:
   791   00012E  EF8B  F000         	goto	l65
   792   000132                     u970:
   793   000132                     l69:
   794                           
   795                           ;color.c: 70:     if(!PORTFbits.RF2){
   796   000132  B48E               	btfsc	142,2,c	;volatile
   797   000134  EF9E  F000         	goto	u981
   798   000138  EFA0  F000         	goto	u980
   799   00013C                     u981:
   800   00013C  EFA2  F000         	goto	l1794
   801   000140                     u980:
   802   000140  EFB4  F000         	goto	l71
   803   000144                     l1794:
   804                           
   805                           ;color.c: 73:     calibrate_white();
   806   000144  ECB5  F000         	call	_calibrate_white	;wreg free
   807   000148                     l72:
   808   000148  B68E               	btfsc	142,3,c	;volatile
   809   00014A  EFA9  F000         	goto	u991
   810   00014E  EFAB  F000         	goto	u990
   811   000152                     u991:
   812   000152  EFA4  F000         	goto	l72
   813   000156                     u990:
   814   000156                     
   815                           ;color.c: 75:     calibrate_black();
   816   000156  EC0A  F001         	call	_calibrate_black	;wreg free
   817   00015A                     l75:
   818   00015A  B68E               	btfsc	142,3,c	;volatile
   819   00015C  EFB2  F000         	goto	u1001
   820   000160  EFB4  F000         	goto	u1000
   821   000164                     u1001:
   822   000164  EFAD  F000         	goto	l75
   823   000168                     u1000:
   824   000168                     l71:
   825   000168  0012               	return		;funcret
   826   00016A                     __end_of_color_click_init:
   827                           	callstack 0
   828                           
   829 ;; *************** function _color_writetoaddr *****************
   830 ;; Defined at:
   831 ;;		line 80 in file "color.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  address         1    wreg     unsigned char 
   834 ;;  value           1    2[COMRAM] unsigned char 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  address         1    3[COMRAM] unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, status,2, status,0, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   846 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   849 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   850 ;;Total ram usage:        2 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; Hardware stack levels required when called: 4
   853 ;; This function calls:
   854 ;;		_I2C_2_Master_Start
   855 ;;		_I2C_2_Master_Stop
   856 ;;		_I2C_2_Master_Write
   857 ;; This function is called by:
   858 ;;		_color_click_init
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text3
   863   000608                     __ptext3:
   864                           	callstack 0
   865   000608                     _color_writetoaddr:
   866                           	callstack 25
   867                           
   868                           ;incstack = 0
   869                           ;color_writetoaddr@address stored from wreg
   870   000608  6E36               	movwf	color_writetoaddr@address^0,c
   871   00060A                     
   872                           ;color.c: 81:     I2C_2_Master_Start();
   873   00060A  EC35  F003         	call	_I2C_2_Master_Start	;wreg free
   874                           
   875                           ;color.c: 82:     I2C_2_Master_Write(0x52 | 0x00);
   876   00060E  0E52               	movlw	82
   877   000610  EC24  F003         	call	_I2C_2_Master_Write
   878                           
   879                           ;color.c: 83:     I2C_2_Master_Write(0x80 | address);
   880   000614  5036               	movf	color_writetoaddr@address^0,w,c
   881   000616  0980               	iorlw	128
   882   000618  EC24  F003         	call	_I2C_2_Master_Write
   883                           
   884                           ;color.c: 84:     I2C_2_Master_Write(value);
   885   00061C  5035               	movf	color_writetoaddr@value^0,w,c
   886   00061E  EC24  F003         	call	_I2C_2_Master_Write
   887                           
   888                           ;color.c: 85:     I2C_2_Master_Stop();
   889   000622  EC30  F003         	call	_I2C_2_Master_Stop	;wreg free
   890   000626  0012               	return		;funcret
   891   000628                     __end_of_color_writetoaddr:
   892                           	callstack 0
   893                           
   894 ;; *************** function _calibrate_white *****************
   895 ;; Defined at:
   896 ;;		line 220 in file "color.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;Total ram usage:        2 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; Hardware stack levels required when called: 5
   917 ;; This function calls:
   918 ;;		_color_read_Blue
   919 ;;		_color_read_Green
   920 ;;		_color_read_Red
   921 ;;		_set_led_color
   922 ;; This function is called by:
   923 ;;		_color_click_init
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text4
   928   00016A                     __ptext4:
   929                           	callstack 0
   930   00016A                     _calibrate_white:
   931                           	callstack 24
   932   00016A                     
   933                           ;color.c: 221:     set_led_color(0b100);
   934   00016A  0E00               	movlw	0
   935   00016C  6E34               	movwf	(set_led_color@color+1)^0,c
   936   00016E  0E04               	movlw	4
   937   000170  6E33               	movwf	set_led_color@color^0,c
   938   000172  EC7F  F002         	call	_set_led_color	;wreg free
   939   000176                     
   940                           ;color.c: 222:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   941   000176  0E29               	movlw	41
   942   000178  6E3F               	movwf	(??_calibrate_white+1)^0,c
   943   00017A  0E96               	movlw	150
   944   00017C  6E3E               	movwf	??_calibrate_white^0,c
   945   00017E  0E7F               	movlw	127
   946   000180                     u1657:
   947   000180  2EE8               	decfsz	wreg,f,c
   948   000182  D7FE               	bra	u1657
   949   000184  2E3E               	decfsz	??_calibrate_white^0,f,c
   950   000186  D7FC               	bra	u1657
   951   000188  2E3F               	decfsz	(??_calibrate_white+1)^0,f,c
   952   00018A  D7FA               	bra	u1657
   953   00018C  F000               	nop	
   954   00018E                     
   955                           ;color.c: 223:     White_setup.R = color_read_Red();
   956   00018E  ECBF  F001         	call	_color_read_Red	;wreg free
   957   000192  C037  F00D         	movff	?_color_read_Red,_White_setup
   958   000196  C038  F00E         	movff	?_color_read_Red+1,_White_setup+1
   959   00019A  6A0F               	clrf	(_White_setup+2)^0,c
   960   00019C  6A10               	clrf	(_White_setup+3)^0,c
   961   00019E                     
   962                           ;color.c: 224:     set_led_color(0b010);
   963   00019E  0E00               	movlw	0
   964   0001A0  6E34               	movwf	(set_led_color@color+1)^0,c
   965   0001A2  0E02               	movlw	2
   966   0001A4  6E33               	movwf	set_led_color@color^0,c
   967   0001A6  EC7F  F002         	call	_set_led_color	;wreg free
   968   0001AA                     
   969                           ;color.c: 225:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   970   0001AA  0E29               	movlw	41
   971   0001AC  6E3F               	movwf	(??_calibrate_white+1)^0,c
   972   0001AE  0E96               	movlw	150
   973   0001B0  6E3E               	movwf	??_calibrate_white^0,c
   974   0001B2  0E7F               	movlw	127
   975   0001B4                     u1667:
   976   0001B4  2EE8               	decfsz	wreg,f,c
   977   0001B6  D7FE               	bra	u1667
   978   0001B8  2E3E               	decfsz	??_calibrate_white^0,f,c
   979   0001BA  D7FC               	bra	u1667
   980   0001BC  2E3F               	decfsz	(??_calibrate_white+1)^0,f,c
   981   0001BE  D7FA               	bra	u1667
   982   0001C0  F000               	nop	
   983                           
   984                           ;color.c: 226:     White_setup.G = color_read_Green();
   985   0001C2  ECE7  F001         	call	_color_read_Green	;wreg free
   986   0001C6  C037  F011         	movff	?_color_read_Green,_White_setup+4
   987   0001CA  C038  F012         	movff	?_color_read_Green+1,_White_setup+5
   988   0001CE  6A13               	clrf	(_White_setup+6)^0,c
   989   0001D0  6A14               	clrf	(_White_setup+7)^0,c
   990   0001D2                     
   991                           ;color.c: 227:     set_led_color(0b001);
   992   0001D2  0E00               	movlw	0
   993   0001D4  6E34               	movwf	(set_led_color@color+1)^0,c
   994   0001D6  0E01               	movlw	1
   995   0001D8  6E33               	movwf	set_led_color@color^0,c
   996   0001DA  EC7F  F002         	call	_set_led_color	;wreg free
   997   0001DE                     
   998                           ;color.c: 228:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   999   0001DE  0E29               	movlw	41
  1000   0001E0  6E3F               	movwf	(??_calibrate_white+1)^0,c
  1001   0001E2  0E96               	movlw	150
  1002   0001E4  6E3E               	movwf	??_calibrate_white^0,c
  1003   0001E6  0E7F               	movlw	127
  1004   0001E8                     u1677:
  1005   0001E8  2EE8               	decfsz	wreg,f,c
  1006   0001EA  D7FE               	bra	u1677
  1007   0001EC  2E3E               	decfsz	??_calibrate_white^0,f,c
  1008   0001EE  D7FC               	bra	u1677
  1009   0001F0  2E3F               	decfsz	(??_calibrate_white+1)^0,f,c
  1010   0001F2  D7FA               	bra	u1677
  1011   0001F4  F000               	nop	
  1012   0001F6                     
  1013                           ;color.c: 229:     White_setup.B = color_read_Blue();
  1014   0001F6  EC0F  F002         	call	_color_read_Blue	;wreg free
  1015   0001FA  C037  F015         	movff	?_color_read_Blue,_White_setup+8
  1016   0001FE  C038  F016         	movff	?_color_read_Blue+1,_White_setup+9
  1017   000202  6A17               	clrf	(_White_setup+10)^0,c
  1018   000204  6A18               	clrf	(_White_setup+11)^0,c
  1019   000206                     
  1020                           ;color.c: 230:     set_led_color(0b000);
  1021   000206  0E00               	movlw	0
  1022   000208  6E34               	movwf	(set_led_color@color+1)^0,c
  1023   00020A  0E00               	movlw	0
  1024   00020C  6E33               	movwf	set_led_color@color^0,c
  1025   00020E  EC7F  F002         	call	_set_led_color	;wreg free
  1026   000212  0012               	return		;funcret
  1027   000214                     __end_of_calibrate_white:
  1028                           	callstack 0
  1029                           
  1030 ;; *************** function _calibrate_black *****************
  1031 ;; Defined at:
  1032 ;;		line 207 in file "color.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2, status,0, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1050 ;;Total ram usage:        2 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 5
  1053 ;; This function calls:
  1054 ;;		_color_read_Blue
  1055 ;;		_color_read_Green
  1056 ;;		_color_read_Red
  1057 ;;		_set_led_color
  1058 ;; This function is called by:
  1059 ;;		_color_click_init
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text5
  1064   000214                     __ptext5:
  1065                           	callstack 0
  1066   000214                     _calibrate_black:
  1067                           	callstack 24
  1068   000214                     
  1069                           ;color.c: 208:     set_led_color(0b100);
  1070   000214  0E00               	movlw	0
  1071   000216  6E34               	movwf	(set_led_color@color+1)^0,c
  1072   000218  0E04               	movlw	4
  1073   00021A  6E33               	movwf	set_led_color@color^0,c
  1074   00021C  EC7F  F002         	call	_set_led_color	;wreg free
  1075   000220                     
  1076                           ;color.c: 209:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1077   000220  0E29               	movlw	41
  1078   000222  6E3F               	movwf	(??_calibrate_black+1)^0,c
  1079   000224  0E96               	movlw	150
  1080   000226  6E3E               	movwf	??_calibrate_black^0,c
  1081   000228  0E7F               	movlw	127
  1082   00022A                     u1687:
  1083   00022A  2EE8               	decfsz	wreg,f,c
  1084   00022C  D7FE               	bra	u1687
  1085   00022E  2E3E               	decfsz	??_calibrate_black^0,f,c
  1086   000230  D7FC               	bra	u1687
  1087   000232  2E3F               	decfsz	(??_calibrate_black+1)^0,f,c
  1088   000234  D7FA               	bra	u1687
  1089   000236  F000               	nop	
  1090   000238                     
  1091                           ;color.c: 210:     Black_setup.R = color_read_Red();
  1092   000238  ECBF  F001         	call	_color_read_Red	;wreg free
  1093   00023C  C037  F001         	movff	?_color_read_Red,_Black_setup
  1094   000240  C038  F002         	movff	?_color_read_Red+1,_Black_setup+1
  1095   000244  6A03               	clrf	(_Black_setup+2)^0,c
  1096   000246  6A04               	clrf	(_Black_setup+3)^0,c
  1097   000248                     
  1098                           ;color.c: 211:     set_led_color(0b010);
  1099   000248  0E00               	movlw	0
  1100   00024A  6E34               	movwf	(set_led_color@color+1)^0,c
  1101   00024C  0E02               	movlw	2
  1102   00024E  6E33               	movwf	set_led_color@color^0,c
  1103   000250  EC7F  F002         	call	_set_led_color	;wreg free
  1104   000254                     
  1105                           ;color.c: 212:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1106   000254  0E29               	movlw	41
  1107   000256  6E3F               	movwf	(??_calibrate_black+1)^0,c
  1108   000258  0E96               	movlw	150
  1109   00025A  6E3E               	movwf	??_calibrate_black^0,c
  1110   00025C  0E7F               	movlw	127
  1111   00025E                     u1697:
  1112   00025E  2EE8               	decfsz	wreg,f,c
  1113   000260  D7FE               	bra	u1697
  1114   000262  2E3E               	decfsz	??_calibrate_black^0,f,c
  1115   000264  D7FC               	bra	u1697
  1116   000266  2E3F               	decfsz	(??_calibrate_black+1)^0,f,c
  1117   000268  D7FA               	bra	u1697
  1118   00026A  F000               	nop	
  1119                           
  1120                           ;color.c: 213:     Black_setup.G = color_read_Green();
  1121   00026C  ECE7  F001         	call	_color_read_Green	;wreg free
  1122   000270  C037  F005         	movff	?_color_read_Green,_Black_setup+4
  1123   000274  C038  F006         	movff	?_color_read_Green+1,_Black_setup+5
  1124   000278  6A07               	clrf	(_Black_setup+6)^0,c
  1125   00027A  6A08               	clrf	(_Black_setup+7)^0,c
  1126   00027C                     
  1127                           ;color.c: 214:     set_led_color(0b001);
  1128   00027C  0E00               	movlw	0
  1129   00027E  6E34               	movwf	(set_led_color@color+1)^0,c
  1130   000280  0E01               	movlw	1
  1131   000282  6E33               	movwf	set_led_color@color^0,c
  1132   000284  EC7F  F002         	call	_set_led_color	;wreg free
  1133   000288                     
  1134                           ;color.c: 215:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1135   000288  0E29               	movlw	41
  1136   00028A  6E3F               	movwf	(??_calibrate_black+1)^0,c
  1137   00028C  0E96               	movlw	150
  1138   00028E  6E3E               	movwf	??_calibrate_black^0,c
  1139   000290  0E7F               	movlw	127
  1140   000292                     u1707:
  1141   000292  2EE8               	decfsz	wreg,f,c
  1142   000294  D7FE               	bra	u1707
  1143   000296  2E3E               	decfsz	??_calibrate_black^0,f,c
  1144   000298  D7FC               	bra	u1707
  1145   00029A  2E3F               	decfsz	(??_calibrate_black+1)^0,f,c
  1146   00029C  D7FA               	bra	u1707
  1147   00029E  F000               	nop	
  1148   0002A0                     
  1149                           ;color.c: 216:     Black_setup.B = color_read_Blue();
  1150   0002A0  EC0F  F002         	call	_color_read_Blue	;wreg free
  1151   0002A4  C037  F009         	movff	?_color_read_Blue,_Black_setup+8
  1152   0002A8  C038  F00A         	movff	?_color_read_Blue+1,_Black_setup+9
  1153   0002AC  6A0B               	clrf	(_Black_setup+10)^0,c
  1154   0002AE  6A0C               	clrf	(_Black_setup+11)^0,c
  1155   0002B0                     
  1156                           ;color.c: 217:     set_led_color(0b000);
  1157   0002B0  0E00               	movlw	0
  1158   0002B2  6E34               	movwf	(set_led_color@color+1)^0,c
  1159   0002B4  0E00               	movlw	0
  1160   0002B6  6E33               	movwf	set_led_color@color^0,c
  1161   0002B8  EC7F  F002         	call	_set_led_color	;wreg free
  1162   0002BC  0012               	return		;funcret
  1163   0002BE                     __end_of_calibrate_black:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _set_led_color *****************
  1167 ;; Defined at:
  1168 ;;		line 152 in file "color.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  color           2    0[COMRAM] unsigned int 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		None
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1186 ;;Total ram usage:        2 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 2
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_calibrate_black
  1193 ;;		_calibrate_white
  1194 ;;		_get_wall_presence
  1195 ;;		_main
  1196 ;;		_get_color_code
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text6
  1201   0004FE                     __ptext6:
  1202                           	callstack 0
  1203   0004FE                     _set_led_color:
  1204                           	callstack 28
  1205   0004FE                     
  1206                           ;color.c: 156:     if(color & 0b100){
  1207   0004FE  A433               	btfss	set_led_color@color^0,2,c
  1208   000500  EF84  F002         	goto	u841
  1209   000504  EF86  F002         	goto	u840
  1210   000508                     u841:
  1211   000508  EF89  F002         	goto	l110
  1212   00050C                     u840:
  1213   00050C                     
  1214                           ;color.c: 157:         LATGbits.LATG1 = 1;
  1215   00050C  827F               	bsf	127,1,c	;volatile
  1216                           
  1217                           ;color.c: 158:     }else{
  1218   00050E  EF8A  F002         	goto	l111
  1219   000512                     l110:
  1220                           
  1221                           ;color.c: 159:         LATGbits.LATG1 = 0;
  1222   000512  927F               	bcf	127,1,c	;volatile
  1223   000514                     l111:
  1224                           
  1225                           ;color.c: 161:     if(color & 0b010){
  1226   000514  A233               	btfss	set_led_color@color^0,1,c
  1227   000516  EF8F  F002         	goto	u851
  1228   00051A  EF91  F002         	goto	u850
  1229   00051E                     u851:
  1230   00051E  EF94  F002         	goto	l112
  1231   000522                     u850:
  1232   000522                     
  1233                           ;color.c: 162:         LATAbits.LATA4 = 1;
  1234   000522  8879               	bsf	121,4,c	;volatile
  1235                           
  1236                           ;color.c: 163:     }else{
  1237   000524  EF95  F002         	goto	l113
  1238   000528                     l112:
  1239                           
  1240                           ;color.c: 164:         LATAbits.LATA4 = 0;
  1241   000528  9879               	bcf	121,4,c	;volatile
  1242   00052A                     l113:
  1243                           
  1244                           ;color.c: 166:     if(color & 0b001){
  1245   00052A  A033               	btfss	set_led_color@color^0,0,c
  1246   00052C  EF9A  F002         	goto	u861
  1247   000530  EF9C  F002         	goto	u860
  1248   000534                     u861:
  1249   000534  EF9F  F002         	goto	l114
  1250   000538                     u860:
  1251   000538                     
  1252                           ;color.c: 167:         LATFbits.LATF7 = 1;
  1253   000538  8E7E               	bsf	126,7,c	;volatile
  1254                           
  1255                           ;color.c: 168:     }else{
  1256   00053A  EFA0  F002         	goto	l116
  1257   00053E                     l114:
  1258                           
  1259                           ;color.c: 169:         LATFbits.LATF7 = 0;
  1260   00053E  9E7E               	bcf	126,7,c	;volatile
  1261   000540                     l116:
  1262   000540  0012               	return		;funcret
  1263   000542                     __end_of_set_led_color:
  1264                           	callstack 0
  1265                           
  1266 ;; *************** function _color_read_Red *****************
  1267 ;; Defined at:
  1268 ;;		line 88 in file "color.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  tmp             2    9[COMRAM] unsigned int 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  2    4[COMRAM] unsigned int 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1283 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1284 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1285 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1286 ;;Total ram usage:        7 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; Hardware stack levels required when called: 4
  1289 ;; This function calls:
  1290 ;;		_I2C_2_Master_Read
  1291 ;;		_I2C_2_Master_RepStart
  1292 ;;		_I2C_2_Master_Start
  1293 ;;		_I2C_2_Master_Stop
  1294 ;;		_I2C_2_Master_Write
  1295 ;; This function is called by:
  1296 ;;		_calibrate_black
  1297 ;;		_calibrate_white
  1298 ;;		_get_wall_presence
  1299 ;;		_get_color_code
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text7
  1304   00037E                     __ptext7:
  1305                           	callstack 0
  1306   00037E                     _color_read_Red:
  1307                           	callstack 25
  1308   00037E                     
  1309                           ;color.c: 90:  unsigned int tmp;;color.c: 91:  I2C_2_Master_Start();
  1310   00037E  EC35  F003         	call	_I2C_2_Master_Start	;wreg free
  1311                           
  1312                           ;color.c: 92:  I2C_2_Master_Write(0x52 | 0x00);
  1313   000382  0E52               	movlw	82
  1314   000384  EC24  F003         	call	_I2C_2_Master_Write
  1315                           
  1316                           ;color.c: 93:  I2C_2_Master_Write(0xA0 | 0x16);
  1317   000388  0EB6               	movlw	182
  1318   00038A  EC24  F003         	call	_I2C_2_Master_Write
  1319                           
  1320                           ;color.c: 94:  I2C_2_Master_RepStart();
  1321   00038E  EC3A  F003         	call	_I2C_2_Master_RepStart	;wreg free
  1322                           
  1323                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x01);
  1324   000392  0E53               	movlw	83
  1325   000394  EC24  F003         	call	_I2C_2_Master_Write
  1326                           
  1327                           ;color.c: 96:  tmp=I2C_2_Master_Read(1);
  1328   000398  0E01               	movlw	1
  1329   00039A  ECA1  F002         	call	_I2C_2_Master_Read
  1330   00039E  6E39               	movwf	??_color_read_Red^0,c
  1331   0003A0  5039               	movf	??_color_read_Red^0,w,c
  1332   0003A2  6E3C               	movwf	color_read_Red@tmp^0,c
  1333   0003A4  6A3D               	clrf	(color_read_Red@tmp+1)^0,c
  1334                           
  1335                           ;color.c: 97:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1336   0003A6  0E00               	movlw	0
  1337   0003A8  ECA1  F002         	call	_I2C_2_Master_Read
  1338   0003AC  6E39               	movwf	??_color_read_Red^0,c
  1339   0003AE  5039               	movf	??_color_read_Red^0,w,c
  1340   0003B0  6E3B               	movwf	(??_color_read_Red+2)^0,c
  1341   0003B2  6A3A               	clrf	(??_color_read_Red+1)^0,c
  1342   0003B4  503C               	movf	color_read_Red@tmp^0,w,c
  1343   0003B6  103A               	iorwf	(??_color_read_Red+1)^0,w,c
  1344   0003B8  6E3C               	movwf	color_read_Red@tmp^0,c
  1345   0003BA  503D               	movf	(color_read_Red@tmp+1)^0,w,c
  1346   0003BC  103B               	iorwf	(??_color_read_Red+2)^0,w,c
  1347   0003BE  6E3D               	movwf	(color_read_Red@tmp+1)^0,c
  1348                           
  1349                           ;color.c: 98:  I2C_2_Master_Stop();
  1350   0003C0  EC30  F003         	call	_I2C_2_Master_Stop	;wreg free
  1351   0003C4                     
  1352                           ;color.c: 99:  return tmp;
  1353   0003C4  C03C  F037         	movff	color_read_Red@tmp,?_color_read_Red
  1354   0003C8  C03D  F038         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1355   0003CC  0012               	return		;funcret
  1356   0003CE                     __end_of_color_read_Red:
  1357                           	callstack 0
  1358                           
  1359 ;; *************** function _color_read_Green *****************
  1360 ;; Defined at:
  1361 ;;		line 116 in file "color.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  tmp             2    9[COMRAM] unsigned int 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  2    4[COMRAM] unsigned int 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1377 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1379 ;;Total ram usage:        7 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; Hardware stack levels required when called: 4
  1382 ;; This function calls:
  1383 ;;		_I2C_2_Master_Read
  1384 ;;		_I2C_2_Master_RepStart
  1385 ;;		_I2C_2_Master_Start
  1386 ;;		_I2C_2_Master_Stop
  1387 ;;		_I2C_2_Master_Write
  1388 ;; This function is called by:
  1389 ;;		_calibrate_black
  1390 ;;		_calibrate_white
  1391 ;;		_get_wall_presence
  1392 ;;		_get_color_code
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text8
  1397   0003CE                     __ptext8:
  1398                           	callstack 0
  1399   0003CE                     _color_read_Green:
  1400                           	callstack 25
  1401   0003CE                     
  1402                           ;color.c: 118:  unsigned int tmp;;color.c: 119:  I2C_2_Master_Start();
  1403   0003CE  EC35  F003         	call	_I2C_2_Master_Start	;wreg free
  1404                           
  1405                           ;color.c: 120:  I2C_2_Master_Write(0x52 | 0x00);
  1406   0003D2  0E52               	movlw	82
  1407   0003D4  EC24  F003         	call	_I2C_2_Master_Write
  1408                           
  1409                           ;color.c: 121:  I2C_2_Master_Write(0xA0 | 0x18);
  1410   0003D8  0EB8               	movlw	184
  1411   0003DA  EC24  F003         	call	_I2C_2_Master_Write
  1412                           
  1413                           ;color.c: 122:  I2C_2_Master_RepStart();
  1414   0003DE  EC3A  F003         	call	_I2C_2_Master_RepStart	;wreg free
  1415                           
  1416                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x01);
  1417   0003E2  0E53               	movlw	83
  1418   0003E4  EC24  F003         	call	_I2C_2_Master_Write
  1419                           
  1420                           ;color.c: 124:  tmp=I2C_2_Master_Read(1);
  1421   0003E8  0E01               	movlw	1
  1422   0003EA  ECA1  F002         	call	_I2C_2_Master_Read
  1423   0003EE  6E39               	movwf	??_color_read_Green^0,c
  1424   0003F0  5039               	movf	??_color_read_Green^0,w,c
  1425   0003F2  6E3C               	movwf	color_read_Green@tmp^0,c
  1426   0003F4  6A3D               	clrf	(color_read_Green@tmp+1)^0,c
  1427                           
  1428                           ;color.c: 125:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1429   0003F6  0E00               	movlw	0
  1430   0003F8  ECA1  F002         	call	_I2C_2_Master_Read
  1431   0003FC  6E39               	movwf	??_color_read_Green^0,c
  1432   0003FE  5039               	movf	??_color_read_Green^0,w,c
  1433   000400  6E3B               	movwf	(??_color_read_Green+2)^0,c
  1434   000402  6A3A               	clrf	(??_color_read_Green+1)^0,c
  1435   000404  503C               	movf	color_read_Green@tmp^0,w,c
  1436   000406  103A               	iorwf	(??_color_read_Green+1)^0,w,c
  1437   000408  6E3C               	movwf	color_read_Green@tmp^0,c
  1438   00040A  503D               	movf	(color_read_Green@tmp+1)^0,w,c
  1439   00040C  103B               	iorwf	(??_color_read_Green+2)^0,w,c
  1440   00040E  6E3D               	movwf	(color_read_Green@tmp+1)^0,c
  1441                           
  1442                           ;color.c: 126:  I2C_2_Master_Stop();
  1443   000410  EC30  F003         	call	_I2C_2_Master_Stop	;wreg free
  1444   000414                     
  1445                           ;color.c: 127:  return tmp;
  1446   000414  C03C  F037         	movff	color_read_Green@tmp,?_color_read_Green
  1447   000418  C03D  F038         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1448   00041C  0012               	return		;funcret
  1449   00041E                     __end_of_color_read_Green:
  1450                           	callstack 0
  1451                           
  1452 ;; *************** function _color_read_Blue *****************
  1453 ;; Defined at:
  1454 ;;		line 102 in file "color.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  tmp             2    9[COMRAM] unsigned int 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  2    4[COMRAM] unsigned int 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1470 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1471 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1472 ;;Total ram usage:        7 bytes
  1473 ;; Hardware stack levels used: 1
  1474 ;; Hardware stack levels required when called: 4
  1475 ;; This function calls:
  1476 ;;		_I2C_2_Master_Read
  1477 ;;		_I2C_2_Master_RepStart
  1478 ;;		_I2C_2_Master_Start
  1479 ;;		_I2C_2_Master_Stop
  1480 ;;		_I2C_2_Master_Write
  1481 ;; This function is called by:
  1482 ;;		_calibrate_black
  1483 ;;		_calibrate_white
  1484 ;;		_get_wall_presence
  1485 ;;		_get_color_code
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text9
  1490   00041E                     __ptext9:
  1491                           	callstack 0
  1492   00041E                     _color_read_Blue:
  1493                           	callstack 25
  1494   00041E                     
  1495                           ;color.c: 104:  unsigned int tmp;;color.c: 105:  I2C_2_Master_Start();
  1496   00041E  EC35  F003         	call	_I2C_2_Master_Start	;wreg free
  1497                           
  1498                           ;color.c: 106:  I2C_2_Master_Write(0x52 | 0x00);
  1499   000422  0E52               	movlw	82
  1500   000424  EC24  F003         	call	_I2C_2_Master_Write
  1501                           
  1502                           ;color.c: 107:  I2C_2_Master_Write(0xA0 | 0x1A);
  1503   000428  0EBA               	movlw	186
  1504   00042A  EC24  F003         	call	_I2C_2_Master_Write
  1505                           
  1506                           ;color.c: 108:  I2C_2_Master_RepStart();
  1507   00042E  EC3A  F003         	call	_I2C_2_Master_RepStart	;wreg free
  1508                           
  1509                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x01);
  1510   000432  0E53               	movlw	83
  1511   000434  EC24  F003         	call	_I2C_2_Master_Write
  1512                           
  1513                           ;color.c: 110:  tmp=I2C_2_Master_Read(1);
  1514   000438  0E01               	movlw	1
  1515   00043A  ECA1  F002         	call	_I2C_2_Master_Read
  1516   00043E  6E39               	movwf	??_color_read_Blue^0,c
  1517   000440  5039               	movf	??_color_read_Blue^0,w,c
  1518   000442  6E3C               	movwf	color_read_Blue@tmp^0,c
  1519   000444  6A3D               	clrf	(color_read_Blue@tmp+1)^0,c
  1520                           
  1521                           ;color.c: 111:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1522   000446  0E00               	movlw	0
  1523   000448  ECA1  F002         	call	_I2C_2_Master_Read
  1524   00044C  6E39               	movwf	??_color_read_Blue^0,c
  1525   00044E  5039               	movf	??_color_read_Blue^0,w,c
  1526   000450  6E3B               	movwf	(??_color_read_Blue+2)^0,c
  1527   000452  6A3A               	clrf	(??_color_read_Blue+1)^0,c
  1528   000454  503C               	movf	color_read_Blue@tmp^0,w,c
  1529   000456  103A               	iorwf	(??_color_read_Blue+1)^0,w,c
  1530   000458  6E3C               	movwf	color_read_Blue@tmp^0,c
  1531   00045A  503D               	movf	(color_read_Blue@tmp+1)^0,w,c
  1532   00045C  103B               	iorwf	(??_color_read_Blue+2)^0,w,c
  1533   00045E  6E3D               	movwf	(color_read_Blue@tmp+1)^0,c
  1534                           
  1535                           ;color.c: 112:  I2C_2_Master_Stop();
  1536   000460  EC30  F003         	call	_I2C_2_Master_Stop	;wreg free
  1537   000464                     
  1538                           ;color.c: 113:  return tmp;
  1539   000464  C03C  F037         	movff	color_read_Blue@tmp,?_color_read_Blue
  1540   000468  C03D  F038         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1541   00046C  0012               	return		;funcret
  1542   00046E                     __end_of_color_read_Blue:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _I2C_2_Master_Write *****************
  1546 ;; Defined at:
  1547 ;;		line 45 in file "i2c.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  data_byte       1    wreg     unsigned char 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  data_byte       1    1[COMRAM] unsigned char 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;Total ram usage:        1 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 3
  1568 ;; This function calls:
  1569 ;;		_I2C_2_Master_Idle
  1570 ;; This function is called by:
  1571 ;;		_color_writetoaddr
  1572 ;;		_color_read_Red
  1573 ;;		_color_read_Blue
  1574 ;;		_color_read_Green
  1575 ;;		_color_read_Clear
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text10
  1580   000648                     __ptext10:
  1581                           	callstack 0
  1582   000648                     _I2C_2_Master_Write:
  1583                           	callstack 25
  1584                           
  1585                           ;incstack = 0
  1586                           ;I2C_2_Master_Write@data_byte stored from wreg
  1587   000648  6E34               	movwf	I2C_2_Master_Write@data_byte^0,c
  1588   00064A                     
  1589                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1590   00064A  ECF0  F002         	call	_I2C_2_Master_Idle	;wreg free
  1591   00064E                     
  1592                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1593   00064E  C034  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1594   000652  0012               	return		;funcret
  1595   000654                     __end_of_I2C_2_Master_Write:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function _I2C_2_Master_Stop *****************
  1599 ;; Defined at:
  1600 ;;		line 39 in file "i2c.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1618 ;;Total ram usage:        0 bytes
  1619 ;; Hardware stack levels used: 1
  1620 ;; Hardware stack levels required when called: 3
  1621 ;; This function calls:
  1622 ;;		_I2C_2_Master_Idle
  1623 ;; This function is called by:
  1624 ;;		_color_writetoaddr
  1625 ;;		_color_read_Red
  1626 ;;		_color_read_Blue
  1627 ;;		_color_read_Green
  1628 ;;		_color_read_Clear
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text11
  1633   000660                     __ptext11:
  1634                           	callstack 0
  1635   000660                     _I2C_2_Master_Stop:
  1636                           	callstack 25
  1637   000660                     
  1638                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1639   000660  ECF0  F002         	call	_I2C_2_Master_Idle	;wreg free
  1640   000664                     
  1641                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1642   000664  010E               	movlb	14	; () banked
  1643   000666  85DA               	bsf	218,2,b	;volatile
  1644   000668                     
  1645                           ; BSR set to: 14
  1646   000668  0012               	return		;funcret
  1647   00066A                     __end_of_I2C_2_Master_Stop:
  1648                           	callstack 0
  1649                           
  1650 ;; *************** function _I2C_2_Master_Start *****************
  1651 ;; Defined at:
  1652 ;;		line 27 in file "i2c.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2, status,0, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 3
  1673 ;; This function calls:
  1674 ;;		_I2C_2_Master_Idle
  1675 ;; This function is called by:
  1676 ;;		_color_writetoaddr
  1677 ;;		_color_read_Red
  1678 ;;		_color_read_Blue
  1679 ;;		_color_read_Green
  1680 ;;		_color_read_Clear
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text12
  1685   00066A                     __ptext12:
  1686                           	callstack 0
  1687   00066A                     _I2C_2_Master_Start:
  1688                           	callstack 25
  1689   00066A                     
  1690                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1691   00066A  ECF0  F002         	call	_I2C_2_Master_Idle	;wreg free
  1692   00066E                     
  1693                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1694   00066E  010E               	movlb	14	; () banked
  1695   000670  81DA               	bsf	218,0,b	;volatile
  1696   000672                     
  1697                           ; BSR set to: 14
  1698   000672  0012               	return		;funcret
  1699   000674                     __end_of_I2C_2_Master_Start:
  1700                           	callstack 0
  1701                           
  1702 ;; *************** function _I2C_2_Master_RepStart *****************
  1703 ;; Defined at:
  1704 ;;		line 33 in file "i2c.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 3
  1725 ;; This function calls:
  1726 ;;		_I2C_2_Master_Idle
  1727 ;; This function is called by:
  1728 ;;		_color_read_Red
  1729 ;;		_color_read_Blue
  1730 ;;		_color_read_Green
  1731 ;;		_color_read_Clear
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text13
  1736   000674                     __ptext13:
  1737                           	callstack 0
  1738   000674                     _I2C_2_Master_RepStart:
  1739                           	callstack 25
  1740   000674                     
  1741                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1742   000674  ECF0  F002         	call	_I2C_2_Master_Idle	;wreg free
  1743   000678                     
  1744                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1745   000678  010E               	movlb	14	; () banked
  1746   00067A  83DA               	bsf	218,1,b	;volatile
  1747   00067C                     
  1748                           ; BSR set to: 14
  1749   00067C  0012               	return		;funcret
  1750   00067E                     __end_of_I2C_2_Master_RepStart:
  1751                           	callstack 0
  1752                           
  1753 ;; *************** function _I2C_2_Master_Read *****************
  1754 ;; Defined at:
  1755 ;;		line 51 in file "i2c.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  ack             1    wreg     unsigned char 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  ack             1    2[COMRAM] unsigned char 
  1760 ;;  tmp             1    3[COMRAM] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      unsigned char 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1774 ;;Total ram usage:        3 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; Hardware stack levels required when called: 3
  1777 ;; This function calls:
  1778 ;;		_I2C_2_Master_Idle
  1779 ;; This function is called by:
  1780 ;;		_color_read_Red
  1781 ;;		_color_read_Blue
  1782 ;;		_color_read_Green
  1783 ;;		_color_read_Clear
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text14
  1788   000542                     __ptext14:
  1789                           	callstack 0
  1790   000542                     _I2C_2_Master_Read:
  1791                           	callstack 25
  1792                           
  1793                           ; BSR set to: 14
  1794                           ;incstack = 0
  1795                           ;I2C_2_Master_Read@ack stored from wreg
  1796   000542  6E35               	movwf	I2C_2_Master_Read@ack^0,c
  1797   000544                     
  1798                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1799   000544  ECF0  F002         	call	_I2C_2_Master_Idle	;wreg free
  1800   000548                     
  1801                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1802   000548  010E               	movlb	14	; () banked
  1803   00054A  87DA               	bsf	218,3,b	;volatile
  1804                           
  1805                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1806   00054C  ECF0  F002         	call	_I2C_2_Master_Idle	;wreg free
  1807   000550                     
  1808                           ;i2c.c: 57:   tmp = SSP2BUF;
  1809   000550  CED5 F036          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1810                           
  1811                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1812   000554  ECF0  F002         	call	_I2C_2_Master_Idle	;wreg free
  1813   000558                     
  1814                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1815   000558  5035               	movf	I2C_2_Master_Read@ack^0,w,c
  1816   00055A  B4D8               	btfsc	status,2,c
  1817   00055C  EFB2  F002         	goto	u821
  1818   000560  EFB6  F002         	goto	u820
  1819   000564                     u821:
  1820   000564  6A34               	clrf	??_I2C_2_Master_Read^0,c
  1821   000566  2A34               	incf	??_I2C_2_Master_Read^0,f,c
  1822   000568  EFB7  F002         	goto	u838
  1823   00056C                     u820:
  1824   00056C  6A34               	clrf	??_I2C_2_Master_Read^0,c
  1825   00056E                     u838:
  1826   00056E  3A34               	swapf	??_I2C_2_Master_Read^0,f,c
  1827   000570  4634               	rlncf	??_I2C_2_Master_Read^0,f,c
  1828   000572  010E               	movlb	14	; () banked
  1829   000574  51DA               	movf	218,w,b	;volatile
  1830   000576  1834               	xorwf	??_I2C_2_Master_Read^0,w,c
  1831   000578  0BDF               	andlw	-33
  1832   00057A  1834               	xorwf	??_I2C_2_Master_Read^0,w,c
  1833   00057C  6FDA               	movwf	218,b	;volatile
  1834   00057E                     
  1835                           ; BSR set to: 14
  1836                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1837   00057E  89DA               	bsf	218,4,b	;volatile
  1838   000580                     
  1839                           ; BSR set to: 14
  1840                           ;i2c.c: 61:   return tmp;
  1841   000580  5036               	movf	I2C_2_Master_Read@tmp^0,w,c
  1842   000582                     
  1843                           ; BSR set to: 14
  1844   000582  0012               	return		;funcret
  1845   000584                     __end_of_I2C_2_Master_Read:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _I2C_2_Master_Idle *****************
  1849 ;; Defined at:
  1850 ;;		line 22 in file "i2c.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1866 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;Total ram usage:        1 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 2
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_I2C_2_Master_Start
  1875 ;;		_I2C_2_Master_RepStart
  1876 ;;		_I2C_2_Master_Stop
  1877 ;;		_I2C_2_Master_Write
  1878 ;;		_I2C_2_Master_Read
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text15
  1883   0005E0                     __ptext15:
  1884                           	callstack 0
  1885   0005E0                     _I2C_2_Master_Idle:
  1886                           	callstack 25
  1887   0005E0                     l266:
  1888   0005E0  010E               	movlb	14	; () banked
  1889   0005E2  B5D8               	btfsc	216,2,b	;volatile
  1890   0005E4  EFF6  F002         	goto	u801
  1891   0005E8  EFF8  F002         	goto	u800
  1892   0005EC                     u801:
  1893   0005EC  EFF0  F002         	goto	l266
  1894   0005F0                     u800:
  1895   0005F0                     
  1896                           ; BSR set to: 14
  1897   0005F0  CEDA F033          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1898   0005F4  0E1F               	movlw	31
  1899   0005F6  1633               	andwf	??_I2C_2_Master_Idle^0,f,c
  1900   0005F8  A4D8               	btfss	status,2,c
  1901   0005FA  EF01  F003         	goto	u811
  1902   0005FE  EF03  F003         	goto	u810
  1903   000602                     u811:
  1904   000602  EFF0  F002         	goto	l266
  1905   000606                     u810:
  1906   000606                     
  1907                           ; BSR set to: 14
  1908   000606  0012               	return		;funcret
  1909   000608                     __end_of_I2C_2_Master_Idle:
  1910                           	callstack 0
  1911                           
  1912 ;; *************** function _I2C_2_Master_Init *****************
  1913 ;; Defined at:
  1914 ;;		line 4 in file "i2c.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;Total ram usage:        0 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 2
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_color_click_init
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text16
  1943   0005B6                     __ptext16:
  1944                           	callstack 0
  1945   0005B6                     _I2C_2_Master_Init:
  1946                           	callstack 27
  1947   0005B6                     
  1948                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1949   0005B6  010E               	movlb	14	; () banked
  1950   0005B8  51D9               	movf	217,w,b	;volatile
  1951   0005BA  0BF0               	andlw	-16
  1952   0005BC  0908               	iorlw	8
  1953   0005BE  6FD9               	movwf	217,b	;volatile
  1954   0005C0                     
  1955                           ; BSR set to: 14
  1956                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1957   0005C0  8BD9               	bsf	217,5,b	;volatile
  1958                           
  1959                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1960   0005C2  0E9F               	movlw	159
  1961   0005C4  6FD6               	movwf	214,b	;volatile
  1962   0005C6                     
  1963                           ; BSR set to: 14
  1964                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1965   0005C6  8A84               	bsf	132,5,c	;volatile
  1966   0005C8                     
  1967                           ; BSR set to: 14
  1968                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1969   0005C8  8C84               	bsf	132,6,c	;volatile
  1970   0005CA                     
  1971                           ; BSR set to: 14
  1972                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1973   0005CA  9BA7               	bcf	167,5,b	;volatile
  1974   0005CC                     
  1975                           ; BSR set to: 14
  1976                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1977   0005CC  9DA7               	bcf	167,6,b	;volatile
  1978                           
  1979                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1980   0005CE  0E1D               	movlw	29
  1981   0005D0  6F1D               	movwf	29,b	;volatile
  1982                           
  1983                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1984   0005D2  0E1E               	movlw	30
  1985   0005D4  6F1C               	movwf	28,b	;volatile
  1986                           
  1987                           ;i2c.c: 18:   RD5PPS=0x1C;
  1988   0005D6  0E1C               	movlw	28
  1989   0005D8  6F6F               	movwf	111,b	;volatile
  1990                           
  1991                           ;i2c.c: 19:   RD6PPS=0x1B;
  1992   0005DA  0E1B               	movlw	27
  1993   0005DC  6F70               	movwf	112,b	;volatile
  1994   0005DE                     
  1995                           ; BSR set to: 14
  1996   0005DE  0012               	return		;funcret
  1997   0005E0                     __end_of_I2C_2_Master_Init:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function _Timer0_init *****************
  2001 ;; Defined at:
  2002 ;;		line 7 in file "timers.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2020 ;;Total ram usage:        0 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 2
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text17
  2031   000628                     __ptext17:
  2032                           	callstack 0
  2033   000628                     _Timer0_init:
  2034                           	callstack 28
  2035   000628                     
  2036                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2037   000628  50D6               	movf	214,w,c	;volatile
  2038   00062A  0B1F               	andlw	-225
  2039   00062C  0940               	iorlw	64
  2040   00062E  6ED6               	movwf	214,c	;volatile
  2041   000630                     
  2042                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  2043   000630  88D6               	bsf	214,4,c	;volatile
  2044                           
  2045                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  2046   000632  50D6               	movf	214,w,c	;volatile
  2047   000634  0BF0               	andlw	-16
  2048   000636  0908               	iorlw	8
  2049   000638  6ED6               	movwf	214,c	;volatile
  2050                           
  2051                           ;timers.c: 12:     TMR0H=0b11100111;
  2052   00063A  0EE7               	movlw	231
  2053   00063C  6ED4               	movwf	212,c	;volatile
  2054                           
  2055                           ;timers.c: 13:     TMR0L=0b10010101;
  2056   00063E  0E95               	movlw	149
  2057   000640  6ED3               	movwf	211,c	;volatile
  2058   000642                     
  2059                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  2060   000642  88D5               	bsf	213,4,c	;volatile
  2061   000644                     
  2062                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  2063   000644  8ED5               	bsf	213,7,c	;volatile
  2064   000646  0012               	return		;funcret
  2065   000648                     __end_of_Timer0_init:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _Interrupts_init *****************
  2069 ;; Defined at:
  2070 ;;		line 10 in file "interrupts.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		None
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 2
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text18
  2099   000654                     __ptext18:
  2100                           	callstack 0
  2101   000654                     _Interrupts_init:
  2102                           	callstack 28
  2103   000654                     
  2104                           ;interrupts.c: 12:     INTCONbits.PEIE = 1;
  2105   000654  8CF2               	bsf	242,6,c	;volatile
  2106                           
  2107                           ;interrupts.c: 13:     PIE0bits.TMR0IE = 1;
  2108   000656  010E               	movlb	14	; () banked
  2109   000658  8B29               	bsf	41,5,b	;volatile
  2110                           
  2111                           ;interrupts.c: 14:     PIE2bits.C1IE = 1;
  2112   00065A  812B               	bsf	43,0,b	;volatile
  2113                           
  2114                           ;interrupts.c: 15:     INTCONbits.GIE = 1;
  2115   00065C  8EF2               	bsf	242,7,c	;volatile
  2116   00065E                     
  2117                           ; BSR set to: 14
  2118   00065E  0012               	return		;funcret
  2119   000660                     __end_of_Interrupts_init:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _HighISR *****************
  2123 ;; Defined at:
  2124 ;;		line 22 in file "interrupts.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 1
  2145 ;; This function calls:
  2146 ;;		_increment_seconds
  2147 ;; This function is called by:
  2148 ;;		Interrupt level 2
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	intcode
  2153   000008                     __pintcode:
  2154                           	callstack 0
  2155   000008                     _HighISR:
  2156                           	callstack 24
  2157                           
  2158                           ; BSR set to: 14
  2159                           ;incstack = 0
  2160   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2161   00000A                     
  2162                           ;interrupts.c: 24:     if(PIR0bits.TMR0IF == 1){
  2163   00000A  010E               	movlb	14	; () banked
  2164   00000C  AB33               	btfss	51,5,b	;volatile
  2165   00000E  EF0B  F000         	goto	i2u43_41
  2166   000012  EF0D  F000         	goto	i2u43_40
  2167   000016                     i2u43_41:
  2168   000016  EF15  F000         	goto	i2l307
  2169   00001A                     i2u43_40:
  2170   00001A                     
  2171                           ; BSR set to: 14
  2172                           ;interrupts.c: 25:     increment_seconds();
  2173   00001A  EC3F  F003         	call	_increment_seconds	;wreg free
  2174   00001E                     
  2175                           ;interrupts.c: 27:     TMR0H=0b11100111;
  2176   00001E  0EE7               	movlw	231
  2177   000020  6ED4               	movwf	212,c	;volatile
  2178   000022                     
  2179                           ;interrupts.c: 28:     TMR0L=0b10010101;
  2180   000022  0E95               	movlw	149
  2181   000024  6ED3               	movwf	211,c	;volatile
  2182   000026                     
  2183                           ;interrupts.c: 30:     PIR0bits.TMR0IF = 0;
  2184   000026  010E               	movlb	14	; () banked
  2185   000028  9B33               	bcf	51,5,b	;volatile
  2186   00002A                     i2l307:
  2187                           
  2188                           ; BSR set to: 14
  2189   00002A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2190   00002C  0011               	retfie		f
  2191   00002E                     __end_of_HighISR:
  2192                           	callstack 0
  2193                           
  2194 ;; *************** function _increment_seconds *****************
  2195 ;; Defined at:
  2196 ;;		line 220 in file "dc_motor.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		status,2, status,0
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;Total ram usage:        0 bytes
  2215 ;; Hardware stack levels used: 1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_HighISR
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text20
  2224   00067E                     __ptext20:
  2225                           	callstack 0
  2226   00067E                     _increment_seconds:
  2227                           	callstack 24
  2228   00067E                     
  2229                           ;dc_motor.c: 222:     seconds += 1;
  2230   00067E  4A5C               	infsnz	_seconds^0,f,c
  2231   000680  2A5D               	incf	(_seconds+1)^0,f,c
  2232   000682  0012               	return		;funcret
  2233   000684                     __end_of_increment_seconds:
  2234                           	callstack 0
  2235   000000                     
  2236                           	psect	rparam
  2237   000000                     
  2238                           	psect	temp
  2239   00005E                     btemp:
  2240                           	callstack 0
  2241   00005E                     	ds	1
  2242   000000                     int$flags	set	btemp
  2243   000000                     wtemp8	set	btemp+1
  2244   000000                     ttemp5	set	btemp+1
  2245   000000                     ttemp6	set	btemp+4
  2246   000000                     ttemp7	set	btemp+8
  2247                           
  2248                           	psect	idloc
  2249                           
  2250                           ;Config register IDLOC0 @ 0x200000
  2251                           ;	unspecified, using default values
  2252   200000                     	org	2097152
  2253   200000  0FFF               	dw	4095
  2254                           
  2255                           ;Config register IDLOC1 @ 0x200002
  2256                           ;	unspecified, using default values
  2257   200002                     	org	2097154
  2258   200002  0FFF               	dw	4095
  2259                           
  2260                           ;Config register IDLOC2 @ 0x200004
  2261                           ;	unspecified, using default values
  2262   200004                     	org	2097156
  2263   200004  0FFF               	dw	4095
  2264                           
  2265                           ;Config register IDLOC3 @ 0x200006
  2266                           ;	unspecified, using default values
  2267   200006                     	org	2097158
  2268   200006  0FFF               	dw	4095
  2269                           
  2270                           ;Config register IDLOC4 @ 0x200008
  2271                           ;	unspecified, using default values
  2272   200008                     	org	2097160
  2273   200008  0FFF               	dw	4095
  2274                           
  2275                           ;Config register IDLOC5 @ 0x20000A
  2276                           ;	unspecified, using default values
  2277   20000A                     	org	2097162
  2278   20000A  0FFF               	dw	4095
  2279                           
  2280                           ;Config register IDLOC6 @ 0x20000C
  2281                           ;	unspecified, using default values
  2282   20000C                     	org	2097164
  2283   20000C  0FFF               	dw	4095
  2284                           
  2285                           ;Config register IDLOC7 @ 0x20000E
  2286                           ;	unspecified, using default values
  2287   20000E                     	org	2097166
  2288   20000E  0FFF               	dw	4095
  2289                           
  2290                           	psect	config
  2291                           
  2292                           ;Config register CONFIG1L @ 0x300000
  2293                           ;	External Oscillator mode Selection bits
  2294                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2295                           ;	Power-up default value for COSC bits
  2296                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2297   300000                     	org	3145728
  2298   300000  AA                 	db	170
  2299                           
  2300                           ;Config register CONFIG1H @ 0x300001
  2301                           ;	unspecified, using default values
  2302                           ;	Clock Out Enable bit
  2303                           ;	CLKOUTEN = 0x1, unprogrammed default
  2304                           ;	Clock Switch Enable bit
  2305                           ;	CSWEN = 0x1, unprogrammed default
  2306                           ;	Fail-Safe Clock Monitor Enable bit
  2307                           ;	FCMEN = 0x1, unprogrammed default
  2308   300001                     	org	3145729
  2309   300001  FF                 	db	255
  2310                           
  2311                           ;Config register CONFIG2L @ 0x300002
  2312                           ;	unspecified, using default values
  2313                           ;	Master Clear Enable bit
  2314                           ;	MCLRE = 0x1, unprogrammed default
  2315                           ;	Power-up Timer Enable bit
  2316                           ;	PWRTE = 0x1, unprogrammed default
  2317                           ;	Low-power BOR enable bit
  2318                           ;	LPBOREN = 0x1, unprogrammed default
  2319                           ;	Brown-out Reset Enable bits
  2320                           ;	BOREN = 0x3, unprogrammed default
  2321   300002                     	org	3145730
  2322   300002  FF                 	db	255
  2323                           
  2324                           ;Config register CONFIG2H @ 0x300003
  2325                           ;	unspecified, using default values
  2326                           ;	Brown Out Reset Voltage selection bits
  2327                           ;	BORV = 0x3, unprogrammed default
  2328                           ;	ZCD Disable bit
  2329                           ;	ZCD = 0x1, unprogrammed default
  2330                           ;	PPSLOCK bit One-Way Set Enable bit
  2331                           ;	PPS1WAY = 0x1, unprogrammed default
  2332                           ;	Stack Full/Underflow Reset Enable bit
  2333                           ;	STVREN = 0x1, unprogrammed default
  2334                           ;	Debugger Enable bit
  2335                           ;	DEBUG = 0x1, unprogrammed default
  2336                           ;	Extended Instruction Set Enable bit
  2337                           ;	XINST = 0x1, unprogrammed default
  2338   300003                     	org	3145731
  2339   300003  FF                 	db	255
  2340                           
  2341                           ;Config register CONFIG3L @ 0x300004
  2342                           ;	WDT Period Select bits
  2343                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2344                           ;	WDT operating mode
  2345                           ;	WDTE = OFF, WDT Disabled
  2346   300004                     	org	3145732
  2347   300004  9F                 	db	159
  2348                           
  2349                           ;Config register CONFIG3H @ 0x300005
  2350                           ;	unspecified, using default values
  2351                           ;	WDT Window Select bits
  2352                           ;	WDTCWS = 0x7, unprogrammed default
  2353                           ;	WDT input clock selector
  2354                           ;	WDTCCS = 0x7, unprogrammed default
  2355   300005                     	org	3145733
  2356   300005  FF                 	db	255
  2357                           
  2358                           ;Config register CONFIG4L @ 0x300006
  2359                           ;	unspecified, using default values
  2360                           ;	Write Protection Block 0
  2361                           ;	WRT0 = 0x1, unprogrammed default
  2362                           ;	Write Protection Block 1
  2363                           ;	WRT1 = 0x1, unprogrammed default
  2364                           ;	Write Protection Block 2
  2365                           ;	WRT2 = 0x1, unprogrammed default
  2366                           ;	Write Protection Block 3
  2367                           ;	WRT3 = 0x1, unprogrammed default
  2368                           ;	Write Protection Block 3
  2369                           ;	WRT4 = 0x1, unprogrammed default
  2370                           ;	Write Protection Block 3
  2371                           ;	WRT5 = 0x1, unprogrammed default
  2372                           ;	Write Protection Block 3
  2373                           ;	WRT6 = 0x1, unprogrammed default
  2374                           ;	Write Protection Block 3
  2375                           ;	WRT7 = 0x1, unprogrammed default
  2376   300006                     	org	3145734
  2377   300006  FF                 	db	255
  2378                           
  2379                           ;Config register CONFIG4H @ 0x300007
  2380                           ;	unspecified, using default values
  2381                           ;	Configuration Register Write Protection bit
  2382                           ;	WRTC = 0x1, unprogrammed default
  2383                           ;	Boot Block Write Protection bit
  2384                           ;	WRTB = 0x1, unprogrammed default
  2385                           ;	Data EEPROM Write Protection bit
  2386                           ;	WRTD = 0x1, unprogrammed default
  2387                           ;	Scanner Enable bit
  2388                           ;	SCANE = 0x1, unprogrammed default
  2389                           ;	Low Voltage Programming Enable bit
  2390                           ;	LVP = 0x1, unprogrammed default
  2391   300007                     	org	3145735
  2392   300007  FF                 	db	255
  2393                           
  2394                           ;Config register CONFIG5L @ 0x300008
  2395                           ;	unspecified, using default values
  2396                           ;	UserNVM Program Memory Code Protection bit
  2397                           ;	CP = 0x1, unprogrammed default
  2398                           ;	DataNVM Memory Code Protection bit
  2399                           ;	CPD = 0x1, unprogrammed default
  2400   300008                     	org	3145736
  2401   300008  FF                 	db	255
  2402                           
  2403                           ;Config register CONFIG5H @ 0x300009
  2404                           ;	unspecified, using default values
  2405   300009                     	org	3145737
  2406   300009  FF                 	db	255
  2407                           
  2408                           ;Config register CONFIG6L @ 0x30000A
  2409                           ;	unspecified, using default values
  2410                           ;	Table Read Protection Block 0
  2411                           ;	EBTR0 = 0x1, unprogrammed default
  2412                           ;	Table Read Protection Block 1
  2413                           ;	EBTR1 = 0x1, unprogrammed default
  2414                           ;	Table Read Protection Block 2
  2415                           ;	EBTR2 = 0x1, unprogrammed default
  2416                           ;	Table Read Protection Block 3
  2417                           ;	EBTR3 = 0x1, unprogrammed default
  2418                           ;	Table Read Protection Block 4
  2419                           ;	EBTR4 = 0x1, unprogrammed default
  2420                           ;	Table Read Protection Block 5
  2421                           ;	EBTR5 = 0x1, unprogrammed default
  2422                           ;	Table Read Protection Block 6
  2423                           ;	EBTR6 = 0x1, unprogrammed default
  2424                           ;	Table Read Protection Block 7
  2425                           ;	EBTR7 = 0x1, unprogrammed default
  2426   30000A                     	org	3145738
  2427   30000A  FF                 	db	255
  2428                           
  2429                           ;Config register CONFIG6H @ 0x30000B
  2430                           ;	unspecified, using default values
  2431                           ;	Boot Block Table Read Protection bit
  2432                           ;	EBTRB = 0x1, unprogrammed default
  2433   30000B                     	org	3145739
  2434   30000B  FF                 	db	255
  2435                           tosu	equ	0xFFF
  2436                           tosh	equ	0xFFE
  2437                           tosl	equ	0xFFD
  2438                           stkptr	equ	0xFFC
  2439                           pclatu	equ	0xFFB
  2440                           pclath	equ	0xFFA
  2441                           pcl	equ	0xFF9
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           prodh	equ	0xFF4
  2447                           prodl	equ	0xFF3
  2448                           indf0	equ	0xFEF
  2449                           postinc0	equ	0xFEE
  2450                           postdec0	equ	0xFED
  2451                           preinc0	equ	0xFEC
  2452                           plusw0	equ	0xFEB
  2453                           fsr0h	equ	0xFEA
  2454                           fsr0l	equ	0xFE9
  2455                           wreg	equ	0xFE8
  2456                           indf1	equ	0xFE7
  2457                           postinc1	equ	0xFE6
  2458                           postdec1	equ	0xFE5
  2459                           preinc1	equ	0xFE4
  2460                           plusw1	equ	0xFE3
  2461                           fsr1h	equ	0xFE2
  2462                           fsr1l	equ	0xFE1
  2463                           bsr	equ	0xFE0
  2464                           indf2	equ	0xFDF
  2465                           postinc2	equ	0xFDE
  2466                           postdec2	equ	0xFDD
  2467                           preinc2	equ	0xFDC
  2468                           plusw2	equ	0xFDB
  2469                           fsr2h	equ	0xFDA
  2470                           fsr2l	equ	0xFD9
  2471                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        122
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      93
    BANK0           160      0      84
    BANK1           256      0     108
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    TimedfullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    TimedfullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    TimedfullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    TimedfullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1013DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1013DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_get_wall_presence
    _get_wall_presence->_color_read_Blue
    _get_wall_presence->_color_read_Green
    _get_wall_presence->_color_read_Red
    _color_click_init->_calibrate_black
    _color_click_init->_calibrate_white
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _calibrate_black->_color_read_Blue
    _calibrate_black->_color_read_Green
    _calibrate_black->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5883
                                             25 COMRAM     4     4      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                  _get_wall_presence
                      _set_led_color
 ---------------------------------------------------------------------------------
 (1) _get_wall_presence                                   14    12      2    1519
                                             11 COMRAM    14    12      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    3232
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Init
                    _calibrate_black
                    _calibrate_white
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      2     2      0    1469
                                             11 COMRAM     2     2      0
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _calibrate_black                                      2     2      0    1469
                                             11 COMRAM     2     2      0
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (1) _set_led_color                                        2     0      2    1130
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0       0
                  _increment_seconds
 ---------------------------------------------------------------------------------
 (7) _increment_seconds                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _calibrate_black
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _set_led_color
     _calibrate_white
       _color_read_Blue
       _color_read_Green
       _color_read_Red
       _set_led_color
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _get_wall_presence
     _color_read_Blue
     _color_read_Green
     _color_read_Red
     _set_led_color
   _set_led_color

 _HighISR (ROOT)
   _increment_seconds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      6C       7       42.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      54       5       52.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      5D       1       98.9%
BITBIGSFRllhllh     52      0       0      44        0.0%
BITBIGSFRllhlll     46      0       0      46        0.0%
BITBIGSFRlllllh     35      0       0      55        0.0%
BITBIGSFRllllll     2D      0       0      59        0.0%
BITBIGSFRllhlll     20      0       0      48        0.0%
BITBIGSFRlllhhh     1E      0       0      50        0.0%
BITBIGSFRhhhlhh     1B      0       0      33        0.0%
BITBIGSFRhhlll      17      0       0      38        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      51        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      49        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllllh      7      0       0      56        0.0%
BITBIGSFRhl          6      0       0      39        0.0%
BITBIGSFRllllhl      5      0       0      54        0.0%
BITBIGSFRllllhh      3      0       0      53        0.0%
BITBIGSFRllhlll      2      0       0      45        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      57        0.0%
BITBIGSFRllhlll      1      0       0      47        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      52        0.0%
BITBIGSFRllhlhh      1      0       0      42        0.0%
BITBIGSFRllhlhl      1      0       0      43        0.0%
BITBIGSFRllhh        1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11D      60        0.0%
DATA                 0      0     11D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 01 10:33:13 2022

               _color_read_Red 037E                _color_read_Blue 041E                             l71 0168  
                           l80 0626                             l72 0148                             l65 0116  
                           l83 03CC                             l75 015A                             l69 0132  
                           l86 046C                             l89 041C               ?_calibrate_black 0033  
             _color_read_Green 03CE              ??_Interrupts_init 0033                            l110 0512  
                          l111 0514                            l112 0528                            l113 052A  
                          l114 053E                            l116 0540                            l301 065E  
                          l142 0212                            l145 037C                            l139 02BC  
                          l263 05DE                            l272 0672                            l281 0652  
                          l338 0646                            l266 05E0                            l275 067C  
                          l284 0582                            l269 0606                            l278 0668  
                          _RGB 0050                            u800 05F0                            u801 05EC  
                          u810 0606                            u811 0602                            u820 056C  
                          u821 0564                            u901 00AA                            u911 00BC  
                          u840 050C                            u841 0508                            u921 00CE  
                          u850 0522                            u851 051E                            u931 00E0  
                          u860 0538                            u861 0534                            u941 00F2  
                          u838 056E                            u951 0104                            u871 0074  
                          u960 0124                            u961 0120                            u881 0086  
                          u970 0132                            u971 012E                            u891 0098  
                          u980 0140                            u981 013C                            u990 0156  
                          u991 0152               ?_calibrate_white 0033                            wreg 000FE8  
                         l2000 04C2                           l2002 04CE                           l2004 04E6  
                         l1222 0654                           l1230 0644                           l2006 04F2  
                         l1224 0628                           l1226 0630                           l1228 0642  
                         l1700 05C0                           l1702 05C6                           l1710 060A  
                         l1704 05C8                           l1640 05F0                           l1720 01AA  
                         l1712 016A                           l1706 05CA                           l1642 066A  
                         l1650 0660                           l1730 0214                           l1722 01D2  
                         l1714 0176                           l1708 05CC                           l1660 0548  
                         l1644 066E                           l1652 0664                           l1740 027C  
                         l1732 0220                           l1724 01DE                           l1716 018E  
                         l1638 05E0                           l1662 0550                           l1654 0674  
                         l1646 064A                           l1742 0288                           l1734 0238  
                         l1726 01F6                           l1718 019E                           l1750 0036  
                         l1822 032C                           l1664 0558                           l1656 0678  
                         l1648 064E                           l1680 0464                           l1672 037E  
                         l1744 02A0                           l1736 0248                           l1728 0206  
                         l1760 0066                           l1752 0040                           l1824 035C  
                         l1666 057E                           l1658 0544                           l1674 03C4  
                         l1690 04FE                           l1746 02B0                           l1738 0254  
                         l1770 00A0                           l1762 0068                           l1754 0050  
                         l1826 0368                           l1668 0580                           l1684 03CE  
                         l1692 050C                           l1780 00FA                           l1772 00B2  
                         l1764 006A                           l1756 005A                           l1748 0032  
                         l1678 041E                           l1686 0414                           l1694 0522  
                         l1790 0124                           l1782 010C                           l1774 00C4  
                         l1766 007C                           l1758 0064                           l1696 0538  
                         l1784 010E                           l1776 00D6                           l1768 008E  
                         l1698 05B6                           l1794 0144                           l1786 0112  
                         l1778 00E8                           l1796 0156                           l1788 0114  
                         l1994 04B6                           l1996 04BA                           l1998 04BE  
                         u1000 0168                           u1001 0164                           _T2PR 000FBC  
                   _Black_rule 00A8                           u1707 0292                           u1637 04D8  
                         u1647 0046                           u1657 0180                           u1667 01B4  
                         u1677 01E8                           u1687 022A                           u1697 025E  
                         _main 04B6                           fsr1l 000FE1                           btemp 005E  
                         start 002E         __end_of_color_read_Red 03CE                __end_of_HighISR 002E  
                 ___param_bank 000000                          ?_main 0033                    _Black_setup 0001  
                        i2l307 002A                          i2l236 0682                          _TMR0H 000FD4  
                        _TMR0L 000FD3     __end_of_I2C_2_Master_Start 0674     __end_of_I2C_2_Master_Write 0654  
                        tablat 000FF5                          plusw1 000FE3                          plusw2 000FDB  
                        ttemp5 005F                          ttemp6 0062                          ttemp7 0066  
                        status 000FD8                          wtemp8 005F                     _Green_rule 0019  
      __end_of_color_read_Blue 046E          _I2C_2_Master_RepStart 0674                ?_color_read_Red 0037  
              __initialization 02BE                   __end_of_main 04FE                         ??_main 004C  
                __activetblptr 000000                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RD6PPS 000E70  
                       _RE4PPS 000E76                         i2l1220 067E                         i2l1400 0022  
                       i2l1402 0026                         i2l1394 000A                         i2l1396 001A  
                       i2l1398 001E                         _RG6PPS 000E88                      ??_HighISR 0033  
     __end_of_color_click_init 016A                  ??_Timer0_init 0033                   _CCPTMRS0bits 000FAD  
                  _Color_rules 0100                         clear_0 0304                         clear_1 0310  
                       clear_2 031C                         isa$std 000001                   __pdataCOMRAM 0001  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
               _Lightblue_rule 006C                     _White_rule 0060          __end_of_set_led_color 0542  
                   __accesstop 0060        __end_of__initialization 0322       __end_of_color_read_Green 041E  
       ?_I2C_2_Master_RepStart 0033                  ___rparam_used 000001               ?_color_read_Blue 0037  
              _Interrupts_init 0654                 __pcstackCOMRAM 0033                   __pidataBANK0 046E  
          __end_of_Timer0_init 0648                     __pbssBANK0 00A8                     __pbssBANK1 0100  
            _color_writetoaddr 0608                   _T2CLKCONbits 000FBF             ?_color_writetoaddr 0035  
               main@color_code 004E            ??_color_writetoaddr 0036                        i2u43_40 001A  
                      i2u43_41 0016                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
            _get_wall_presence 032C                    _Orange_rule 0078             ?_get_wall_presence 003E  
      __end_of_Interrupts_init 0660         color_writetoaddr@value 0035               ??_color_read_Red 0039  
                      _HighISR 0008      __end_of_color_writetoaddr 0628             _I2C_2_Master_Start 066A  
           _I2C_2_Master_Write 0648                        __Hparam 0000            ??_get_wall_presence 0040  
                      __Lparam 0000              color_read_Red@tmp 003C                    _Timer0_init 0628  
          ?_I2C_2_Master_Start 0033            ?_I2C_2_Master_Write 0033                        __pcinit 02BE  
                      __ramtop 0E00                        __ptext0 04B6                        __ptext1 032C  
                      __ptext2 0032                        __ptext3 0608                        __ptext4 016A  
                      __ptext5 0214                        __ptext6 04FE                        __ptext7 037E  
                      __ptext8 03CE                        __ptext9 041E                      _T2CONbits 000FBD  
                      _seconds 005C                      _T2HLTbits 000FBE      __end_of_get_wall_presence 037E  
         ??_I2C_2_Master_Start 0034           ??_I2C_2_Master_Write 0034           end_of_initialization 0322  
            ?_color_click_init 0033             ??_color_click_init 0040                        postdec1 000FE5  
                      postinc0 000FEE                    _White_setup 000D                      _PORTFbits 000F8E  
                  _Yellow_rule 0090                      _TRISAbits 000F81                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87       color_writetoaddr@address 0036        ??_I2C_2_Master_RepStart 0034  
             ?_Interrupts_init 0033                    _CCP1CONbits 000FAB              _increment_seconds 067E  
                  _CCP2CONbits 000FA7              ??_calibrate_black 003E              ?_color_read_Green 0037  
                  _CCP3CONbits 000F26                    _CCP4CONbits 000F22              ??_calibrate_white 003E  
           ?_increment_seconds 0033             ??_color_read_Green 0039                      _Blue_rule 009C  
          ??_increment_seconds 0033                  __pidataCOMRAM 0584            start_initialization 02BE  
    __end_of_increment_seconds 0684                      _Pink_rule 0084            color_read_Green@tmp 003C  
                  __pdataBANK0 0060                    __pbssCOMRAM 0050      get_wall_presence@wall_RGB 0040  
                     ?_HighISR 0033                   ?_Timer0_init 0033                      __pintcode 0008  
         I2C_2_Master_Read@ack 0035           I2C_2_Master_Read@tmp 0036              _I2C_2_Master_Idle 05E0  
            _I2C_2_Master_Init 05B6              _I2C_2_Master_Read 0542              _I2C_2_Master_Stop 0660  
           ?_I2C_2_Master_Idle 0033             ?_I2C_2_Master_Init 0033             ?_I2C_2_Master_Read 0033  
           ?_I2C_2_Master_Stop 0033            ??_I2C_2_Master_Idle 0033            ??_I2C_2_Master_Init 0033  
          ??_I2C_2_Master_Read 0034                       _LATAbits 000F79                  _set_led_color 04FE  
          ??_I2C_2_Master_Stop 0034                       _LATCbits 000F7B                       _LATEbits 000F7D  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _PIE0bits 000E29  
                     _PIE2bits 000E2B                       _PIR0bits 000E33                      _wait_time 0031  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8             set_led_color@color 0033  
    __end_of_I2C_2_Master_Idle 0608      __end_of_I2C_2_Master_Init 05E0      __end_of_I2C_2_Master_Read 0584  
    __end_of_I2C_2_Master_Stop 066A    I2C_2_Master_Write@data_byte 0034              ??_color_read_Blue 0039  
              _calibrate_black 0214                _calibrate_white 016A                      copy_data0 02D2  
                    copy_data1 02F2                 ?_set_led_color 0033  __end_of_I2C_2_Master_RepStart 067E  
           color_read_Blue@tmp 003C                       _Red_rule 0025                       __Hrparam 0000  
                     __Lrparam 0000                     _ANSELDbits 000EA7                     _ANSELFbits 000EB4  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                       __ptext10 0648  
                     __ptext11 0660                       __ptext20 067E                       __ptext12 066A  
                     __ptext13 0674                       __ptext14 0542                       __ptext15 05E0  
                     __ptext16 05B6                       __ptext17 0628                       __ptext18 0654  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                     int$flags 005E        __end_of_calibrate_black 02BE        __end_of_calibrate_white 0214  
                   _INTCONbits 000FF2                ??_set_led_color 0035                       intlevel2 0000  
             _color_click_init 0032                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
