

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 09 14:31:31 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Generated 06/04/2022 GMT
    48                           ; 
    49                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F67K40 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82                           	psect	idataCOMRAM
    83   000A5E                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _Black_setup
    87   000A5E  0404               	dw	1028
    88   000A60  0000               	dw	0
    89   000A62  024B               	dw	587
    90   000A64  0000               	dw	0
    91   000A66  00A1               	dw	161
    92   000A68  0000               	dw	0
    93                           
    94                           ;initializer for _White_setup
    95   000A6A  28FC               	dw	10492
    96   000A6C  0000               	dw	0
    97   000A6E  1B55               	dw	6997
    98   000A70  0000               	dw	0
    99   000A72  0770               	dw	1904
   100   000A74  0000               	dw	0
   101                           
   102                           ;initializer for _wait_time
   103   000A76  00DC               	dw	220
   104                           
   105                           ;initializer for _wall_coef
   106   000A78  000F               	dw	15
   107                           
   108                           	psect	idataBANK0
   109   000736                     __pidataBANK0:
   110                           	callstack 0
   111                           
   112                           ;initializer for _White_rule
   113   000736  0064               	dw	100
   114   000738  0000               	dw	0
   115   00073A  0064               	dw	100
   116   00073C  0000               	dw	0
   117   00073E  0064               	dw	100
   118   000740  0000               	dw	0
   119                           
   120                           ;initializer for _Lightblue_rule
   121   000742  0026               	dw	38
   122   000744  0000               	dw	0
   123   000746  0048               	dw	72
   124   000748  0000               	dw	0
   125   00074A  0054               	dw	84
   126   00074C  0000               	dw	0
   127                           
   128                           ;initializer for _Orange_rule
   129   00074E  005C               	dw	92
   130   000750  0000               	dw	0
   131   000752  0027               	dw	39
   132   000754  0000               	dw	0
   133   000756  001C               	dw	28
   134   000758  0000               	dw	0
   135                           
   136                           ;initializer for _Pink_rule
   137   00075A  004D               	dw	77
   138   00075C  0000               	dw	0
   139   00075E  003C               	dw	60
   140   000760  0000               	dw	0
   141   000762  0040               	dw	64
   142   000764  0000               	dw	0
   143                           
   144                           ;initializer for _Yellow_rule
   145   000766  005D               	dw	93
   146   000768  0000               	dw	0
   147   00076A  004C               	dw	76
   148   00076C  0000               	dw	0
   149   00076E  0014               	dw	20
   150   000770  0000               	dw	0
   151                           
   152                           ;initializer for _Blue_rule
   153   000772  0003               	dw	3
   154   000774  0000               	dw	0
   155   000776  0009               	dw	9
   156   000778  0000               	dw	0
   157   00077A  0024               	dw	36
   158   00077C  0000               	dw	0
   159                           
   160                           ;initializer for _Green_rule
   161   00077E  0019               	dw	25
   162   000780  0000               	dw	0
   163   000782  0036               	dw	54
   164   000784  0000               	dw	0
   165   000786  0008               	dw	8
   166   000788  0000               	dw	0
   167                           
   168                           ;initializer for _Red_rule
   169   00078A  0048               	dw	72
   170   00078C  0000               	dw	0
   171   00078E  0002               	dw	2
   172   000790  0000               	dw	0
   173   000792  0002               	dw	2
   174   000794  0000               	dw	0
   175   000000                     _T0CON0bits	set	4053
   176   000000                     _T0CON1bits	set	4054
   177   000000                     _TRISDbits	set	3972
   178   000000                     _SSP2CON2bits	set	3802
   179   000000                     _SSP2CLKPPS	set	3612
   180   000000                     _SSP2DATPPS	set	3613
   181   000000                     _RC7PPS	set	3689
   182   000000                     _RE2PPS	set	3700
   183   000000                     _ANSELFbits	set	3764
   184   000000                     _TRISAbits	set	3969
   185   000000                     _TRISFbits	set	3974
   186   000000                     _PORTFbits	set	3982
   187   000000                     _TRISGbits	set	3975
   188   000000                     _TRISCbits	set	3971
   189   000000                     _TRISEbits	set	3973
   190   000000                     _SSP2BUF	set	3797
   191   000000                     _SSP2ADD	set	3798
   192   000000                     _SSP2CON1bits	set	3801
   193   000000                     _LATAbits	set	3961
   194   000000                     _LATGbits	set	3967
   195   000000                     _CCPR4H	set	3873
   196   000000                     _CCPR3H	set	3877
   197   000000                     _T2PR	set	4028
   198   000000                     _T2CONbits	set	4029
   199   000000                     _CCPR2H	set	4006
   200   000000                     _CCPR1H	set	4010
   201   000000                     _LATCbits	set	3963
   202   000000                     _LATEbits	set	3965
   203   000000                     _LATFbits	set	3966
   204   000000                     _RE4PPS	set	3702
   205   000000                     _RG6PPS	set	3720
   206   000000                     _RD5PPS	set	3695
   207   000000                     _ANSELDbits	set	3751
   208   000000                     _TMR0L	set	4051
   209   000000                     _TMR0H	set	4052
   210   000000                     _INTCONbits	set	4082
   211   000000                     _T2CLKCONbits	set	4031
   212   000000                     _T2HLTbits	set	4030
   213   000000                     _CCP1CONbits	set	4011
   214   000000                     _CCPTMRS0bits	set	4013
   215   000000                     _CCP2CONbits	set	4007
   216   000000                     _CCP3CONbits	set	3878
   217   000000                     _CCP4CONbits	set	3874
   218   000000                     _SSP2CON2	set	3802
   219   000000                     _SSP2STAT	set	3800
   220   000000                     _PIE0bits	set	3625
   221   000000                     _RD6PPS	set	3696
   222   000000                     _PIE2bits	set	3627
   223   000000                     _PIR0bits	set	3635
   224                           
   225                           ; #config settings
   226                           
   227                           	psect	cinit
   228   0006C8                     __pcinit:
   229                           	callstack 0
   230   0006C8                     start_initialization:
   231                           	callstack 0
   232   0006C8                     __initialization:
   233                           	callstack 0
   234                           
   235                           ; Initialize objects allocated to BANK0 (96 bytes)
   236                           ; load TBLPTR registers with __pidataBANK0
   237   0006C8  0E36               	movlw	low __pidataBANK0
   238   0006CA  6EF6               	movwf	tblptrl,c
   239   0006CC  0E07               	movlw	high __pidataBANK0
   240   0006CE  6EF7               	movwf	tblptrh,c
   241   0006D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   242   0006D2  6EF8               	movwf	tblptru,c
   243   0006D4  EE00  F060         	lfsr	0,__pdataBANK0
   244   0006D8  EE10 F060          	lfsr	1,96
   245   0006DC                     copy_data0:
   246   0006DC  0009               	tblrd		*+
   247   0006DE  CFF5 FFEE          	movff	tablat,postinc0
   248   0006E2  50E5               	movf	postdec1,w,c
   249   0006E4  50E1               	movf	fsr1l,w,c
   250   0006E6  E1FA               	bnz	copy_data0
   251                           
   252                           ; Initialize objects allocated to COMRAM (28 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254   0006E8  0E5E               	movlw	low __pidataCOMRAM
   255   0006EA  6EF6               	movwf	tblptrl,c
   256   0006EC  0E0A               	movlw	high __pidataCOMRAM
   257   0006EE  6EF7               	movwf	tblptrh,c
   258   0006F0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259   0006F2  6EF8               	movwf	tblptru,c
   260   0006F4  EE00  F02C         	lfsr	0,__pdataCOMRAM
   261   0006F8  EE10 F01C          	lfsr	1,28
   262   0006FC                     copy_data1:
   263   0006FC  0009               	tblrd		*+
   264   0006FE  CFF5 FFEE          	movff	tablat,postinc0
   265   000702  50E5               	movf	postdec1,w,c
   266   000704  50E1               	movf	fsr1l,w,c
   267   000706  E1FA               	bnz	copy_data1
   268                           
   269                           ; Clear objects allocated to BANK1 (208 bytes)
   270   000708  EE01  F000         	lfsr	0,__pbssBANK1
   271   00070C  0ED0               	movlw	208
   272   00070E                     clear_0:
   273   00070E  6AEE               	clrf	postinc0,c
   274   000710  06E8               	decf	wreg,f,c
   275   000712  E1FD               	bnz	clear_0
   276                           
   277                           ; Clear objects allocated to BANK0 (12 bytes)
   278   000714  EE00  F0C0         	lfsr	0,__pbssBANK0
   279   000718  0E0C               	movlw	12
   280   00071A                     clear_1:
   281   00071A  6AEE               	clrf	postinc0,c
   282   00071C  06E8               	decf	wreg,f,c
   283   00071E  E1FD               	bnz	clear_1
   284                           
   285                           ; Clear objects allocated to COMRAM (16 bytes)
   286   000720  EE00  F048         	lfsr	0,__pbssCOMRAM
   287   000724  0E10               	movlw	16
   288   000726                     clear_2:
   289   000726  6AEE               	clrf	postinc0,c
   290   000728  06E8               	decf	wreg,f,c
   291   00072A  E1FD               	bnz	clear_2
   292   00072C                     end_of_initialization:
   293                           	callstack 0
   294   00072C                     __end_of__initialization:
   295                           	callstack 0
   296   00072C  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   297   00072E  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   298   000730  0100               	movlb	0
   299   000732  EF59  F002         	goto	_main	;jump to C main() function
   300                           
   301                           	psect	bssCOMRAM
   302   000048                     __pbssCOMRAM:
   303                           	callstack 0
   304   000048                     _RGB:
   305                           	callstack 0
   306   000048                     	ds	12
   307   000054                     _index:
   308                           	callstack 0
   309   000054                     	ds	2
   310   000056                     _seconds:
   311                           	callstack 0
   312   000056                     	ds	2
   313                           
   314                           	psect	dataCOMRAM
   315   00002C                     __pdataCOMRAM:
   316                           	callstack 0
   317   00002C                     _Black_setup:
   318                           	callstack 0
   319   00002C                     	ds	12
   320   000038                     _White_setup:
   321                           	callstack 0
   322   000038                     	ds	12
   323   000044                     _wait_time:
   324                           	callstack 0
   325   000044                     	ds	2
   326   000046                     _wall_coef:
   327                           	callstack 0
   328   000046                     	ds	2
   329                           
   330                           	psect	bssBANK0
   331   0000C0                     __pbssBANK0:
   332                           	callstack 0
   333   0000C0                     _Black_rule:
   334                           	callstack 0
   335   0000C0                     	ds	12
   336                           
   337                           	psect	dataBANK0
   338   000060                     __pdataBANK0:
   339                           	callstack 0
   340   000060                     _White_rule:
   341                           	callstack 0
   342   000060                     	ds	12
   343   00006C                     _Lightblue_rule:
   344                           	callstack 0
   345   00006C                     	ds	12
   346   000078                     _Orange_rule:
   347                           	callstack 0
   348   000078                     	ds	12
   349   000084                     _Pink_rule:
   350                           	callstack 0
   351   000084                     	ds	12
   352   000090                     _Yellow_rule:
   353                           	callstack 0
   354   000090                     	ds	12
   355   00009C                     _Blue_rule:
   356                           	callstack 0
   357   00009C                     	ds	12
   358   0000A8                     _Green_rule:
   359                           	callstack 0
   360   0000A8                     	ds	12
   361   0000B4                     _Red_rule:
   362                           	callstack 0
   363   0000B4                     	ds	12
   364                           
   365                           	psect	bssBANK1
   366   000100                     __pbssBANK1:
   367                           	callstack 0
   368   000100                     _Color_rules:
   369                           	callstack 0
   370   000100                     	ds	108
   371   00016C                     _movement_list:
   372                           	callstack 0
   373   00016C                     	ds	100
   374                           
   375                           	psect	cstackCOMRAM
   376   000001                     __pcstackCOMRAM:
   377                           	callstack 0
   378   000001                     ??_I2C_2_Master_Idle:
   379   000001                     ?___wmul:
   380                           	callstack 0
   381   000001                     set_led_color@color:
   382                           	callstack 0
   383   000001                     initDCmotorsPWM@PWMperiod:
   384                           	callstack 0
   385   000001                     ___wmul@multiplier:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x0
   389   000001                     	ds	1
   390   000002                     ??_I2C_2_Master_Read:
   391   000002                     I2C_2_Master_Write@data_byte:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x1
   395   000002                     	ds	1
   396   000003                     color_writetoaddr@value:
   397                           	callstack 0
   398   000003                     I2C_2_Master_Read@ack:
   399                           	callstack 0
   400   000003                     ___wmul@multiplicand:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x2
   404   000003                     	ds	1
   405   000004                     color_writetoaddr@address:
   406                           	callstack 0
   407   000004                     I2C_2_Master_Read@tmp:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x3
   411   000004                     	ds	1
   412   000005                     ?_color_read_Red:
   413                           	callstack 0
   414   000005                     ?_color_read_Blue:
   415                           	callstack 0
   416   000005                     ?_color_read_Green:
   417                           	callstack 0
   418   000005                     ?_color_read_Clear:
   419                           	callstack 0
   420   000005                     ___wmul@product:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x4
   424   000005                     	ds	2
   425   000007                     ??_color_read_Red:
   426   000007                     ??_color_read_Blue:
   427   000007                     ??_color_read_Green:
   428   000007                     ??_color_read_Clear:
   429   000007                     ?___lwdiv:
   430                           	callstack 0
   431   000007                     ___lwdiv@dividend:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x6
   435   000007                     	ds	2
   436   000009                     ___lwdiv@divisor:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x8
   440   000009                     	ds	1
   441   00000A                     color_read_Red@tmp:
   442                           	callstack 0
   443   00000A                     color_read_Blue@tmp:
   444                           	callstack 0
   445   00000A                     color_read_Green@tmp:
   446                           	callstack 0
   447   00000A                     color_read_Clear@tmp:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x9
   451   00000A                     	ds	1
   452   00000B                     ___lwdiv@quotient:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0xA
   456   00000B                     	ds	1
   457   00000C                     ??_calibrate_white:
   458                           
   459                           ; 1 bytes @ 0xB
   460   00000C                     	ds	1
   461   00000D                     ___lwdiv@counter:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0xC
   465   00000D                     	ds	1
   466   00000E                     ??_calibrate_black:
   467   00000E                     setMotorPWM@m:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xD
   471   00000E                     	ds	2
   472   000010                     ??_setMotorPWM:
   473   000010                     calibrate_black@clear1:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0xF
   477   000010                     	ds	2
   478   000012                     setMotorPWM@posDuty:
   479                           	callstack 0
   480   000012                     calibrate_black@clear2:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x11
   484   000012                     	ds	1
   485   000013                     setMotorPWM@negDuty:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x12
   489   000013                     	ds	1
   490   000014                     stop@mL:
   491                           	callstack 0
   492   000014                     moveBack@mL:
   493                           	callstack 0
   494   000014                     _calibrate_black$2445:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x13
   498   000014                     	ds	2
   499   000016                     ??_color_click_init:
   500   000016                     stop@mR:
   501                           	callstack 0
   502   000016                     moveBack@mR:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x15
   506   000016                     	ds	2
   507   000018                     ??_stop:
   508   000018                     moveBack@time:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x17
   512   000018                     	ds	2
   513   00001A                     main@motorL:
   514                           	callstack 0
   515                           
   516                           ; 9 bytes @ 0x19
   517   00001A                     	ds	9
   518   000023                     main@motorR:
   519                           	callstack 0
   520                           
   521                           ; 9 bytes @ 0x22
   522   000023                     	ds	9
   523                           
   524 ;;
   525 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   526 ;;
   527 ;; *************** function _main *****************
   528 ;; Defined at:
   529 ;;		line 17 in file "main.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  motorR          9   34[COMRAM] struct DC_motor
   534 ;;  motorL          9   25[COMRAM] struct DC_motor
   535 ;;  PWMcycle        2    0        unsigned int 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   546 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   548 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   549 ;;Total ram usage:       18 bytes
   550 ;; Hardware stack levels required when called: 7
   551 ;; This function calls:
   552 ;;		_Interrupts_init
   553 ;;		_Timer0_init
   554 ;;		_color_click_init
   555 ;;		_initDCmotorsPWM
   556 ;;		_moveBack
   557 ;;		_stop
   558 ;; This function is called by:
   559 ;;		Startup code after reset
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text0
   564   0004B2                     __ptext0:
   565                           	callstack 0
   566   0004B2                     _main:
   567                           	callstack 24
   568   0004B2                     
   569                           ;main.c: 18:     Timer0_init();
   570   0004B2  EC1F  F005         	call	_Timer0_init	;wreg free
   571   0004B6                     
   572                           ;main.c: 19:     Interrupts_init();
   573   0004B6  EC43  F005         	call	_Interrupts_init	;wreg free
   574   0004BA                     
   575                           ;main.c: 20:     initDCmotorsPWM(99);
   576   0004BA  0E00               	movlw	0
   577   0004BC  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   578   0004BE  0E63               	movlw	99
   579   0004C0  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   580   0004C2  ECA8  F002         	call	_initDCmotorsPWM	;wreg free
   581   0004C6                     
   582                           ;main.c: 22:     color_click_init();
   583   0004C6  ECCF  F000         	call	_color_click_init	;wreg free
   584   0004CA                     
   585                           ;main.c: 24:     ANSELFbits.ANSELF2 = 0;
   586   0004CA  010E               	movlb	14	; () banked
   587   0004CC  95B4               	bcf	180,2,b	;volatile
   588   0004CE                     
   589                           ; BSR set to: 14
   590                           ;main.c: 25:     TRISFbits.TRISF2 = 1;
   591   0004CE  8486               	bsf	134,2,c	;volatile
   592   0004D0                     
   593                           ; BSR set to: 14
   594                           ;main.c: 27:     DC_motor motorL, motorR;;main.c: 28:     motorL.power=0;
   595   0004D0  0E00               	movlw	0
   596   0004D2  6E1A               	movwf	main@motorL^0,c
   597   0004D4                     
   598                           ; BSR set to: 14
   599                           ;main.c: 29:     motorL.direction=1;
   600   0004D4  0E01               	movlw	1
   601   0004D6  6E1B               	movwf	(main@motorL+1)^0,c
   602   0004D8                     
   603                           ; BSR set to: 14
   604                           ;main.c: 30:     motorL.brakemode=1;
   605   0004D8  0E01               	movlw	1
   606   0004DA  6E1C               	movwf	(main@motorL+2)^0,c
   607   0004DC                     
   608                           ; BSR set to: 14
   609                           ;main.c: 31:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   610   0004DC  0EAA               	movlw	170
   611   0004DE  6E1F               	movwf	(main@motorL+5)^0,c
   612   0004E0  0E0F               	movlw	15
   613   0004E2  6E20               	movwf	(main@motorL+6)^0,c
   614   0004E4                     
   615                           ; BSR set to: 14
   616                           ;main.c: 32:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   617   0004E4  0EA6               	movlw	166
   618   0004E6  6E21               	movwf	(main@motorL+7)^0,c
   619   0004E8  0E0F               	movlw	15
   620   0004EA  6E22               	movwf	(main@motorL+8)^0,c
   621   0004EC                     
   622                           ; BSR set to: 14
   623                           ;main.c: 33:     motorL.PWMperiod=PWMcycle;
   624   0004EC  0E00               	movlw	0
   625   0004EE  6E1E               	movwf	(main@motorL+4)^0,c
   626   0004F0  0E63               	movlw	99
   627   0004F2  6E1D               	movwf	(main@motorL+3)^0,c
   628   0004F4                     
   629                           ; BSR set to: 14
   630                           ;main.c: 35:     motorR.power=0;
   631   0004F4  0E00               	movlw	0
   632   0004F6  6E23               	movwf	main@motorR^0,c
   633   0004F8                     
   634                           ; BSR set to: 14
   635                           ;main.c: 36:     motorR.direction=1;
   636   0004F8  0E01               	movlw	1
   637   0004FA  6E24               	movwf	(main@motorR+1)^0,c
   638   0004FC                     
   639                           ; BSR set to: 14
   640                           ;main.c: 37:     motorR.brakemode=1;
   641   0004FC  0E01               	movlw	1
   642   0004FE  6E25               	movwf	(main@motorR+2)^0,c
   643   000500                     
   644                           ; BSR set to: 14
   645                           ;main.c: 38:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   646   000500  0E25               	movlw	37
   647   000502  6E28               	movwf	(main@motorR+5)^0,c
   648   000504  0E0F               	movlw	15
   649   000506  6E29               	movwf	(main@motorR+6)^0,c
   650   000508                     
   651                           ; BSR set to: 14
   652                           ;main.c: 39:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   653   000508  0E21               	movlw	33
   654   00050A  6E2A               	movwf	(main@motorR+7)^0,c
   655   00050C  0E0F               	movlw	15
   656   00050E  6E2B               	movwf	(main@motorR+8)^0,c
   657   000510                     
   658                           ; BSR set to: 14
   659                           ;main.c: 40:     motorR.PWMperiod=PWMcycle;
   660   000510  0E00               	movlw	0
   661   000512  6E27               	movwf	(main@motorR+4)^0,c
   662   000514  0E63               	movlw	99
   663   000516  6E26               	movwf	(main@motorR+3)^0,c
   664   000518                     l2867:
   665                           
   666                           ;main.c: 56:         moveBack(&motorL, &motorR, 10);
   667   000518  0E1A               	movlw	low main@motorL
   668   00051A  6E14               	movwf	moveBack@mL^0,c
   669   00051C  0E00               	movlw	high main@motorL
   670   00051E  6E15               	movwf	(moveBack@mL+1)^0,c
   671   000520  0E23               	movlw	low main@motorR
   672   000522  6E16               	movwf	moveBack@mR^0,c
   673   000524  0E00               	movlw	high main@motorR
   674   000526  6E17               	movwf	(moveBack@mR+1)^0,c
   675   000528  0E00               	movlw	0
   676   00052A  6E19               	movwf	(moveBack@time+1)^0,c
   677   00052C  0E0A               	movlw	10
   678   00052E  6E18               	movwf	moveBack@time^0,c
   679   000530  ECF0  F002         	call	_moveBack	;wreg free
   680   000534                     
   681                           ;main.c: 57:         stop(&motorL,&motorR);
   682   000534  0E1A               	movlw	low main@motorL
   683   000536  6E14               	movwf	stop@mL^0,c
   684   000538  0E00               	movlw	high main@motorL
   685   00053A  6E15               	movwf	(stop@mL+1)^0,c
   686   00053C  0E23               	movlw	low main@motorR
   687   00053E  6E16               	movwf	stop@mR^0,c
   688   000540  0E00               	movlw	high main@motorR
   689   000542  6E17               	movwf	(stop@mR+1)^0,c
   690   000544  EC6B  F004         	call	_stop	;wreg free
   691   000548  EF8C  F002         	goto	l2867
   692   00054C  EF17  F000         	goto	start
   693   000550                     __end_of_main:
   694                           	callstack 0
   695                           
   696 ;; *************** function _stop *****************
   697 ;; Defined at:
   698 ;;		line 92 in file "dc_motor.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  mL              2   19[COMRAM] PTR struct DC_motor
   701 ;;		 -> main@motorL(9), return_back@motorL(2), 
   702 ;;  mR              2   21[COMRAM] PTR struct DC_motor
   703 ;;		 -> main@motorR(9), return_back@motorR(2), 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   718 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   719 ;;Total ram usage:        6 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; Hardware stack levels required when called: 4
   722 ;; This function calls:
   723 ;;		_setMotorPWM
   724 ;; This function is called by:
   725 ;;		_main
   726 ;;		_RobotMovement
   727 ;;		_return_back
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text1
   732   0008D6                     __ptext1:
   733                           	callstack 0
   734   0008D6                     _stop:
   735                           	callstack 26
   736   0008D6                     
   737                           ;dc_motor.c: 92: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 93: {;d
      +                          c_motor.c: 94:     (*mL).power=0;
   738   0008D6  C014  FFD9         	movff	stop@mL,fsr2l
   739   0008DA  C015  FFDA         	movff	stop@mL+1,fsr2h
   740   0008DE  0E00               	movlw	0
   741   0008E0  6EDF               	movwf	indf2,c
   742                           
   743                           ;dc_motor.c: 95:     (*mR).power=0;
   744   0008E2  C016  FFD9         	movff	stop@mR,fsr2l
   745   0008E6  C017  FFDA         	movff	stop@mR+1,fsr2h
   746   0008EA  0E00               	movlw	0
   747   0008EC  6EDF               	movwf	indf2,c
   748   0008EE                     
   749                           ;dc_motor.c: 96:     setMotorPWM(mL);
   750   0008EE  C014  F00E         	movff	stop@mL,setMotorPWM@m
   751   0008F2  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
   752   0008F6  EC19  F000         	call	_setMotorPWM	;wreg free
   753   0008FA                     
   754                           ;dc_motor.c: 97:     setMotorPWM(mR);
   755   0008FA  C016  F00E         	movff	stop@mR,setMotorPWM@m
   756   0008FE  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
   757   000902  EC19  F000         	call	_setMotorPWM	;wreg free
   758   000906                     
   759                           ;dc_motor.c: 98:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   760   000906  0E52               	movlw	82
   761   000908  6E19               	movwf	(??_stop+1)^0,c
   762   00090A  0E2B               	movlw	43
   763   00090C  6E18               	movwf	??_stop^0,c
   764   00090E  0E00               	movlw	0
   765   000910                     u2277:
   766   000910  2EE8               	decfsz	wreg,f,c
   767   000912  D7FE               	bra	u2277
   768   000914  2E18               	decfsz	??_stop^0,f,c
   769   000916  D7FC               	bra	u2277
   770   000918  2E19               	decfsz	(??_stop+1)^0,f,c
   771   00091A  D7FA               	bra	u2277
   772   00091C  D000               	nop2	
   773   00091E  0012               	return		;funcret
   774   000920                     __end_of_stop:
   775                           	callstack 0
   776                           
   777 ;; *************** function _moveBack *****************
   778 ;; Defined at:
   779 ;;		line 274 in file "dc_motor.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  mL              2   19[COMRAM] PTR struct DC_motor
   782 ;;		 -> main@motorL(9), 
   783 ;;  mR              2   21[COMRAM] PTR struct DC_motor
   784 ;;		 -> main@motorR(9), 
   785 ;;  time            2   23[COMRAM] unsigned int 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   797 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   800 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   801 ;;Total ram usage:        6 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 4
   804 ;; This function calls:
   805 ;;		_setMotorPWM
   806 ;; This function is called by:
   807 ;;		_main
   808 ;;		_RobotMovement
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text2
   813   0005E0                     __ptext2:
   814                           	callstack 0
   815   0005E0                     _moveBack:
   816                           	callstack 26
   817   0005E0                     
   818                           ;dc_motor.c: 274: void moveBack(struct DC_motor *mL, struct DC_motor *mR, unsigned int t
      +                          ime);dc_motor.c: 275: {;dc_motor.c: 276:     seconds = 0;
   819   0005E0  0E00               	movlw	0
   820   0005E2  6E57               	movwf	(_seconds+1)^0,c
   821   0005E4  0E00               	movlw	0
   822   0005E6  6E56               	movwf	_seconds^0,c
   823                           
   824                           ;dc_motor.c: 277:     while (seconds<time)
   825   0005E8  EF1E  F003         	goto	l2581
   826   0005EC                     l2571:
   827                           
   828                           ;dc_motor.c: 278:     {;dc_motor.c: 279:         (*mL).direction=1;
   829   0005EC  EE20 F001          	lfsr	2,1
   830   0005F0  5014               	movf	moveBack@mL^0,w,c
   831   0005F2  26D9               	addwf	fsr2l,f,c
   832   0005F4  5015               	movf	(moveBack@mL+1)^0,w,c
   833   0005F6  22DA               	addwfc	fsr2h,f,c
   834   0005F8  0E01               	movlw	1
   835   0005FA  6EDF               	movwf	indf2,c
   836                           
   837                           ;dc_motor.c: 280:         (*mR).direction=1;
   838   0005FC  EE20 F001          	lfsr	2,1
   839   000600  5016               	movf	moveBack@mR^0,w,c
   840   000602  26D9               	addwf	fsr2l,f,c
   841   000604  5017               	movf	(moveBack@mR+1)^0,w,c
   842   000606  22DA               	addwfc	fsr2h,f,c
   843   000608  0E01               	movlw	1
   844   00060A  6EDF               	movwf	indf2,c
   845   00060C                     
   846                           ;dc_motor.c: 281:         (*mL).power=50;
   847   00060C  C014  FFD9         	movff	moveBack@mL,fsr2l
   848   000610  C015  FFDA         	movff	moveBack@mL+1,fsr2h
   849   000614  0E32               	movlw	50
   850   000616  6EDF               	movwf	indf2,c
   851   000618                     
   852                           ;dc_motor.c: 282:         (*mR).power=50;
   853   000618  C016  FFD9         	movff	moveBack@mR,fsr2l
   854   00061C  C017  FFDA         	movff	moveBack@mR+1,fsr2h
   855   000620  0E32               	movlw	50
   856   000622  6EDF               	movwf	indf2,c
   857   000624                     
   858                           ;dc_motor.c: 283:         setMotorPWM(mL);
   859   000624  C014  F00E         	movff	moveBack@mL,setMotorPWM@m
   860   000628  C015  F00F         	movff	moveBack@mL+1,setMotorPWM@m+1
   861   00062C  EC19  F000         	call	_setMotorPWM	;wreg free
   862   000630                     
   863                           ;dc_motor.c: 284:         setMotorPWM(mR);
   864   000630  C016  F00E         	movff	moveBack@mR,setMotorPWM@m
   865   000634  C017  F00F         	movff	moveBack@mR+1,setMotorPWM@m+1
   866   000638  EC19  F000         	call	_setMotorPWM	;wreg free
   867   00063C                     l2581:
   868                           
   869                           ;dc_motor.c: 277:     while (seconds<time)
   870   00063C  5018               	movf	moveBack@time^0,w,c
   871   00063E  5C56               	subwf	_seconds^0,w,c
   872   000640  5019               	movf	(moveBack@time+1)^0,w,c
   873   000642  5857               	subwfb	(_seconds+1)^0,w,c
   874   000644  A0D8               	btfss	status,0,c
   875   000646  EF27  F003         	goto	u1501
   876   00064A  EF29  F003         	goto	u1500
   877   00064E                     u1501:
   878   00064E  EFF6  F002         	goto	l2571
   879   000652                     u1500:
   880   000652  0012               	return		;funcret
   881   000654                     __end_of_moveBack:
   882                           	callstack 0
   883                           
   884 ;; *************** function _setMotorPWM *****************
   885 ;; Defined at:
   886 ;;		line 69 in file "dc_motor.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  m               2   13[COMRAM] PTR struct DC_motor
   889 ;;		 -> main@motorR(9), main@motorL(9), return_back@motorR(2), return_back@motorL(2), 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  negDuty         1   18[COMRAM] unsigned char 
   892 ;;  posDuty         1   17[COMRAM] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   905 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   906 ;;Total ram usage:        6 bytes
   907 ;; Hardware stack levels used: 1
   908 ;; Hardware stack levels required when called: 3
   909 ;; This function calls:
   910 ;;		___lwdiv
   911 ;;		___wmul
   912 ;; This function is called by:
   913 ;;		_stop
   914 ;;		_moveBack
   915 ;;		_turnLeft
   916 ;;		_turnRight
   917 ;;		_turnLeftLong
   918 ;;		_turnRightLong
   919 ;;		_fullSpeedAhead
   920 ;;		_TimedfullSpeedAhead
   921 ;;		_Calibrate
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text3
   926   000032                     __ptext3:
   927                           	callstack 0
   928   000032                     _setMotorPWM:
   929                           	callstack 26
   930   000032                     
   931                           ;dc_motor.c: 69: void setMotorPWM(DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
   932   000032  EE20 F002          	lfsr	2,2
   933   000036  500E               	movf	setMotorPWM@m^0,w,c
   934   000038  26D9               	addwf	fsr2l,f,c
   935   00003A  500F               	movf	(setMotorPWM@m+1)^0,w,c
   936   00003C  22DA               	addwfc	fsr2h,f,c
   937   00003E  50DF               	movf	indf2,w,c
   938   000040  B4D8               	btfsc	status,2,c
   939   000042  EF25  F000         	goto	u1221
   940   000046  EF27  F000         	goto	u1220
   941   00004A                     u1221:
   942   00004A  EF5B  F000         	goto	l2265
   943   00004E                     u1220:
   944   00004E                     
   945                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
   946   00004E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
   947   000052  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
   948   000056  50DF               	movf	indf2,w,c
   949   000058  6E10               	movwf	??_setMotorPWM^0,c
   950   00005A  5010               	movf	??_setMotorPWM^0,w,c
   951   00005C  6E01               	movwf	___wmul@multiplier^0,c
   952   00005E  6A02               	clrf	(___wmul@multiplier+1)^0,c
   953   000060  EE20 F003          	lfsr	2,3
   954   000064  500E               	movf	setMotorPWM@m^0,w,c
   955   000066  26D9               	addwf	fsr2l,f,c
   956   000068  500F               	movf	(setMotorPWM@m+1)^0,w,c
   957   00006A  22DA               	addwfc	fsr2h,f,c
   958   00006C  CFDE F003          	movff	postinc2,___wmul@multiplicand
   959   000070  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
   960   000074  ECFC  F004         	call	___wmul	;wreg free
   961   000078  C001  F007         	movff	?___wmul,___lwdiv@dividend
   962   00007C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
   963   000080  0E00               	movlw	0
   964   000082  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
   965   000084  0E64               	movlw	100
   966   000086  6E09               	movwf	___lwdiv@divisor^0,c
   967   000088  EC2A  F003         	call	___lwdiv	;wreg free
   968   00008C  EE20 F003          	lfsr	2,3
   969   000090  500E               	movf	setMotorPWM@m^0,w,c
   970   000092  26D9               	addwf	fsr2l,f,c
   971   000094  500F               	movf	(setMotorPWM@m+1)^0,w,c
   972   000096  22DA               	addwfc	fsr2h,f,c
   973   000098  50DF               	movf	indf2,w,c
   974   00009A  6E11               	movwf	(??_setMotorPWM+1)^0,c
   975   00009C  5007               	movf	?___lwdiv^0,w,c
   976   00009E  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
   977   0000A0  6E12               	movwf	setMotorPWM@posDuty^0,c
   978   0000A2                     
   979                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
   980   0000A2  EE20 F003          	lfsr	2,3
   981   0000A6  500E               	movf	setMotorPWM@m^0,w,c
   982   0000A8  26D9               	addwf	fsr2l,f,c
   983   0000AA  500F               	movf	(setMotorPWM@m+1)^0,w,c
   984   0000AC  22DA               	addwfc	fsr2h,f,c
   985   0000AE  50DF               	movf	indf2,w,c
   986   0000B0  6E13               	movwf	setMotorPWM@negDuty^0,c
   987                           
   988                           ;dc_motor.c: 76:     }
   989   0000B2  EF7E  F000         	goto	l2269
   990   0000B6                     l2265:
   991                           
   992                           ;dc_motor.c: 78:         posDuty=0;
   993   0000B6  0E00               	movlw	0
   994   0000B8  6E12               	movwf	setMotorPWM@posDuty^0,c
   995   0000BA                     
   996                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
   997   0000BA  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
   998   0000BE  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
   999   0000C2  50DF               	movf	indf2,w,c
  1000   0000C4  6E10               	movwf	??_setMotorPWM^0,c
  1001   0000C6  5010               	movf	??_setMotorPWM^0,w,c
  1002   0000C8  6E01               	movwf	___wmul@multiplier^0,c
  1003   0000CA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1004   0000CC  EE20 F003          	lfsr	2,3
  1005   0000D0  500E               	movf	setMotorPWM@m^0,w,c
  1006   0000D2  26D9               	addwf	fsr2l,f,c
  1007   0000D4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1008   0000D6  22DA               	addwfc	fsr2h,f,c
  1009   0000D8  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1010   0000DC  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1011   0000E0  ECFC  F004         	call	___wmul	;wreg free
  1012   0000E4  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1013   0000E8  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1014   0000EC  0E00               	movlw	0
  1015   0000EE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1016   0000F0  0E64               	movlw	100
  1017   0000F2  6E09               	movwf	___lwdiv@divisor^0,c
  1018   0000F4  EC2A  F003         	call	___lwdiv	;wreg free
  1019   0000F8  5007               	movf	?___lwdiv^0,w,c
  1020   0000FA  6E13               	movwf	setMotorPWM@negDuty^0,c
  1021   0000FC                     l2269:
  1022                           
  1023                           ;dc_motor.c: 82:     if (m->direction) {
  1024   0000FC  EE20 F001          	lfsr	2,1
  1025   000100  500E               	movf	setMotorPWM@m^0,w,c
  1026   000102  26D9               	addwf	fsr2l,f,c
  1027   000104  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1028   000106  22DA               	addwfc	fsr2h,f,c
  1029   000108  50DF               	movf	indf2,w,c
  1030   00010A  B4D8               	btfsc	status,2,c
  1031   00010C  EF8A  F000         	goto	u1231
  1032   000110  EF8C  F000         	goto	u1230
  1033   000114                     u1231:
  1034   000114  EFAE  F000         	goto	l2273
  1035   000118                     u1230:
  1036   000118                     
  1037                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
  1038   000118  EE20 F005          	lfsr	2,5
  1039   00011C  500E               	movf	setMotorPWM@m^0,w,c
  1040   00011E  26D9               	addwf	fsr2l,f,c
  1041   000120  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1042   000122  22DA               	addwfc	fsr2h,f,c
  1043   000124  CFDE F010          	movff	postinc2,??_setMotorPWM
  1044   000128  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1045   00012C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1046   000130  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1047   000134  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1048                           
  1049                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
  1050   000138  EE20 F007          	lfsr	2,7
  1051   00013C  500E               	movf	setMotorPWM@m^0,w,c
  1052   00013E  26D9               	addwf	fsr2l,f,c
  1053   000140  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1054   000142  22DA               	addwfc	fsr2h,f,c
  1055   000144  CFDE F010          	movff	postinc2,??_setMotorPWM
  1056   000148  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1057   00014C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1058   000150  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1059   000154  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1060                           
  1061                           ;dc_motor.c: 85:     } else {
  1062   000158  EFCE  F000         	goto	l213
  1063   00015C                     l2273:
  1064                           
  1065                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
  1066   00015C  EE20 F005          	lfsr	2,5
  1067   000160  500E               	movf	setMotorPWM@m^0,w,c
  1068   000162  26D9               	addwf	fsr2l,f,c
  1069   000164  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1070   000166  22DA               	addwfc	fsr2h,f,c
  1071   000168  CFDE F010          	movff	postinc2,??_setMotorPWM
  1072   00016C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1073   000170  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1074   000174  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1075   000178  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1076                           
  1077                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
  1078   00017C  EE20 F007          	lfsr	2,7
  1079   000180  500E               	movf	setMotorPWM@m^0,w,c
  1080   000182  26D9               	addwf	fsr2l,f,c
  1081   000184  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1082   000186  22DA               	addwfc	fsr2h,f,c
  1083   000188  CFDE F010          	movff	postinc2,??_setMotorPWM
  1084   00018C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1085   000190  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1086   000194  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1087   000198  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1088   00019C                     l213:
  1089   00019C  0012               	return		;funcret
  1090   00019E                     __end_of_setMotorPWM:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function ___wmul *****************
  1094 ;; Defined at:
  1095 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  multiplier      2    0[COMRAM] unsigned int 
  1098 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  product         2    4[COMRAM] unsigned int 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  2    0[COMRAM] unsigned int 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, prodl, prodh
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1113 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1114 ;;Total ram usage:        6 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; Hardware stack levels required when called: 2
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_setMotorPWM
  1121 ;;		_get_color_distance
  1122 ;;		_get_color_code
  1123 ;;		_get_wall_presence
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text4
  1128   0009F8                     __ptext4:
  1129                           	callstack 0
  1130   0009F8                     ___wmul:
  1131                           	callstack 26
  1132   0009F8  5001               	movf	___wmul@multiplier^0,w,c
  1133   0009FA  0203               	mulwf	___wmul@multiplicand^0,c
  1134   0009FC  CFF3 F005          	movff	prodl,___wmul@product
  1135   000A00  CFF4 F006          	movff	prodh,___wmul@product+1
  1136   000A04  5001               	movf	___wmul@multiplier^0,w,c
  1137   000A06  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1138   000A08  50F3               	movf	243,w,c
  1139   000A0A  2606               	addwf	(___wmul@product+1)^0,f,c
  1140   000A0C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1141   000A0E  0203               	mulwf	___wmul@multiplicand^0,c
  1142   000A10  50F3               	movf	243,w,c
  1143   000A12  2606               	addwf	(___wmul@product+1)^0,f,c
  1144   000A14  C005  F001         	movff	___wmul@product,?___wmul
  1145   000A18  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1146   000A1C  0012               	return		;funcret
  1147   000A1E                     __end_of___wmul:
  1148                           	callstack 0
  1149                           
  1150 ;; *************** function _initDCmotorsPWM *****************
  1151 ;; Defined at:
  1152 ;;		line 9 in file "dc_motor.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  PWMperiod       2    0[COMRAM] int 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;Total ram usage:        2 bytes
  1171 ;; Hardware stack levels used: 1
  1172 ;; Hardware stack levels required when called: 2
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text5
  1181   000550                     __ptext5:
  1182                           	callstack 0
  1183   000550                     _initDCmotorsPWM:
  1184                           	callstack 28
  1185   000550                     
  1186                           ;dc_motor.c: 11:     TRISEbits.TRISE2=0;
  1187   000550  9485               	bcf	133,2,c	;volatile
  1188                           
  1189                           ;dc_motor.c: 12:     TRISCbits.TRISC7=0;
  1190   000552  9E83               	bcf	131,7,c	;volatile
  1191                           
  1192                           ;dc_motor.c: 13:     TRISGbits.TRISG6=0;
  1193   000554  9C87               	bcf	135,6,c	;volatile
  1194                           
  1195                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  1196   000556  9885               	bcf	133,4,c	;volatile
  1197                           
  1198                           ;dc_motor.c: 16:     LATEbits.LATE2=0;
  1199   000558  947D               	bcf	125,2,c	;volatile
  1200                           
  1201                           ;dc_motor.c: 17:     LATCbits.LATC7=0;
  1202   00055A  9E7B               	bcf	123,7,c	;volatile
  1203                           
  1204                           ;dc_motor.c: 18:     LATGbits.LATG6=0;
  1205   00055C  9C7F               	bcf	127,6,c	;volatile
  1206                           
  1207                           ;dc_motor.c: 19:     LATEbits.LATE4=0;
  1208   00055E  987D               	bcf	125,4,c	;volatile
  1209   000560                     
  1210                           ;dc_motor.c: 22:     RE2PPS=0x05;
  1211   000560  0E05               	movlw	5
  1212   000562  010E               	movlb	14	; () banked
  1213   000564  6F74               	movwf	116,b	;volatile
  1214                           
  1215                           ;dc_motor.c: 23:     RE4PPS=0x06;
  1216   000566  0E06               	movlw	6
  1217   000568  6F76               	movwf	118,b	;volatile
  1218                           
  1219                           ;dc_motor.c: 24:     RC7PPS=0x07;
  1220   00056A  0E07               	movlw	7
  1221   00056C  6F69               	movwf	105,b	;volatile
  1222                           
  1223                           ;dc_motor.c: 25:     RG6PPS=0x08;
  1224   00056E  0E08               	movlw	8
  1225   000570  6F88               	movwf	136,b	;volatile
  1226                           
  1227                           ;dc_motor.c: 28:     T2CONbits.CKPS=0b100;
  1228   000572  50BD               	movf	189,w,c	;volatile
  1229   000574  0B8F               	andlw	-113
  1230   000576  0940               	iorlw	64
  1231   000578  6EBD               	movwf	189,c	;volatile
  1232                           
  1233                           ;dc_motor.c: 29:     T2HLTbits.MODE=0b00000;
  1234   00057A  0EE0               	movlw	-32
  1235   00057C  16BE               	andwf	190,f,c	;volatile
  1236                           
  1237                           ;dc_motor.c: 30:     T2CLKCONbits.CS=0b0001;
  1238   00057E  50BF               	movf	191,w,c	;volatile
  1239   000580  0BF0               	andlw	-16
  1240   000582  0901               	iorlw	1
  1241   000584  6EBF               	movwf	191,c	;volatile
  1242                           
  1243                           ;dc_motor.c: 34:     T2PR=99;
  1244   000586  0E63               	movlw	99
  1245   000588  6EBC               	movwf	188,c	;volatile
  1246   00058A                     
  1247                           ; BSR set to: 14
  1248                           ;dc_motor.c: 35:     T2CONbits.ON=1;
  1249   00058A  8EBD               	bsf	189,7,c	;volatile
  1250                           
  1251                           ;dc_motor.c: 39:     CCPR1H=0;
  1252   00058C  0E00               	movlw	0
  1253   00058E  6EAA               	movwf	170,c	;volatile
  1254                           
  1255                           ;dc_motor.c: 40:     CCPR2H=0;
  1256   000590  0E00               	movlw	0
  1257   000592  6EA6               	movwf	166,c	;volatile
  1258                           
  1259                           ;dc_motor.c: 41:     CCPR3H=0;
  1260   000594  0E00               	movlw	0
  1261   000596  010F               	movlb	15	; () banked
  1262   000598  6F25               	movwf	37,b	;volatile
  1263                           
  1264                           ;dc_motor.c: 42:     CCPR4H=0;
  1265   00059A  0E00               	movlw	0
  1266   00059C  6F21               	movwf	33,b	;volatile
  1267                           
  1268                           ;dc_motor.c: 45:     CCPTMRS0bits.C1TSEL=0;
  1269   00059E  0EFC               	movlw	-4
  1270   0005A0  16AD               	andwf	173,f,c	;volatile
  1271                           
  1272                           ;dc_motor.c: 46:     CCPTMRS0bits.C2TSEL=0;
  1273   0005A2  0EF3               	movlw	-13
  1274   0005A4  16AD               	andwf	173,f,c	;volatile
  1275                           
  1276                           ;dc_motor.c: 47:     CCPTMRS0bits.C3TSEL=0;
  1277   0005A6  0ECF               	movlw	-49
  1278   0005A8  16AD               	andwf	173,f,c	;volatile
  1279                           
  1280                           ;dc_motor.c: 48:     CCPTMRS0bits.C4TSEL=0;
  1281   0005AA  0E3F               	movlw	-193
  1282   0005AC  16AD               	andwf	173,f,c	;volatile
  1283   0005AE                     
  1284                           ; BSR set to: 15
  1285                           ;dc_motor.c: 51:     CCP1CONbits.FMT=1;
  1286   0005AE  88AB               	bsf	171,4,c	;volatile
  1287                           
  1288                           ;dc_motor.c: 52:     CCP1CONbits.CCP1MODE=0b1100;
  1289   0005B0  50AB               	movf	171,w,c	;volatile
  1290   0005B2  0BF0               	andlw	-16
  1291   0005B4  090C               	iorlw	12
  1292   0005B6  6EAB               	movwf	171,c	;volatile
  1293   0005B8                     
  1294                           ; BSR set to: 15
  1295                           ;dc_motor.c: 53:     CCP1CONbits.EN=1;
  1296   0005B8  8EAB               	bsf	171,7,c	;volatile
  1297   0005BA                     
  1298                           ; BSR set to: 15
  1299                           ;dc_motor.c: 55:     CCP2CONbits.FMT=1;
  1300   0005BA  88A7               	bsf	167,4,c	;volatile
  1301                           
  1302                           ;dc_motor.c: 56:     CCP2CONbits.CCP2MODE=0b1100;
  1303   0005BC  50A7               	movf	167,w,c	;volatile
  1304   0005BE  0BF0               	andlw	-16
  1305   0005C0  090C               	iorlw	12
  1306   0005C2  6EA7               	movwf	167,c	;volatile
  1307   0005C4                     
  1308                           ; BSR set to: 15
  1309                           ;dc_motor.c: 57:     CCP2CONbits.EN=1;
  1310   0005C4  8EA7               	bsf	167,7,c	;volatile
  1311   0005C6                     
  1312                           ; BSR set to: 15
  1313                           ;dc_motor.c: 59:     CCP3CONbits.FMT=1;
  1314   0005C6  8926               	bsf	38,4,b	;volatile
  1315                           
  1316                           ;dc_motor.c: 60:     CCP3CONbits.CCP3MODE=0b1100;
  1317   0005C8  5126               	movf	38,w,b	;volatile
  1318   0005CA  0BF0               	andlw	-16
  1319   0005CC  090C               	iorlw	12
  1320   0005CE  6F26               	movwf	38,b	;volatile
  1321   0005D0                     
  1322                           ; BSR set to: 15
  1323                           ;dc_motor.c: 61:     CCP3CONbits.EN=1;
  1324   0005D0  8F26               	bsf	38,7,b	;volatile
  1325   0005D2                     
  1326                           ; BSR set to: 15
  1327                           ;dc_motor.c: 63:     CCP4CONbits.FMT=1;
  1328   0005D2  8922               	bsf	34,4,b	;volatile
  1329                           
  1330                           ;dc_motor.c: 64:     CCP4CONbits.CCP4MODE=0b1100;
  1331   0005D4  5122               	movf	34,w,b	;volatile
  1332   0005D6  0BF0               	andlw	-16
  1333   0005D8  090C               	iorlw	12
  1334   0005DA  6F22               	movwf	34,b	;volatile
  1335   0005DC                     
  1336                           ; BSR set to: 15
  1337                           ;dc_motor.c: 65:     CCP4CONbits.EN=1;
  1338   0005DC  8F22               	bsf	34,7,b	;volatile
  1339   0005DE                     
  1340                           ; BSR set to: 15
  1341   0005DE  0012               	return		;funcret
  1342   0005E0                     __end_of_initDCmotorsPWM:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _color_click_init *****************
  1346 ;; Defined at:
  1347 ;;		line 30 in file "color.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1365 ;;Total ram usage:        1 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 6
  1368 ;; This function calls:
  1369 ;;		_I2C_2_Master_Init
  1370 ;;		_calibrate_black
  1371 ;;		_calibrate_white
  1372 ;;		_color_writetoaddr
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text6
  1379   00019E                     __ptext6:
  1380                           	callstack 0
  1381   00019E                     _color_click_init:
  1382                           	callstack 24
  1383   00019E                     
  1384                           ;color.c: 33:     I2C_2_Master_Init();
  1385   00019E  ECD3  F004         	call	_I2C_2_Master_Init	;wreg free
  1386   0001A2                     
  1387                           ;color.c: 36:   color_writetoaddr(0x00, 0x01);
  1388   0001A2  0E01               	movlw	1
  1389   0001A4  6E03               	movwf	color_writetoaddr@value^0,c
  1390   0001A6  0E00               	movlw	0
  1391   0001A8  EC0F  F005         	call	_color_writetoaddr
  1392   0001AC                     
  1393                           ;color.c: 37:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1394   0001AC  0E3F               	movlw	63
  1395   0001AE  6E16               	movwf	??_color_click_init^0,c
  1396   0001B0  0E55               	movlw	85
  1397   0001B2                     u2287:
  1398   0001B2  2EE8               	decfsz	wreg,f,c
  1399   0001B4  D7FE               	bra	u2287
  1400   0001B6  2E16               	decfsz	??_color_click_init^0,f,c
  1401   0001B8  D7FC               	bra	u2287
  1402   0001BA  F000               	nop	
  1403   0001BC                     
  1404                           ;color.c: 40:  color_writetoaddr(0x00, 0x03);
  1405   0001BC  0E03               	movlw	3
  1406   0001BE  6E03               	movwf	color_writetoaddr@value^0,c
  1407   0001C0  0E00               	movlw	0
  1408   0001C2  EC0F  F005         	call	_color_writetoaddr
  1409   0001C6                     
  1410                           ;color.c: 43:  color_writetoaddr(0x01, 0xD5);
  1411   0001C6  0ED5               	movlw	213
  1412   0001C8  6E03               	movwf	color_writetoaddr@value^0,c
  1413   0001CA  0E01               	movlw	1
  1414   0001CC  EC0F  F005         	call	_color_writetoaddr
  1415   0001D0                     
  1416                           ;color.c: 45:     TRISFbits.TRISF7 = 0;
  1417   0001D0  9E86               	bcf	134,7,c	;volatile
  1418   0001D2                     
  1419                           ;color.c: 46:     TRISGbits.TRISG1 = 0;
  1420   0001D2  9287               	bcf	135,1,c	;volatile
  1421   0001D4                     
  1422                           ;color.c: 47:     TRISAbits.TRISA4 = 0;
  1423   0001D4  9881               	bcf	129,4,c	;volatile
  1424   0001D6                     
  1425                           ;color.c: 49:     Color_rules[0] = Red_rule;
  1426   0001D6  EE20  F0B4         	lfsr	2,_Red_rule
  1427   0001DA  EE11  F000         	lfsr	1,_Color_rules
  1428   0001DE  0E0B               	movlw	11
  1429   0001E0                     u1241:
  1430   0001E0  CFDB FFE3          	movff	plusw2,plusw1
  1431   0001E4  06E8               	decf	wreg,f,c
  1432   0001E6  E2FC               	bc	u1241
  1433   0001E8                     
  1434                           ;color.c: 50:     Color_rules[1] = Green_rule;
  1435   0001E8  EE20  F0A8         	lfsr	2,_Green_rule
  1436   0001EC  EE11  F00C         	lfsr	1,_Color_rules+12
  1437   0001F0  0E0B               	movlw	11
  1438   0001F2                     u1251:
  1439   0001F2  CFDB FFE3          	movff	plusw2,plusw1
  1440   0001F6  06E8               	decf	wreg,f,c
  1441   0001F8  E2FC               	bc	u1251
  1442   0001FA                     
  1443                           ;color.c: 51:     Color_rules[2] = Blue_rule;
  1444   0001FA  EE20  F09C         	lfsr	2,_Blue_rule
  1445   0001FE  EE11  F018         	lfsr	1,_Color_rules+24
  1446   000202  0E0B               	movlw	11
  1447   000204                     u1261:
  1448   000204  CFDB FFE3          	movff	plusw2,plusw1
  1449   000208  06E8               	decf	wreg,f,c
  1450   00020A  E2FC               	bc	u1261
  1451   00020C                     
  1452                           ;color.c: 52:     Color_rules[3] = Yellow_rule;
  1453   00020C  EE20  F090         	lfsr	2,_Yellow_rule
  1454   000210  EE11  F024         	lfsr	1,_Color_rules+36
  1455   000214  0E0B               	movlw	11
  1456   000216                     u1271:
  1457   000216  CFDB FFE3          	movff	plusw2,plusw1
  1458   00021A  06E8               	decf	wreg,f,c
  1459   00021C  E2FC               	bc	u1271
  1460   00021E                     
  1461                           ;color.c: 53:     Color_rules[4] = Pink_rule;
  1462   00021E  EE20  F084         	lfsr	2,_Pink_rule
  1463   000222  EE11  F030         	lfsr	1,_Color_rules+48
  1464   000226  0E0B               	movlw	11
  1465   000228                     u1281:
  1466   000228  CFDB FFE3          	movff	plusw2,plusw1
  1467   00022C  06E8               	decf	wreg,f,c
  1468   00022E  E2FC               	bc	u1281
  1469   000230                     
  1470                           ;color.c: 54:     Color_rules[5] = Orange_rule;
  1471   000230  EE20  F078         	lfsr	2,_Orange_rule
  1472   000234  EE11  F03C         	lfsr	1,_Color_rules+60
  1473   000238  0E0B               	movlw	11
  1474   00023A                     u1291:
  1475   00023A  CFDB FFE3          	movff	plusw2,plusw1
  1476   00023E  06E8               	decf	wreg,f,c
  1477   000240  E2FC               	bc	u1291
  1478   000242                     
  1479                           ;color.c: 55:     Color_rules[6] = Lightblue_rule;
  1480   000242  EE20  F06C         	lfsr	2,_Lightblue_rule
  1481   000246  EE11  F048         	lfsr	1,_Color_rules+72
  1482   00024A  0E0B               	movlw	11
  1483   00024C                     u1301:
  1484   00024C  CFDB FFE3          	movff	plusw2,plusw1
  1485   000250  06E8               	decf	wreg,f,c
  1486   000252  E2FC               	bc	u1301
  1487   000254                     
  1488                           ;color.c: 56:     Color_rules[7] = White_rule;
  1489   000254  EE20  F060         	lfsr	2,_White_rule
  1490   000258  EE11  F054         	lfsr	1,_Color_rules+84
  1491   00025C  0E0B               	movlw	11
  1492   00025E                     u1311:
  1493   00025E  CFDB FFE3          	movff	plusw2,plusw1
  1494   000262  06E8               	decf	wreg,f,c
  1495   000264  E2FC               	bc	u1311
  1496   000266                     
  1497                           ;color.c: 57:     Color_rules[8] = Black_rule;
  1498   000266  EE20  F0C0         	lfsr	2,_Black_rule
  1499   00026A  EE11  F060         	lfsr	1,_Color_rules+96
  1500   00026E  0E0B               	movlw	11
  1501   000270                     u1321:
  1502   000270  CFDB FFE3          	movff	plusw2,plusw1
  1503   000274  06E8               	decf	wreg,f,c
  1504   000276  E2FC               	bc	u1321
  1505   000278                     
  1506                           ;color.c: 66:     TRISFbits.TRISF3=1;
  1507   000278  8686               	bsf	134,3,c	;volatile
  1508   00027A                     
  1509                           ;color.c: 67:     ANSELFbits.ANSELF3=0;
  1510   00027A  010E               	movlb	14	; () banked
  1511   00027C  97B4               	bcf	180,3,b	;volatile
  1512   00027E                     
  1513                           ; BSR set to: 14
  1514                           ;color.c: 68:     TRISFbits.TRISF2=1;
  1515   00027E  8486               	bsf	134,2,c	;volatile
  1516   000280                     
  1517                           ; BSR set to: 14
  1518                           ;color.c: 69:     ANSELFbits.ANSELF2=0;
  1519   000280  95B4               	bcf	180,2,b	;volatile
  1520   000282                     l67:
  1521   000282  A68E               	btfss	142,3,c	;volatile
  1522   000284  EF46  F001         	goto	u1331
  1523   000288  EF48  F001         	goto	u1330
  1524   00028C                     u1331:
  1525   00028C  EF4F  F001         	goto	l71
  1526   000290                     u1330:
  1527   000290  B48E               	btfsc	142,2,c	;volatile
  1528   000292  EF4D  F001         	goto	u1341
  1529   000296  EF4F  F001         	goto	u1340
  1530   00029A                     u1341:
  1531   00029A  EF41  F001         	goto	l67
  1532   00029E                     u1340:
  1533   00029E                     l71:
  1534                           
  1535                           ;color.c: 72:     if(!PORTFbits.RF2){
  1536   00029E  B48E               	btfsc	142,2,c	;volatile
  1537   0002A0  EF54  F001         	goto	u1351
  1538   0002A4  EF56  F001         	goto	u1350
  1539   0002A8                     u1351:
  1540   0002A8  EF58  F001         	goto	l2321
  1541   0002AC                     u1350:
  1542   0002AC  EF6A  F001         	goto	l73
  1543   0002B0                     l2321:
  1544                           
  1545                           ;color.c: 75:     calibrate_white();
  1546   0002B0  EC07  F002         	call	_calibrate_white	;wreg free
  1547   0002B4                     l74:
  1548   0002B4  B68E               	btfsc	142,3,c	;volatile
  1549   0002B6  EF5F  F001         	goto	u1361
  1550   0002BA  EF61  F001         	goto	u1360
  1551   0002BE                     u1361:
  1552   0002BE  EF5A  F001         	goto	l74
  1553   0002C2                     u1360:
  1554   0002C2                     
  1555                           ;color.c: 77:     calibrate_black();
  1556   0002C2  EC6B  F001         	call	_calibrate_black	;wreg free
  1557   0002C6                     l77:
  1558   0002C6  B68E               	btfsc	142,3,c	;volatile
  1559   0002C8  EF68  F001         	goto	u1371
  1560   0002CC  EF6A  F001         	goto	u1370
  1561   0002D0                     u1371:
  1562   0002D0  EF63  F001         	goto	l77
  1563   0002D4                     u1370:
  1564   0002D4                     l73:
  1565   0002D4  0012               	return		;funcret
  1566   0002D6                     __end_of_color_click_init:
  1567                           	callstack 0
  1568                           
  1569 ;; *************** function _color_writetoaddr *****************
  1570 ;; Defined at:
  1571 ;;		line 82 in file "color.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  address         1    wreg     unsigned char 
  1574 ;;  value           1    2[COMRAM] unsigned char 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  address         1    3[COMRAM] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1586 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;Total ram usage:        2 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 4
  1593 ;; This function calls:
  1594 ;;		_I2C_2_Master_Start
  1595 ;;		_I2C_2_Master_Stop
  1596 ;;		_I2C_2_Master_Write
  1597 ;; This function is called by:
  1598 ;;		_color_click_init
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text7
  1603   000A1E                     __ptext7:
  1604                           	callstack 0
  1605   000A1E                     _color_writetoaddr:
  1606                           	callstack 25
  1607                           
  1608                           ;incstack = 0
  1609                           ;color_writetoaddr@address stored from wreg
  1610   000A1E  6E04               	movwf	color_writetoaddr@address^0,c
  1611   000A20                     
  1612                           ;color.c: 83:     I2C_2_Master_Start();
  1613   000A20  EC4E  F005         	call	_I2C_2_Master_Start	;wreg free
  1614                           
  1615                           ;color.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  1616   000A24  0E52               	movlw	82
  1617   000A26  EC3D  F005         	call	_I2C_2_Master_Write
  1618                           
  1619                           ;color.c: 85:     I2C_2_Master_Write(0x80 | address);
  1620   000A2A  5004               	movf	color_writetoaddr@address^0,w,c
  1621   000A2C  0980               	iorlw	128
  1622   000A2E  EC3D  F005         	call	_I2C_2_Master_Write
  1623                           
  1624                           ;color.c: 86:     I2C_2_Master_Write(value);
  1625   000A32  5003               	movf	color_writetoaddr@value^0,w,c
  1626   000A34  EC3D  F005         	call	_I2C_2_Master_Write
  1627                           
  1628                           ;color.c: 87:     I2C_2_Master_Stop();
  1629   000A38  EC49  F005         	call	_I2C_2_Master_Stop	;wreg free
  1630   000A3C  0012               	return		;funcret
  1631   000A3E                     __end_of_color_writetoaddr:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _calibrate_white *****************
  1635 ;; Defined at:
  1636 ;;		line 229 in file "color.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;Total ram usage:        2 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 5
  1657 ;; This function calls:
  1658 ;;		_color_read_Blue
  1659 ;;		_color_read_Green
  1660 ;;		_color_read_Red
  1661 ;;		_set_led_color
  1662 ;; This function is called by:
  1663 ;;		_color_click_init
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text8
  1668   00040E                     __ptext8:
  1669                           	callstack 0
  1670   00040E                     _calibrate_white:
  1671                           	callstack 24
  1672   00040E                     
  1673                           ;color.c: 230:     set_led_color(0b100);
  1674   00040E  0E00               	movlw	0
  1675   000410  6E02               	movwf	(set_led_color@color+1)^0,c
  1676   000412  0E04               	movlw	4
  1677   000414  6E01               	movwf	set_led_color@color^0,c
  1678   000416  EC90  F004         	call	_set_led_color	;wreg free
  1679   00041A                     
  1680                           ;color.c: 231:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1681   00041A  0E12               	movlw	18
  1682   00041C  6E0D               	movwf	(??_calibrate_white+1)^0,c
  1683   00041E  0EDC               	movlw	220
  1684   000420  6E0C               	movwf	??_calibrate_white^0,c
  1685   000422  0E60               	movlw	96
  1686   000424                     u2297:
  1687   000424  2EE8               	decfsz	wreg,f,c
  1688   000426  D7FE               	bra	u2297
  1689   000428  2E0C               	decfsz	??_calibrate_white^0,f,c
  1690   00042A  D7FC               	bra	u2297
  1691   00042C  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  1692   00042E  D7FA               	bra	u2297
  1693   000430                     
  1694                           ;color.c: 232:     White_setup.R = color_read_Red();
  1695   000430  ECCB  F003         	call	_color_read_Red	;wreg free
  1696   000434  C005  F038         	movff	?_color_read_Red,_White_setup
  1697   000438  C006  F039         	movff	?_color_read_Red+1,_White_setup+1
  1698   00043C  6A3A               	clrf	(_White_setup+2)^0,c
  1699   00043E  6A3B               	clrf	(_White_setup+3)^0,c
  1700   000440                     
  1701                           ;color.c: 233:     set_led_color(0b010);
  1702   000440  0E00               	movlw	0
  1703   000442  6E02               	movwf	(set_led_color@color+1)^0,c
  1704   000444  0E02               	movlw	2
  1705   000446  6E01               	movwf	set_led_color@color^0,c
  1706   000448  EC90  F004         	call	_set_led_color	;wreg free
  1707   00044C                     
  1708                           ;color.c: 234:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1709   00044C  0E12               	movlw	18
  1710   00044E  6E0D               	movwf	(??_calibrate_white+1)^0,c
  1711   000450  0EDC               	movlw	220
  1712   000452  6E0C               	movwf	??_calibrate_white^0,c
  1713   000454  0E60               	movlw	96
  1714   000456                     u2307:
  1715   000456  2EE8               	decfsz	wreg,f,c
  1716   000458  D7FE               	bra	u2307
  1717   00045A  2E0C               	decfsz	??_calibrate_white^0,f,c
  1718   00045C  D7FC               	bra	u2307
  1719   00045E  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  1720   000460  D7FA               	bra	u2307
  1721                           
  1722                           ;color.c: 235:     White_setup.G = color_read_Green();
  1723   000462  ECF3  F003         	call	_color_read_Green	;wreg free
  1724   000466  C005  F03C         	movff	?_color_read_Green,_White_setup+4
  1725   00046A  C006  F03D         	movff	?_color_read_Green+1,_White_setup+5
  1726   00046E  6A3E               	clrf	(_White_setup+6)^0,c
  1727   000470  6A3F               	clrf	(_White_setup+7)^0,c
  1728   000472                     
  1729                           ;color.c: 236:     set_led_color(0b001);
  1730   000472  0E00               	movlw	0
  1731   000474  6E02               	movwf	(set_led_color@color+1)^0,c
  1732   000476  0E01               	movlw	1
  1733   000478  6E01               	movwf	set_led_color@color^0,c
  1734   00047A  EC90  F004         	call	_set_led_color	;wreg free
  1735   00047E                     
  1736                           ;color.c: 237:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1737   00047E  0E12               	movlw	18
  1738   000480  6E0D               	movwf	(??_calibrate_white+1)^0,c
  1739   000482  0EDC               	movlw	220
  1740   000484  6E0C               	movwf	??_calibrate_white^0,c
  1741   000486  0E60               	movlw	96
  1742   000488                     u2317:
  1743   000488  2EE8               	decfsz	wreg,f,c
  1744   00048A  D7FE               	bra	u2317
  1745   00048C  2E0C               	decfsz	??_calibrate_white^0,f,c
  1746   00048E  D7FC               	bra	u2317
  1747   000490  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  1748   000492  D7FA               	bra	u2317
  1749   000494                     
  1750                           ;color.c: 238:     White_setup.B = color_read_Blue();
  1751   000494  EC43  F004         	call	_color_read_Blue	;wreg free
  1752   000498  C005  F040         	movff	?_color_read_Blue,_White_setup+8
  1753   00049C  C006  F041         	movff	?_color_read_Blue+1,_White_setup+9
  1754   0004A0  6A42               	clrf	(_White_setup+10)^0,c
  1755   0004A2  6A43               	clrf	(_White_setup+11)^0,c
  1756   0004A4                     
  1757                           ;color.c: 239:     set_led_color(0b000);
  1758   0004A4  0E00               	movlw	0
  1759   0004A6  6E02               	movwf	(set_led_color@color+1)^0,c
  1760   0004A8  0E00               	movlw	0
  1761   0004AA  6E01               	movwf	set_led_color@color^0,c
  1762   0004AC  EC90  F004         	call	_set_led_color	;wreg free
  1763   0004B0  0012               	return		;funcret
  1764   0004B2                     __end_of_calibrate_white:
  1765                           	callstack 0
  1766                           
  1767 ;; *************** function _calibrate_black *****************
  1768 ;; Defined at:
  1769 ;;		line 209 in file "color.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  clear2          2   17[COMRAM] unsigned int 
  1774 ;;  clear1          2   15[COMRAM] unsigned int 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1787 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;Total ram usage:        8 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 5
  1791 ;; This function calls:
  1792 ;;		___lwdiv
  1793 ;;		_color_read_Blue
  1794 ;;		_color_read_Clear
  1795 ;;		_color_read_Green
  1796 ;;		_color_read_Red
  1797 ;;		_set_led_color
  1798 ;; This function is called by:
  1799 ;;		_color_click_init
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text9
  1804   0002D6                     __ptext9:
  1805                           	callstack 0
  1806   0002D6                     _calibrate_black:
  1807                           	callstack 24
  1808   0002D6                     
  1809                           ;color.c: 210:     set_led_color(0b100);
  1810   0002D6  0E00               	movlw	0
  1811   0002D8  6E02               	movwf	(set_led_color@color+1)^0,c
  1812   0002DA  0E04               	movlw	4
  1813   0002DC  6E01               	movwf	set_led_color@color^0,c
  1814   0002DE  EC90  F004         	call	_set_led_color	;wreg free
  1815   0002E2                     
  1816                           ;color.c: 211:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1817   0002E2  0E12               	movlw	18
  1818   0002E4  6E0F               	movwf	(??_calibrate_black+1)^0,c
  1819   0002E6  0EDC               	movlw	220
  1820   0002E8  6E0E               	movwf	??_calibrate_black^0,c
  1821   0002EA  0E60               	movlw	96
  1822   0002EC                     u2327:
  1823   0002EC  2EE8               	decfsz	wreg,f,c
  1824   0002EE  D7FE               	bra	u2327
  1825   0002F0  2E0E               	decfsz	??_calibrate_black^0,f,c
  1826   0002F2  D7FC               	bra	u2327
  1827   0002F4  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  1828   0002F6  D7FA               	bra	u2327
  1829   0002F8                     
  1830                           ;color.c: 212:     Black_setup.R = color_read_Red();
  1831   0002F8  ECCB  F003         	call	_color_read_Red	;wreg free
  1832   0002FC  C005  F02C         	movff	?_color_read_Red,_Black_setup
  1833   000300  C006  F02D         	movff	?_color_read_Red+1,_Black_setup+1
  1834   000304  6A2E               	clrf	(_Black_setup+2)^0,c
  1835   000306  6A2F               	clrf	(_Black_setup+3)^0,c
  1836   000308                     
  1837                           ;color.c: 213:     set_led_color(0b010);
  1838   000308  0E00               	movlw	0
  1839   00030A  6E02               	movwf	(set_led_color@color+1)^0,c
  1840   00030C  0E02               	movlw	2
  1841   00030E  6E01               	movwf	set_led_color@color^0,c
  1842   000310  EC90  F004         	call	_set_led_color	;wreg free
  1843   000314                     
  1844                           ;color.c: 214:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1845   000314  0E12               	movlw	18
  1846   000316  6E0F               	movwf	(??_calibrate_black+1)^0,c
  1847   000318  0EDC               	movlw	220
  1848   00031A  6E0E               	movwf	??_calibrate_black^0,c
  1849   00031C  0E60               	movlw	96
  1850   00031E                     u2337:
  1851   00031E  2EE8               	decfsz	wreg,f,c
  1852   000320  D7FE               	bra	u2337
  1853   000322  2E0E               	decfsz	??_calibrate_black^0,f,c
  1854   000324  D7FC               	bra	u2337
  1855   000326  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  1856   000328  D7FA               	bra	u2337
  1857                           
  1858                           ;color.c: 215:     Black_setup.G = color_read_Green();
  1859   00032A  ECF3  F003         	call	_color_read_Green	;wreg free
  1860   00032E  C005  F030         	movff	?_color_read_Green,_Black_setup+4
  1861   000332  C006  F031         	movff	?_color_read_Green+1,_Black_setup+5
  1862   000336  6A32               	clrf	(_Black_setup+6)^0,c
  1863   000338  6A33               	clrf	(_Black_setup+7)^0,c
  1864   00033A                     
  1865                           ;color.c: 216:     set_led_color(0b001);
  1866   00033A  0E00               	movlw	0
  1867   00033C  6E02               	movwf	(set_led_color@color+1)^0,c
  1868   00033E  0E01               	movlw	1
  1869   000340  6E01               	movwf	set_led_color@color^0,c
  1870   000342  EC90  F004         	call	_set_led_color	;wreg free
  1871   000346                     
  1872                           ;color.c: 217:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1873   000346  0E12               	movlw	18
  1874   000348  6E0F               	movwf	(??_calibrate_black+1)^0,c
  1875   00034A  0EDC               	movlw	220
  1876   00034C  6E0E               	movwf	??_calibrate_black^0,c
  1877   00034E  0E60               	movlw	96
  1878   000350                     u2347:
  1879   000350  2EE8               	decfsz	wreg,f,c
  1880   000352  D7FE               	bra	u2347
  1881   000354  2E0E               	decfsz	??_calibrate_black^0,f,c
  1882   000356  D7FC               	bra	u2347
  1883   000358  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  1884   00035A  D7FA               	bra	u2347
  1885   00035C                     
  1886                           ;color.c: 218:     Black_setup.B = color_read_Blue();
  1887   00035C  EC43  F004         	call	_color_read_Blue	;wreg free
  1888   000360  C005  F034         	movff	?_color_read_Blue,_Black_setup+8
  1889   000364  C006  F035         	movff	?_color_read_Blue+1,_Black_setup+9
  1890   000368  6A36               	clrf	(_Black_setup+10)^0,c
  1891   00036A  6A37               	clrf	(_Black_setup+11)^0,c
  1892   00036C                     
  1893                           ;color.c: 219:     set_led_color(0b000);
  1894   00036C  0E00               	movlw	0
  1895   00036E  6E02               	movwf	(set_led_color@color+1)^0,c
  1896   000370  0E00               	movlw	0
  1897   000372  6E01               	movwf	set_led_color@color^0,c
  1898   000374  EC90  F004         	call	_set_led_color	;wreg free
  1899                           
  1900                           ;color.c: 220:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1901   000378  0E12               	movlw	18
  1902   00037A  6E0F               	movwf	(??_calibrate_black+1)^0,c
  1903   00037C  0EDC               	movlw	220
  1904   00037E  6E0E               	movwf	??_calibrate_black^0,c
  1905   000380  0E60               	movlw	96
  1906   000382                     u2357:
  1907   000382  2EE8               	decfsz	wreg,f,c
  1908   000384  D7FE               	bra	u2357
  1909   000386  2E0E               	decfsz	??_calibrate_black^0,f,c
  1910   000388  D7FC               	bra	u2357
  1911   00038A  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  1912   00038C  D7FA               	bra	u2357
  1913   00038E                     
  1914                           ;color.c: 221:     unsigned int clear1 = color_read_Clear();
  1915   00038E  EC1B  F004         	call	_color_read_Clear	;wreg free
  1916   000392  C005  F010         	movff	?_color_read_Clear,calibrate_black@clear1
  1917   000396  C006  F011         	movff	?_color_read_Clear+1,calibrate_black@clear1+1
  1918   00039A                     
  1919                           ;color.c: 222:     set_led_color(0b111);
  1920   00039A  0E00               	movlw	0
  1921   00039C  6E02               	movwf	(set_led_color@color+1)^0,c
  1922   00039E  0E07               	movlw	7
  1923   0003A0  6E01               	movwf	set_led_color@color^0,c
  1924   0003A2  EC90  F004         	call	_set_led_color	;wreg free
  1925   0003A6                     
  1926                           ;color.c: 223:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1927   0003A6  0E12               	movlw	18
  1928   0003A8  6E0F               	movwf	(??_calibrate_black+1)^0,c
  1929   0003AA  0EDC               	movlw	220
  1930   0003AC  6E0E               	movwf	??_calibrate_black^0,c
  1931   0003AE  0E60               	movlw	96
  1932   0003B0                     u2367:
  1933   0003B0  2EE8               	decfsz	wreg,f,c
  1934   0003B2  D7FE               	bra	u2367
  1935   0003B4  2E0E               	decfsz	??_calibrate_black^0,f,c
  1936   0003B6  D7FC               	bra	u2367
  1937   0003B8  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  1938   0003BA  D7FA               	bra	u2367
  1939   0003BC                     
  1940                           ;color.c: 224:     unsigned int clear2 = color_read_Clear();
  1941   0003BC  EC1B  F004         	call	_color_read_Clear	;wreg free
  1942   0003C0  C005  F012         	movff	?_color_read_Clear,calibrate_black@clear2
  1943   0003C4  C006  F013         	movff	?_color_read_Clear+1,calibrate_black@clear2+1
  1944                           
  1945                           ;color.c: 225:     set_led_color(0b000);
  1946   0003C8  0E00               	movlw	0
  1947   0003CA  6E02               	movwf	(set_led_color@color+1)^0,c
  1948   0003CC  0E00               	movlw	0
  1949   0003CE  6E01               	movwf	set_led_color@color^0,c
  1950   0003D0  EC90  F004         	call	_set_led_color	;wreg free
  1951   0003D4                     
  1952                           ;color.c: 226:     wall_coef = clear2/clear1/5;
  1953   0003D4  C010  F009         	movff	calibrate_black@clear1,___lwdiv@divisor
  1954   0003D8  C011  F00A         	movff	calibrate_black@clear1+1,___lwdiv@divisor+1
  1955   0003DC  C012  F007         	movff	calibrate_black@clear2,___lwdiv@dividend
  1956   0003E0  C013  F008         	movff	calibrate_black@clear2+1,___lwdiv@dividend+1
  1957   0003E4  EC2A  F003         	call	___lwdiv	;wreg free
  1958   0003E8  C007  F014         	movff	?___lwdiv,_calibrate_black$2445
  1959   0003EC  C008  F015         	movff	?___lwdiv+1,_calibrate_black$2445+1
  1960   0003F0                     
  1961                           ;color.c: 226:     wall_coef = clear2/clear1/5;
  1962   0003F0  C014  F007         	movff	_calibrate_black$2445,___lwdiv@dividend
  1963   0003F4  C015  F008         	movff	_calibrate_black$2445+1,___lwdiv@dividend+1
  1964   0003F8  0E00               	movlw	0
  1965   0003FA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1966   0003FC  0E05               	movlw	5
  1967   0003FE  6E09               	movwf	___lwdiv@divisor^0,c
  1968   000400  EC2A  F003         	call	___lwdiv	;wreg free
  1969   000404  C007  F046         	movff	?___lwdiv,_wall_coef
  1970   000408  C008  F047         	movff	?___lwdiv+1,_wall_coef+1
  1971   00040C  0012               	return		;funcret
  1972   00040E                     __end_of_calibrate_black:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _set_led_color *****************
  1976 ;; Defined at:
  1977 ;;		line 154 in file "color.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  color           2    0[COMRAM] unsigned int 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		None
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;Total ram usage:        2 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 2
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_calibrate_black
  2002 ;;		_calibrate_white
  2003 ;;		_get_color_code
  2004 ;;		_get_wall_presence
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text10
  2009   000920                     __ptext10:
  2010                           	callstack 0
  2011   000920                     _set_led_color:
  2012                           	callstack 26
  2013   000920                     
  2014                           ;color.c: 158:     if(color & 0b100){
  2015   000920  A401               	btfss	set_led_color@color^0,2,c
  2016   000922  EF95  F004         	goto	u1161
  2017   000926  EF97  F004         	goto	u1160
  2018   00092A                     u1161:
  2019   00092A  EF9A  F004         	goto	l112
  2020   00092E                     u1160:
  2021   00092E                     
  2022                           ;color.c: 159:         LATGbits.LATG1 = 1;
  2023   00092E  827F               	bsf	127,1,c	;volatile
  2024                           
  2025                           ;color.c: 160:     }else{
  2026   000930  EF9B  F004         	goto	l113
  2027   000934                     l112:
  2028                           
  2029                           ;color.c: 161:         LATGbits.LATG1 = 0;
  2030   000934  927F               	bcf	127,1,c	;volatile
  2031   000936                     l113:
  2032                           
  2033                           ;color.c: 163:     if(color & 0b010){
  2034   000936  A201               	btfss	set_led_color@color^0,1,c
  2035   000938  EFA0  F004         	goto	u1171
  2036   00093C  EFA2  F004         	goto	u1170
  2037   000940                     u1171:
  2038   000940  EFA5  F004         	goto	l114
  2039   000944                     u1170:
  2040   000944                     
  2041                           ;color.c: 164:         LATAbits.LATA4 = 1;
  2042   000944  8879               	bsf	121,4,c	;volatile
  2043                           
  2044                           ;color.c: 165:     }else{
  2045   000946  EFA6  F004         	goto	l115
  2046   00094A                     l114:
  2047                           
  2048                           ;color.c: 166:         LATAbits.LATA4 = 0;
  2049   00094A  9879               	bcf	121,4,c	;volatile
  2050   00094C                     l115:
  2051                           
  2052                           ;color.c: 168:     if(color & 0b001){
  2053   00094C  A001               	btfss	set_led_color@color^0,0,c
  2054   00094E  EFAB  F004         	goto	u1181
  2055   000952  EFAD  F004         	goto	u1180
  2056   000956                     u1181:
  2057   000956  EFB0  F004         	goto	l116
  2058   00095A                     u1180:
  2059   00095A                     
  2060                           ;color.c: 169:         LATFbits.LATF7 = 1;
  2061   00095A  8E7E               	bsf	126,7,c	;volatile
  2062                           
  2063                           ;color.c: 170:     }else{
  2064   00095C  EFB1  F004         	goto	l118
  2065   000960                     l116:
  2066                           
  2067                           ;color.c: 171:         LATFbits.LATF7 = 0;
  2068   000960  9E7E               	bcf	126,7,c	;volatile
  2069   000962                     l118:
  2070   000962  0012               	return		;funcret
  2071   000964                     __end_of_set_led_color:
  2072                           	callstack 0
  2073                           
  2074 ;; *************** function _color_read_Red *****************
  2075 ;; Defined at:
  2076 ;;		line 90 in file "color.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  tmp             2    9[COMRAM] unsigned int 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  2    4[COMRAM] unsigned int 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2093 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2094 ;;Total ram usage:        7 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 4
  2097 ;; This function calls:
  2098 ;;		_I2C_2_Master_Read
  2099 ;;		_I2C_2_Master_RepStart
  2100 ;;		_I2C_2_Master_Start
  2101 ;;		_I2C_2_Master_Stop
  2102 ;;		_I2C_2_Master_Write
  2103 ;; This function is called by:
  2104 ;;		_calibrate_black
  2105 ;;		_calibrate_white
  2106 ;;		_get_color_code
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text11
  2111   000796                     __ptext11:
  2112                           	callstack 0
  2113   000796                     _color_read_Red:
  2114                           	callstack 24
  2115   000796                     
  2116                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  2117   000796  EC4E  F005         	call	_I2C_2_Master_Start	;wreg free
  2118                           
  2119                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  2120   00079A  0E52               	movlw	82
  2121   00079C  EC3D  F005         	call	_I2C_2_Master_Write
  2122                           
  2123                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x16);
  2124   0007A0  0EB6               	movlw	182
  2125   0007A2  EC3D  F005         	call	_I2C_2_Master_Write
  2126                           
  2127                           ;color.c: 96:  I2C_2_Master_RepStart();
  2128   0007A6  EC53  F005         	call	_I2C_2_Master_RepStart	;wreg free
  2129                           
  2130                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  2131   0007AA  0E53               	movlw	83
  2132   0007AC  EC3D  F005         	call	_I2C_2_Master_Write
  2133                           
  2134                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  2135   0007B0  0E01               	movlw	1
  2136   0007B2  ECB2  F004         	call	_I2C_2_Master_Read
  2137   0007B6  6E07               	movwf	??_color_read_Red^0,c
  2138   0007B8  5007               	movf	??_color_read_Red^0,w,c
  2139   0007BA  6E0A               	movwf	color_read_Red@tmp^0,c
  2140   0007BC  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2141                           
  2142                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2143   0007BE  0E00               	movlw	0
  2144   0007C0  ECB2  F004         	call	_I2C_2_Master_Read
  2145   0007C4  6E07               	movwf	??_color_read_Red^0,c
  2146   0007C6  5007               	movf	??_color_read_Red^0,w,c
  2147   0007C8  6E09               	movwf	(??_color_read_Red+2)^0,c
  2148   0007CA  6A08               	clrf	(??_color_read_Red+1)^0,c
  2149   0007CC  500A               	movf	color_read_Red@tmp^0,w,c
  2150   0007CE  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2151   0007D0  6E0A               	movwf	color_read_Red@tmp^0,c
  2152   0007D2  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2153   0007D4  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2154   0007D6  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2155                           
  2156                           ;color.c: 100:  I2C_2_Master_Stop();
  2157   0007D8  EC49  F005         	call	_I2C_2_Master_Stop	;wreg free
  2158   0007DC                     
  2159                           ;color.c: 101:  return tmp;
  2160   0007DC  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2161   0007E0  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2162   0007E4  0012               	return		;funcret
  2163   0007E6                     __end_of_color_read_Red:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _color_read_Green *****************
  2167 ;; Defined at:
  2168 ;;		line 118 in file "color.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  tmp             2    9[COMRAM] unsigned int 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  2    4[COMRAM] unsigned int 
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2186 ;;Total ram usage:        7 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 4
  2189 ;; This function calls:
  2190 ;;		_I2C_2_Master_Read
  2191 ;;		_I2C_2_Master_RepStart
  2192 ;;		_I2C_2_Master_Start
  2193 ;;		_I2C_2_Master_Stop
  2194 ;;		_I2C_2_Master_Write
  2195 ;; This function is called by:
  2196 ;;		_calibrate_black
  2197 ;;		_calibrate_white
  2198 ;;		_get_color_code
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text12
  2203   0007E6                     __ptext12:
  2204                           	callstack 0
  2205   0007E6                     _color_read_Green:
  2206                           	callstack 24
  2207   0007E6                     
  2208                           ;color.c: 120:  unsigned int tmp;;color.c: 121:  I2C_2_Master_Start();
  2209   0007E6  EC4E  F005         	call	_I2C_2_Master_Start	;wreg free
  2210                           
  2211                           ;color.c: 122:  I2C_2_Master_Write(0x52 | 0x00);
  2212   0007EA  0E52               	movlw	82
  2213   0007EC  EC3D  F005         	call	_I2C_2_Master_Write
  2214                           
  2215                           ;color.c: 123:  I2C_2_Master_Write(0xA0 | 0x18);
  2216   0007F0  0EB8               	movlw	184
  2217   0007F2  EC3D  F005         	call	_I2C_2_Master_Write
  2218                           
  2219                           ;color.c: 124:  I2C_2_Master_RepStart();
  2220   0007F6  EC53  F005         	call	_I2C_2_Master_RepStart	;wreg free
  2221                           
  2222                           ;color.c: 125:  I2C_2_Master_Write(0x52 | 0x01);
  2223   0007FA  0E53               	movlw	83
  2224   0007FC  EC3D  F005         	call	_I2C_2_Master_Write
  2225                           
  2226                           ;color.c: 126:  tmp=I2C_2_Master_Read(1);
  2227   000800  0E01               	movlw	1
  2228   000802  ECB2  F004         	call	_I2C_2_Master_Read
  2229   000806  6E07               	movwf	??_color_read_Green^0,c
  2230   000808  5007               	movf	??_color_read_Green^0,w,c
  2231   00080A  6E0A               	movwf	color_read_Green@tmp^0,c
  2232   00080C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2233                           
  2234                           ;color.c: 127:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2235   00080E  0E00               	movlw	0
  2236   000810  ECB2  F004         	call	_I2C_2_Master_Read
  2237   000814  6E07               	movwf	??_color_read_Green^0,c
  2238   000816  5007               	movf	??_color_read_Green^0,w,c
  2239   000818  6E09               	movwf	(??_color_read_Green+2)^0,c
  2240   00081A  6A08               	clrf	(??_color_read_Green+1)^0,c
  2241   00081C  500A               	movf	color_read_Green@tmp^0,w,c
  2242   00081E  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2243   000820  6E0A               	movwf	color_read_Green@tmp^0,c
  2244   000822  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2245   000824  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2246   000826  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2247                           
  2248                           ;color.c: 128:  I2C_2_Master_Stop();
  2249   000828  EC49  F005         	call	_I2C_2_Master_Stop	;wreg free
  2250   00082C                     
  2251                           ;color.c: 129:  return tmp;
  2252   00082C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2253   000830  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2254   000834  0012               	return		;funcret
  2255   000836                     __end_of_color_read_Green:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _color_read_Clear *****************
  2259 ;; Defined at:
  2260 ;;		line 132 in file "color.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  tmp             2    9[COMRAM] unsigned int 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  2    4[COMRAM] unsigned int 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2276 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2278 ;;Total ram usage:        7 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 4
  2281 ;; This function calls:
  2282 ;;		_I2C_2_Master_Read
  2283 ;;		_I2C_2_Master_RepStart
  2284 ;;		_I2C_2_Master_Start
  2285 ;;		_I2C_2_Master_Stop
  2286 ;;		_I2C_2_Master_Write
  2287 ;; This function is called by:
  2288 ;;		_calibrate_black
  2289 ;;		_get_wall_presence
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text13
  2294   000836                     __ptext13:
  2295                           	callstack 0
  2296   000836                     _color_read_Clear:
  2297                           	callstack 24
  2298   000836                     
  2299                           ;color.c: 134:  unsigned int tmp;;color.c: 135:  I2C_2_Master_Start();
  2300   000836  EC4E  F005         	call	_I2C_2_Master_Start	;wreg free
  2301                           
  2302                           ;color.c: 136:  I2C_2_Master_Write(0x52 | 0x00);
  2303   00083A  0E52               	movlw	82
  2304   00083C  EC3D  F005         	call	_I2C_2_Master_Write
  2305                           
  2306                           ;color.c: 137:  I2C_2_Master_Write(0xA0 | 0x14);
  2307   000840  0EB4               	movlw	180
  2308   000842  EC3D  F005         	call	_I2C_2_Master_Write
  2309                           
  2310                           ;color.c: 138:  I2C_2_Master_RepStart();
  2311   000846  EC53  F005         	call	_I2C_2_Master_RepStart	;wreg free
  2312                           
  2313                           ;color.c: 139:  I2C_2_Master_Write(0x52 | 0x01);
  2314   00084A  0E53               	movlw	83
  2315   00084C  EC3D  F005         	call	_I2C_2_Master_Write
  2316                           
  2317                           ;color.c: 140:  tmp=I2C_2_Master_Read(1);
  2318   000850  0E01               	movlw	1
  2319   000852  ECB2  F004         	call	_I2C_2_Master_Read
  2320   000856  6E07               	movwf	??_color_read_Clear^0,c
  2321   000858  5007               	movf	??_color_read_Clear^0,w,c
  2322   00085A  6E0A               	movwf	color_read_Clear@tmp^0,c
  2323   00085C  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2324                           
  2325                           ;color.c: 141:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2326   00085E  0E00               	movlw	0
  2327   000860  ECB2  F004         	call	_I2C_2_Master_Read
  2328   000864  6E07               	movwf	??_color_read_Clear^0,c
  2329   000866  5007               	movf	??_color_read_Clear^0,w,c
  2330   000868  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2331   00086A  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2332   00086C  500A               	movf	color_read_Clear@tmp^0,w,c
  2333   00086E  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2334   000870  6E0A               	movwf	color_read_Clear@tmp^0,c
  2335   000872  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2336   000874  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2337   000876  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2338                           
  2339                           ;color.c: 142:  I2C_2_Master_Stop();
  2340   000878  EC49  F005         	call	_I2C_2_Master_Stop	;wreg free
  2341   00087C                     
  2342                           ;color.c: 143:  return tmp;
  2343   00087C  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2344   000880  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2345   000884  0012               	return		;funcret
  2346   000886                     __end_of_color_read_Clear:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _color_read_Blue *****************
  2350 ;; Defined at:
  2351 ;;		line 104 in file "color.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  tmp             2    9[COMRAM] unsigned int 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  2    4[COMRAM] unsigned int 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;Total ram usage:        7 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 4
  2372 ;; This function calls:
  2373 ;;		_I2C_2_Master_Read
  2374 ;;		_I2C_2_Master_RepStart
  2375 ;;		_I2C_2_Master_Start
  2376 ;;		_I2C_2_Master_Stop
  2377 ;;		_I2C_2_Master_Write
  2378 ;; This function is called by:
  2379 ;;		_calibrate_black
  2380 ;;		_calibrate_white
  2381 ;;		_get_color_code
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text14
  2386   000886                     __ptext14:
  2387                           	callstack 0
  2388   000886                     _color_read_Blue:
  2389                           	callstack 24
  2390   000886                     
  2391                           ;color.c: 106:  unsigned int tmp;;color.c: 107:  I2C_2_Master_Start();
  2392   000886  EC4E  F005         	call	_I2C_2_Master_Start	;wreg free
  2393                           
  2394                           ;color.c: 108:  I2C_2_Master_Write(0x52 | 0x00);
  2395   00088A  0E52               	movlw	82
  2396   00088C  EC3D  F005         	call	_I2C_2_Master_Write
  2397                           
  2398                           ;color.c: 109:  I2C_2_Master_Write(0xA0 | 0x1A);
  2399   000890  0EBA               	movlw	186
  2400   000892  EC3D  F005         	call	_I2C_2_Master_Write
  2401                           
  2402                           ;color.c: 110:  I2C_2_Master_RepStart();
  2403   000896  EC53  F005         	call	_I2C_2_Master_RepStart	;wreg free
  2404                           
  2405                           ;color.c: 111:  I2C_2_Master_Write(0x52 | 0x01);
  2406   00089A  0E53               	movlw	83
  2407   00089C  EC3D  F005         	call	_I2C_2_Master_Write
  2408                           
  2409                           ;color.c: 112:  tmp=I2C_2_Master_Read(1);
  2410   0008A0  0E01               	movlw	1
  2411   0008A2  ECB2  F004         	call	_I2C_2_Master_Read
  2412   0008A6  6E07               	movwf	??_color_read_Blue^0,c
  2413   0008A8  5007               	movf	??_color_read_Blue^0,w,c
  2414   0008AA  6E0A               	movwf	color_read_Blue@tmp^0,c
  2415   0008AC  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2416                           
  2417                           ;color.c: 113:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2418   0008AE  0E00               	movlw	0
  2419   0008B0  ECB2  F004         	call	_I2C_2_Master_Read
  2420   0008B4  6E07               	movwf	??_color_read_Blue^0,c
  2421   0008B6  5007               	movf	??_color_read_Blue^0,w,c
  2422   0008B8  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2423   0008BA  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2424   0008BC  500A               	movf	color_read_Blue@tmp^0,w,c
  2425   0008BE  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2426   0008C0  6E0A               	movwf	color_read_Blue@tmp^0,c
  2427   0008C2  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2428   0008C4  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2429   0008C6  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2430                           
  2431                           ;color.c: 114:  I2C_2_Master_Stop();
  2432   0008C8  EC49  F005         	call	_I2C_2_Master_Stop	;wreg free
  2433   0008CC                     
  2434                           ;color.c: 115:  return tmp;
  2435   0008CC  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2436   0008D0  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2437   0008D4  0012               	return		;funcret
  2438   0008D6                     __end_of_color_read_Blue:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _I2C_2_Master_Write *****************
  2442 ;; Defined at:
  2443 ;;		line 45 in file "i2c.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  data_byte       1    wreg     unsigned char 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  data_byte       1    1[COMRAM] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2461 ;;Total ram usage:        1 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 3
  2464 ;; This function calls:
  2465 ;;		_I2C_2_Master_Idle
  2466 ;; This function is called by:
  2467 ;;		_color_writetoaddr
  2468 ;;		_color_read_Red
  2469 ;;		_color_read_Blue
  2470 ;;		_color_read_Green
  2471 ;;		_color_read_Clear
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text15
  2476   000A7A                     __ptext15:
  2477                           	callstack 0
  2478   000A7A                     _I2C_2_Master_Write:
  2479                           	callstack 25
  2480                           
  2481                           ;incstack = 0
  2482                           ;I2C_2_Master_Write@data_byte stored from wreg
  2483   000A7A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2484   000A7C                     
  2485                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2486   000A7C  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  2487   000A80                     
  2488                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2489   000A80  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2490   000A84  0012               	return		;funcret
  2491   000A86                     __end_of_I2C_2_Master_Write:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function _I2C_2_Master_Stop *****************
  2495 ;; Defined at:
  2496 ;;		line 39 in file "i2c.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 3
  2517 ;; This function calls:
  2518 ;;		_I2C_2_Master_Idle
  2519 ;; This function is called by:
  2520 ;;		_color_writetoaddr
  2521 ;;		_color_read_Red
  2522 ;;		_color_read_Blue
  2523 ;;		_color_read_Green
  2524 ;;		_color_read_Clear
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text16
  2529   000A92                     __ptext16:
  2530                           	callstack 0
  2531   000A92                     _I2C_2_Master_Stop:
  2532                           	callstack 25
  2533   000A92                     
  2534                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2535   000A92  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  2536   000A96                     
  2537                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2538   000A96  010E               	movlb	14	; () banked
  2539   000A98  85DA               	bsf	218,2,b	;volatile
  2540   000A9A                     
  2541                           ; BSR set to: 14
  2542   000A9A  0012               	return		;funcret
  2543   000A9C                     __end_of_I2C_2_Master_Stop:
  2544                           	callstack 0
  2545                           
  2546 ;; *************** function _I2C_2_Master_Start *****************
  2547 ;; Defined at:
  2548 ;;		line 27 in file "i2c.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used: 1
  2568 ;; Hardware stack levels required when called: 3
  2569 ;; This function calls:
  2570 ;;		_I2C_2_Master_Idle
  2571 ;; This function is called by:
  2572 ;;		_color_writetoaddr
  2573 ;;		_color_read_Red
  2574 ;;		_color_read_Blue
  2575 ;;		_color_read_Green
  2576 ;;		_color_read_Clear
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text17
  2581   000A9C                     __ptext17:
  2582                           	callstack 0
  2583   000A9C                     _I2C_2_Master_Start:
  2584                           	callstack 25
  2585   000A9C                     
  2586                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2587   000A9C  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  2588   000AA0                     
  2589                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2590   000AA0  010E               	movlb	14	; () banked
  2591   000AA2  81DA               	bsf	218,0,b	;volatile
  2592   000AA4                     
  2593                           ; BSR set to: 14
  2594   000AA4  0012               	return		;funcret
  2595   000AA6                     __end_of_I2C_2_Master_Start:
  2596                           	callstack 0
  2597                           
  2598 ;; *************** function _I2C_2_Master_RepStart *****************
  2599 ;; Defined at:
  2600 ;;		line 33 in file "i2c.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;		None
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;Total ram usage:        0 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 3
  2621 ;; This function calls:
  2622 ;;		_I2C_2_Master_Idle
  2623 ;; This function is called by:
  2624 ;;		_color_read_Red
  2625 ;;		_color_read_Blue
  2626 ;;		_color_read_Green
  2627 ;;		_color_read_Clear
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text18
  2632   000AA6                     __ptext18:
  2633                           	callstack 0
  2634   000AA6                     _I2C_2_Master_RepStart:
  2635                           	callstack 24
  2636   000AA6                     
  2637                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2638   000AA6  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  2639   000AAA                     
  2640                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2641   000AAA  010E               	movlb	14	; () banked
  2642   000AAC  83DA               	bsf	218,1,b	;volatile
  2643   000AAE                     
  2644                           ; BSR set to: 14
  2645   000AAE  0012               	return		;funcret
  2646   000AB0                     __end_of_I2C_2_Master_RepStart:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function _I2C_2_Master_Read *****************
  2650 ;; Defined at:
  2651 ;;		line 51 in file "i2c.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  ack             1    wreg     unsigned char 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  ack             1    2[COMRAM] unsigned char 
  2656 ;;  tmp             1    3[COMRAM] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      unsigned char 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2667 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2668 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2669 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;Total ram usage:        3 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 3
  2673 ;; This function calls:
  2674 ;;		_I2C_2_Master_Idle
  2675 ;; This function is called by:
  2676 ;;		_color_read_Red
  2677 ;;		_color_read_Blue
  2678 ;;		_color_read_Green
  2679 ;;		_color_read_Clear
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text19
  2684   000964                     __ptext19:
  2685                           	callstack 0
  2686   000964                     _I2C_2_Master_Read:
  2687                           	callstack 24
  2688                           
  2689                           ; BSR set to: 14
  2690                           ;incstack = 0
  2691                           ;I2C_2_Master_Read@ack stored from wreg
  2692   000964  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2693   000966                     
  2694                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2695   000966  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  2696   00096A                     
  2697                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2698   00096A  010E               	movlb	14	; () banked
  2699   00096C  87DA               	bsf	218,3,b	;volatile
  2700                           
  2701                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2702   00096E  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  2703   000972                     
  2704                           ;i2c.c: 57:   tmp = SSP2BUF;
  2705   000972  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2706                           
  2707                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2708   000976  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  2709   00097A                     
  2710                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2711   00097A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2712   00097C  B4D8               	btfsc	status,2,c
  2713   00097E  EFC3  F004         	goto	u1141
  2714   000982  EFC7  F004         	goto	u1140
  2715   000986                     u1141:
  2716   000986  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2717   000988  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2718   00098A  EFC8  F004         	goto	u1158
  2719   00098E                     u1140:
  2720   00098E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2721   000990                     u1158:
  2722   000990  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2723   000992  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2724   000994  010E               	movlb	14	; () banked
  2725   000996  51DA               	movf	218,w,b	;volatile
  2726   000998  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2727   00099A  0BDF               	andlw	-33
  2728   00099C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2729   00099E  6FDA               	movwf	218,b	;volatile
  2730   0009A0                     
  2731                           ; BSR set to: 14
  2732                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2733   0009A0  89DA               	bsf	218,4,b	;volatile
  2734   0009A2                     
  2735                           ; BSR set to: 14
  2736                           ;i2c.c: 61:   return tmp;
  2737   0009A2  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2738   0009A4                     
  2739                           ; BSR set to: 14
  2740   0009A4  0012               	return		;funcret
  2741   0009A6                     __end_of_I2C_2_Master_Read:
  2742                           	callstack 0
  2743                           
  2744 ;; *************** function _I2C_2_Master_Idle *****************
  2745 ;; Defined at:
  2746 ;;		line 22 in file "i2c.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2763 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;Total ram usage:        1 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 2
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_I2C_2_Master_Start
  2771 ;;		_I2C_2_Master_RepStart
  2772 ;;		_I2C_2_Master_Stop
  2773 ;;		_I2C_2_Master_Write
  2774 ;;		_I2C_2_Master_Read
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text20
  2779   0009D0                     __ptext20:
  2780                           	callstack 0
  2781   0009D0                     _I2C_2_Master_Idle:
  2782                           	callstack 25
  2783   0009D0                     l343:
  2784   0009D0  010E               	movlb	14	; () banked
  2785   0009D2  B5D8               	btfsc	216,2,b	;volatile
  2786   0009D4  EFEE  F004         	goto	u1121
  2787   0009D8  EFF0  F004         	goto	u1120
  2788   0009DC                     u1121:
  2789   0009DC  EFE8  F004         	goto	l343
  2790   0009E0                     u1120:
  2791   0009E0                     
  2792                           ; BSR set to: 14
  2793   0009E0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2794   0009E4  0E1F               	movlw	31
  2795   0009E6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2796   0009E8  A4D8               	btfss	status,2,c
  2797   0009EA  EFF9  F004         	goto	u1131
  2798   0009EE  EFFB  F004         	goto	u1130
  2799   0009F2                     u1131:
  2800   0009F2  EFE8  F004         	goto	l343
  2801   0009F6                     u1130:
  2802   0009F6                     
  2803                           ; BSR set to: 14
  2804   0009F6  0012               	return		;funcret
  2805   0009F8                     __end_of_I2C_2_Master_Idle:
  2806                           	callstack 0
  2807                           
  2808 ;; *************** function ___lwdiv *****************
  2809 ;; Defined at:
  2810 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  dividend        2    6[COMRAM] unsigned int 
  2813 ;;  divisor         2    8[COMRAM] unsigned int 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  quotient        2   10[COMRAM] unsigned int 
  2816 ;;  counter         1   12[COMRAM] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  2    6[COMRAM] unsigned int 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2827 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2829 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2830 ;;Total ram usage:        7 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 2
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_calibrate_black
  2837 ;;		_setMotorPWM
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text21
  2842   000654                     __ptext21:
  2843                           	callstack 0
  2844   000654                     ___lwdiv:
  2845                           	callstack 26
  2846   000654  0E00               	movlw	0
  2847   000656  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2848   000658  0E00               	movlw	0
  2849   00065A  6E0B               	movwf	___lwdiv@quotient^0,c
  2850   00065C  5009               	movf	___lwdiv@divisor^0,w,c
  2851   00065E  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2852   000660  B4D8               	btfsc	status,2,c
  2853   000662  EF35  F003         	goto	u1191
  2854   000666  EF37  F003         	goto	u1190
  2855   00066A                     u1191:
  2856   00066A  EF5F  F003         	goto	l921
  2857   00066E                     u1190:
  2858   00066E  0E01               	movlw	1
  2859   000670  6E0D               	movwf	___lwdiv@counter^0,c
  2860   000672  EF3F  F003         	goto	l2183
  2861   000676                     l2181:
  2862   000676  90D8               	bcf	status,0,c
  2863   000678  3609               	rlcf	___lwdiv@divisor^0,f,c
  2864   00067A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2865   00067C  2A0D               	incf	___lwdiv@counter^0,f,c
  2866   00067E                     l2183:
  2867   00067E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  2868   000680  EF44  F003         	goto	u1201
  2869   000684  EF46  F003         	goto	u1200
  2870   000688                     u1201:
  2871   000688  EF3B  F003         	goto	l2181
  2872   00068C                     u1200:
  2873   00068C                     l2185:
  2874   00068C  90D8               	bcf	status,0,c
  2875   00068E  360B               	rlcf	___lwdiv@quotient^0,f,c
  2876   000690  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2877   000692  5009               	movf	___lwdiv@divisor^0,w,c
  2878   000694  5C07               	subwf	___lwdiv@dividend^0,w,c
  2879   000696  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2880   000698  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2881   00069A  A0D8               	btfss	status,0,c
  2882   00069C  EF52  F003         	goto	u1211
  2883   0006A0  EF54  F003         	goto	u1210
  2884   0006A4                     u1211:
  2885   0006A4  EF59  F003         	goto	l2193
  2886   0006A8                     u1210:
  2887   0006A8  5009               	movf	___lwdiv@divisor^0,w,c
  2888   0006AA  5E07               	subwf	___lwdiv@dividend^0,f,c
  2889   0006AC  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2890   0006AE  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2891   0006B0  800B               	bsf	___lwdiv@quotient^0,0,c
  2892   0006B2                     l2193:
  2893   0006B2  90D8               	bcf	status,0,c
  2894   0006B4  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2895   0006B6  3209               	rrcf	___lwdiv@divisor^0,f,c
  2896   0006B8  2E0D               	decfsz	___lwdiv@counter^0,f,c
  2897   0006BA  EF46  F003         	goto	l2185
  2898   0006BE                     l921:
  2899   0006BE  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  2900   0006C2  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2901   0006C6  0012               	return		;funcret
  2902   0006C8                     __end_of___lwdiv:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function _I2C_2_Master_Init *****************
  2906 ;; Defined at:
  2907 ;;		line 4 in file "i2c.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 2
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_color_click_init
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text22
  2936   0009A6                     __ptext22:
  2937                           	callstack 0
  2938   0009A6                     _I2C_2_Master_Init:
  2939                           	callstack 27
  2940   0009A6                     
  2941                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2942   0009A6  010E               	movlb	14	; () banked
  2943   0009A8  51D9               	movf	217,w,b	;volatile
  2944   0009AA  0BF0               	andlw	-16
  2945   0009AC  0908               	iorlw	8
  2946   0009AE  6FD9               	movwf	217,b	;volatile
  2947   0009B0                     
  2948                           ; BSR set to: 14
  2949                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2950   0009B0  8BD9               	bsf	217,5,b	;volatile
  2951                           
  2952                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2953   0009B2  0E9F               	movlw	159
  2954   0009B4  6FD6               	movwf	214,b	;volatile
  2955   0009B6                     
  2956                           ; BSR set to: 14
  2957                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2958   0009B6  8A84               	bsf	132,5,c	;volatile
  2959   0009B8                     
  2960                           ; BSR set to: 14
  2961                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2962   0009B8  8C84               	bsf	132,6,c	;volatile
  2963   0009BA                     
  2964                           ; BSR set to: 14
  2965                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2966   0009BA  9BA7               	bcf	167,5,b	;volatile
  2967   0009BC                     
  2968                           ; BSR set to: 14
  2969                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2970   0009BC  9DA7               	bcf	167,6,b	;volatile
  2971                           
  2972                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2973   0009BE  0E1D               	movlw	29
  2974   0009C0  6F1D               	movwf	29,b	;volatile
  2975                           
  2976                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2977   0009C2  0E1E               	movlw	30
  2978   0009C4  6F1C               	movwf	28,b	;volatile
  2979                           
  2980                           ;i2c.c: 18:   RD5PPS=0x1C;
  2981   0009C6  0E1C               	movlw	28
  2982   0009C8  6F6F               	movwf	111,b	;volatile
  2983                           
  2984                           ;i2c.c: 19:   RD6PPS=0x1B;
  2985   0009CA  0E1B               	movlw	27
  2986   0009CC  6F70               	movwf	112,b	;volatile
  2987   0009CE                     
  2988                           ; BSR set to: 14
  2989   0009CE  0012               	return		;funcret
  2990   0009D0                     __end_of_I2C_2_Master_Init:
  2991                           	callstack 0
  2992                           
  2993 ;; *************** function _Timer0_init *****************
  2994 ;; Defined at:
  2995 ;;		line 7 in file "timers.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;		None
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;Total ram usage:        0 bytes
  3014 ;; Hardware stack levels used: 1
  3015 ;; Hardware stack levels required when called: 2
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_main
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text23
  3024   000A3E                     __ptext23:
  3025                           	callstack 0
  3026   000A3E                     _Timer0_init:
  3027                           	callstack 28
  3028   000A3E                     
  3029                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3030   000A3E  50D6               	movf	214,w,c	;volatile
  3031   000A40  0B1F               	andlw	-225
  3032   000A42  0940               	iorlw	64
  3033   000A44  6ED6               	movwf	214,c	;volatile
  3034   000A46                     
  3035                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3036   000A46  88D6               	bsf	214,4,c	;volatile
  3037                           
  3038                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  3039   000A48  50D6               	movf	214,w,c	;volatile
  3040   000A4A  0BF0               	andlw	-16
  3041   000A4C  0908               	iorlw	8
  3042   000A4E  6ED6               	movwf	214,c	;volatile
  3043                           
  3044                           ;timers.c: 13:     TMR0H=0b11100111;
  3045   000A50  0EE7               	movlw	231
  3046   000A52  6ED4               	movwf	212,c	;volatile
  3047                           
  3048                           ;timers.c: 14:     TMR0L=0b10010101;
  3049   000A54  0E95               	movlw	149
  3050   000A56  6ED3               	movwf	211,c	;volatile
  3051   000A58                     
  3052                           ;timers.c: 15:     T0CON0bits.T016BIT=1;
  3053   000A58  88D5               	bsf	213,4,c	;volatile
  3054   000A5A                     
  3055                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  3056   000A5A  8ED5               	bsf	213,7,c	;volatile
  3057   000A5C  0012               	return		;funcret
  3058   000A5E                     __end_of_Timer0_init:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function _Interrupts_init *****************
  3062 ;; Defined at:
  3063 ;;		line 10 in file "interrupts.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		None
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 2
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_main
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text24
  3092   000A86                     __ptext24:
  3093                           	callstack 0
  3094   000A86                     _Interrupts_init:
  3095                           	callstack 28
  3096   000A86                     
  3097                           ;interrupts.c: 12:     INTCONbits.PEIE = 1;
  3098   000A86  8CF2               	bsf	242,6,c	;volatile
  3099                           
  3100                           ;interrupts.c: 13:     PIE0bits.TMR0IE = 1;
  3101   000A88  010E               	movlb	14	; () banked
  3102   000A8A  8B29               	bsf	41,5,b	;volatile
  3103                           
  3104                           ;interrupts.c: 14:     PIE2bits.C1IE = 1;
  3105   000A8C  812B               	bsf	43,0,b	;volatile
  3106                           
  3107                           ;interrupts.c: 15:     INTCONbits.GIE = 1;
  3108   000A8E  8EF2               	bsf	242,7,c	;volatile
  3109   000A90                     
  3110                           ; BSR set to: 14
  3111   000A90  0012               	return		;funcret
  3112   000A92                     __end_of_Interrupts_init:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _HighISR *****************
  3116 ;; Defined at:
  3117 ;;		line 22 in file "interrupts.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 1
  3138 ;; This function calls:
  3139 ;;		_increment_seconds
  3140 ;; This function is called by:
  3141 ;;		Interrupt level 2
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	intcode
  3146   000008                     __pintcode:
  3147                           	callstack 0
  3148   000008                     _HighISR:
  3149                           	callstack 24
  3150                           
  3151                           ; BSR set to: 14
  3152                           ;incstack = 0
  3153   000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3154   00000A                     
  3155                           ;interrupts.c: 24:     if(PIR0bits.TMR0IF == 1){
  3156   00000A  010E               	movlb	14	; () banked
  3157   00000C  AB33               	btfss	51,5,b	;volatile
  3158   00000E  EF0B  F000         	goto	i2u75_41
  3159   000012  EF0D  F000         	goto	i2u75_40
  3160   000016                     i2u75_41:
  3161   000016  EF15  F000         	goto	i2l384
  3162   00001A                     i2u75_40:
  3163   00001A                     
  3164                           ; BSR set to: 14
  3165                           ;interrupts.c: 25:     increment_seconds();
  3166   00001A  EC58  F005         	call	_increment_seconds	;wreg free
  3167   00001E                     
  3168                           ;interrupts.c: 27:     TMR0H=0b11100111;
  3169   00001E  0EE7               	movlw	231
  3170   000020  6ED4               	movwf	212,c	;volatile
  3171   000022                     
  3172                           ;interrupts.c: 28:     TMR0L=0b10010101;
  3173   000022  0E95               	movlw	149
  3174   000024  6ED3               	movwf	211,c	;volatile
  3175   000026                     
  3176                           ;interrupts.c: 30:     PIR0bits.TMR0IF = 0;
  3177   000026  010E               	movlb	14	; () banked
  3178   000028  9B33               	bcf	51,5,b	;volatile
  3179   00002A                     i2l384:
  3180                           
  3181                           ; BSR set to: 14
  3182   00002A  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3183   00002C  0011               	retfie		f
  3184   00002E                     __end_of_HighISR:
  3185                           	callstack 0
  3186                           
  3187 ;; *************** function _increment_seconds *****************
  3188 ;; Defined at:
  3189 ;;		line 313 in file "dc_motor.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		status,2, status,0
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels used: 1
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_HighISR
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text26
  3217   000AB0                     __ptext26:
  3218                           	callstack 0
  3219   000AB0                     _increment_seconds:
  3220                           	callstack 24
  3221   000AB0                     
  3222                           ;dc_motor.c: 315:     seconds += 1;
  3223   000AB0  4A56               	infsnz	_seconds^0,f,c
  3224   000AB2  2A57               	incf	(_seconds+1)^0,f,c
  3225   000AB4  0012               	return		;funcret
  3226   000AB6                     __end_of_increment_seconds:
  3227                           	callstack 0
  3228   000000                     
  3229                           	psect	rparam
  3230   000000                     
  3231                           	psect	temp
  3232   000058                     btemp:
  3233                           	callstack 0
  3234   000058                     	ds	1
  3235   000000                     int$flags	set	btemp
  3236   000000                     wtemp8	set	btemp+1
  3237   000000                     ttemp5	set	btemp+1
  3238   000000                     ttemp6	set	btemp+4
  3239   000000                     ttemp7	set	btemp+8
  3240                           
  3241                           	psect	idloc
  3242                           
  3243                           ;Config register IDLOC0 @ 0x200000
  3244                           ;	unspecified, using default values
  3245   200000                     	org	2097152
  3246   200000  0FFF               	dw	4095
  3247                           
  3248                           ;Config register IDLOC1 @ 0x200002
  3249                           ;	unspecified, using default values
  3250   200002                     	org	2097154
  3251   200002  0FFF               	dw	4095
  3252                           
  3253                           ;Config register IDLOC2 @ 0x200004
  3254                           ;	unspecified, using default values
  3255   200004                     	org	2097156
  3256   200004  0FFF               	dw	4095
  3257                           
  3258                           ;Config register IDLOC3 @ 0x200006
  3259                           ;	unspecified, using default values
  3260   200006                     	org	2097158
  3261   200006  0FFF               	dw	4095
  3262                           
  3263                           ;Config register IDLOC4 @ 0x200008
  3264                           ;	unspecified, using default values
  3265   200008                     	org	2097160
  3266   200008  0FFF               	dw	4095
  3267                           
  3268                           ;Config register IDLOC5 @ 0x20000A
  3269                           ;	unspecified, using default values
  3270   20000A                     	org	2097162
  3271   20000A  0FFF               	dw	4095
  3272                           
  3273                           ;Config register IDLOC6 @ 0x20000C
  3274                           ;	unspecified, using default values
  3275   20000C                     	org	2097164
  3276   20000C  0FFF               	dw	4095
  3277                           
  3278                           ;Config register IDLOC7 @ 0x20000E
  3279                           ;	unspecified, using default values
  3280   20000E                     	org	2097166
  3281   20000E  0FFF               	dw	4095
  3282                           
  3283                           	psect	config
  3284                           
  3285                           ;Config register CONFIG1L @ 0x300000
  3286                           ;	External Oscillator mode Selection bits
  3287                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3288                           ;	Power-up default value for COSC bits
  3289                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3290   300000                     	org	3145728
  3291   300000  AA                 	db	170
  3292                           
  3293                           ;Config register CONFIG1H @ 0x300001
  3294                           ;	unspecified, using default values
  3295                           ;	Clock Out Enable bit
  3296                           ;	CLKOUTEN = 0x1, unprogrammed default
  3297                           ;	Clock Switch Enable bit
  3298                           ;	CSWEN = 0x1, unprogrammed default
  3299                           ;	Fail-Safe Clock Monitor Enable bit
  3300                           ;	FCMEN = 0x1, unprogrammed default
  3301   300001                     	org	3145729
  3302   300001  FF                 	db	255
  3303                           
  3304                           ;Config register CONFIG2L @ 0x300002
  3305                           ;	unspecified, using default values
  3306                           ;	Master Clear Enable bit
  3307                           ;	MCLRE = 0x1, unprogrammed default
  3308                           ;	Power-up Timer Enable bit
  3309                           ;	PWRTE = 0x1, unprogrammed default
  3310                           ;	Low-power BOR enable bit
  3311                           ;	LPBOREN = 0x1, unprogrammed default
  3312                           ;	Brown-out Reset Enable bits
  3313                           ;	BOREN = 0x3, unprogrammed default
  3314   300002                     	org	3145730
  3315   300002  FF                 	db	255
  3316                           
  3317                           ;Config register CONFIG2H @ 0x300003
  3318                           ;	unspecified, using default values
  3319                           ;	Brown Out Reset Voltage selection bits
  3320                           ;	BORV = 0x3, unprogrammed default
  3321                           ;	ZCD Disable bit
  3322                           ;	ZCD = 0x1, unprogrammed default
  3323                           ;	PPSLOCK bit One-Way Set Enable bit
  3324                           ;	PPS1WAY = 0x1, unprogrammed default
  3325                           ;	Stack Full/Underflow Reset Enable bit
  3326                           ;	STVREN = 0x1, unprogrammed default
  3327                           ;	Debugger Enable bit
  3328                           ;	DEBUG = 0x1, unprogrammed default
  3329                           ;	Extended Instruction Set Enable bit
  3330                           ;	XINST = 0x1, unprogrammed default
  3331   300003                     	org	3145731
  3332   300003  FF                 	db	255
  3333                           
  3334                           ;Config register CONFIG3L @ 0x300004
  3335                           ;	WDT Period Select bits
  3336                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3337                           ;	WDT operating mode
  3338                           ;	WDTE = OFF, WDT Disabled
  3339   300004                     	org	3145732
  3340   300004  9F                 	db	159
  3341                           
  3342                           ;Config register CONFIG3H @ 0x300005
  3343                           ;	unspecified, using default values
  3344                           ;	WDT Window Select bits
  3345                           ;	WDTCWS = 0x7, unprogrammed default
  3346                           ;	WDT input clock selector
  3347                           ;	WDTCCS = 0x7, unprogrammed default
  3348   300005                     	org	3145733
  3349   300005  FF                 	db	255
  3350                           
  3351                           ;Config register CONFIG4L @ 0x300006
  3352                           ;	unspecified, using default values
  3353                           ;	Write Protection Block 0
  3354                           ;	WRT0 = 0x1, unprogrammed default
  3355                           ;	Write Protection Block 1
  3356                           ;	WRT1 = 0x1, unprogrammed default
  3357                           ;	Write Protection Block 2
  3358                           ;	WRT2 = 0x1, unprogrammed default
  3359                           ;	Write Protection Block 3
  3360                           ;	WRT3 = 0x1, unprogrammed default
  3361                           ;	Write Protection Block 3
  3362                           ;	WRT4 = 0x1, unprogrammed default
  3363                           ;	Write Protection Block 3
  3364                           ;	WRT5 = 0x1, unprogrammed default
  3365                           ;	Write Protection Block 3
  3366                           ;	WRT6 = 0x1, unprogrammed default
  3367                           ;	Write Protection Block 3
  3368                           ;	WRT7 = 0x1, unprogrammed default
  3369   300006                     	org	3145734
  3370   300006  FF                 	db	255
  3371                           
  3372                           ;Config register CONFIG4H @ 0x300007
  3373                           ;	unspecified, using default values
  3374                           ;	Configuration Register Write Protection bit
  3375                           ;	WRTC = 0x1, unprogrammed default
  3376                           ;	Boot Block Write Protection bit
  3377                           ;	WRTB = 0x1, unprogrammed default
  3378                           ;	Data EEPROM Write Protection bit
  3379                           ;	WRTD = 0x1, unprogrammed default
  3380                           ;	Scanner Enable bit
  3381                           ;	SCANE = 0x1, unprogrammed default
  3382                           ;	Low Voltage Programming Enable bit
  3383                           ;	LVP = 0x1, unprogrammed default
  3384   300007                     	org	3145735
  3385   300007  FF                 	db	255
  3386                           
  3387                           ;Config register CONFIG5L @ 0x300008
  3388                           ;	unspecified, using default values
  3389                           ;	UserNVM Program Memory Code Protection bit
  3390                           ;	CP = 0x1, unprogrammed default
  3391                           ;	DataNVM Memory Code Protection bit
  3392                           ;	CPD = 0x1, unprogrammed default
  3393   300008                     	org	3145736
  3394   300008  FF                 	db	255
  3395                           
  3396                           ;Config register CONFIG5H @ 0x300009
  3397                           ;	unspecified, using default values
  3398   300009                     	org	3145737
  3399   300009  FF                 	db	255
  3400                           
  3401                           ;Config register CONFIG6L @ 0x30000A
  3402                           ;	unspecified, using default values
  3403                           ;	Table Read Protection Block 0
  3404                           ;	EBTR0 = 0x1, unprogrammed default
  3405                           ;	Table Read Protection Block 1
  3406                           ;	EBTR1 = 0x1, unprogrammed default
  3407                           ;	Table Read Protection Block 2
  3408                           ;	EBTR2 = 0x1, unprogrammed default
  3409                           ;	Table Read Protection Block 3
  3410                           ;	EBTR3 = 0x1, unprogrammed default
  3411                           ;	Table Read Protection Block 4
  3412                           ;	EBTR4 = 0x1, unprogrammed default
  3413                           ;	Table Read Protection Block 5
  3414                           ;	EBTR5 = 0x1, unprogrammed default
  3415                           ;	Table Read Protection Block 6
  3416                           ;	EBTR6 = 0x1, unprogrammed default
  3417                           ;	Table Read Protection Block 7
  3418                           ;	EBTR7 = 0x1, unprogrammed default
  3419   30000A                     	org	3145738
  3420   30000A  FF                 	db	255
  3421                           
  3422                           ;Config register CONFIG6H @ 0x30000B
  3423                           ;	unspecified, using default values
  3424                           ;	Boot Block Table Read Protection bit
  3425                           ;	EBTRB = 0x1, unprogrammed default
  3426   30000B                     	org	3145739
  3427   30000B  FF                 	db	255
  3428                           tosu	equ	0xFFF
  3429                           tosh	equ	0xFFE
  3430                           tosl	equ	0xFFD
  3431                           stkptr	equ	0xFFC
  3432                           pclatu	equ	0xFFB
  3433                           pclath	equ	0xFFA
  3434                           pcl	equ	0xFF9
  3435                           tblptru	equ	0xFF8
  3436                           tblptrh	equ	0xFF7
  3437                           tblptrl	equ	0xFF6
  3438                           tablat	equ	0xFF5
  3439                           prodh	equ	0xFF4
  3440                           prodl	equ	0xFF3
  3441                           indf0	equ	0xFEF
  3442                           postinc0	equ	0xFEE
  3443                           postdec0	equ	0xFED
  3444                           preinc0	equ	0xFEC
  3445                           plusw0	equ	0xFEB
  3446                           fsr0h	equ	0xFEA
  3447                           fsr0l	equ	0xFE9
  3448                           wreg	equ	0xFE8
  3449                           indf1	equ	0xFE7
  3450                           postinc1	equ	0xFE6
  3451                           postdec1	equ	0xFE5
  3452                           preinc1	equ	0xFE4
  3453                           plusw1	equ	0xFE3
  3454                           fsr1h	equ	0xFE2
  3455                           fsr1l	equ	0xFE1
  3456                           bsr	equ	0xFE0
  3457                           indf2	equ	0xFDF
  3458                           postinc2	equ	0xFDE
  3459                           postdec2	equ	0xFDD
  3460                           preinc2	equ	0xFDC
  3461                           plusw2	equ	0xFDB
  3462                           fsr2h	equ	0xFDA
  3463                           fsr2l	equ	0xFD9
  3464                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        124
    BSS         236
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      87
    BANK0           160      0     108
    BANK1           256      0     208
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    return_back@motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    return_back@motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    return_back@motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    return_back@motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    Calibrate@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    Calibrate@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    Calibrate@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    Calibrate@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    moveBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    TimedfullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRightLong@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRightLong@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRightLong@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRightLong@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), return_back@motorR(COMRAM[2]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(COMRAM[9]), return_back@motorL(COMRAM[2]), 

    S1015DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S1015DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), main@motorL(COMRAM[9]), return_back@motorR(COMRAM[2]), return_back@motorL(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_moveBack
    _main->_stop
    _stop->_setMotorPWM
    _moveBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    _color_click_init->_calibrate_black
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _calibrate_black->___lwdiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   15075
                                             25 COMRAM    18    18      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                    _initDCmotorsPWM
                           _moveBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    4957
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _moveBack                                             6     0      6    5099
                                             19 COMRAM     6     0      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    4261
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1115
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    4532
                                             21 COMRAM     1     1      0
                  _I2C_2_Master_Init
                    _calibrate_black
                    _calibrate_white
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      2     2      0    1697
                                             11 COMRAM     2     2      0
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _calibrate_black                                      8     8      0    2541
                                             13 COMRAM     8     8      0
                            ___lwdiv
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (3) _set_led_color                                        2     0      2    1358
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     662
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0       0
                  _increment_seconds
 ---------------------------------------------------------------------------------
 (7) _increment_seconds                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _calibrate_black
       ___lwdiv
         ___wmul (ARG)
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _set_led_color
     _calibrate_white
       _color_read_Blue
       _color_read_Green
       _color_read_Red
       _set_led_color
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _moveBack
     _setMotorPWM
       ___lwdiv
       ___wmul
   _stop
     _setMotorPWM

 _HighISR (ROOT)
   _increment_seconds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D0       7       81.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      6C       5       67.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      57       1       92.6%
BITBIGSFRllhllh     52      0       0      44        0.0%
BITBIGSFRllhlll     46      0       0      46        0.0%
BITBIGSFRlllllh     35      0       0      55        0.0%
BITBIGSFRllllll     2D      0       0      59        0.0%
BITBIGSFRllhlll     20      0       0      48        0.0%
BITBIGSFRlllhhh     1E      0       0      50        0.0%
BITBIGSFRhhhlhh     1B      0       0      33        0.0%
BITBIGSFRhhlll      17      0       0      38        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      51        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      49        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllllh      7      0       0      56        0.0%
BITBIGSFRhl          6      0       0      39        0.0%
BITBIGSFRllllhl      5      0       0      54        0.0%
BITBIGSFRllllhh      3      0       0      53        0.0%
BITBIGSFRllhlll      2      0       0      45        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      57        0.0%
BITBIGSFRllhlll      1      0       0      47        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      52        0.0%
BITBIGSFRllhlhh      1      0       0      42        0.0%
BITBIGSFRllhlhl      1      0       0      43        0.0%
BITBIGSFRllhh        1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     193      60        0.0%
DATA                 0      0     193       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 09 14:31:31 2022

               _color_read_Red 0796                _color_read_Blue 0886                             l71 029E  
                           l73 02D4                             l82 0A3C                             l74 02B4  
                           l91 0834                             l67 0282                             l85 07E4  
                           l77 02C6                             l94 0884                             l88 08D4  
          ___wmul@multiplicand 0003               _color_read_Clear 0836               ?_calibrate_black 0001  
             _color_read_Green 07E6              ??_Interrupts_init 0001                            l112 0934  
                          l113 0936                            l114 094A                            l115 094C  
                          l116 0960                            l141 040C                            l213 019C  
                          l118 0962                            l206 05DE                            l144 04B0  
                          l216 091E                            l340 09CE                            l430 0A1C  
                          l343 09D0                            l352 0AAE                            l361 09A4  
                          l346 09F6                            l427 0A5C                            l355 0A9A  
                          l259 0652                            l349 0AA4                            l358 0A84  
                          l378 0A90                            l921 06BE                            l928 06C6  
                          _RGB 0048               ?_calibrate_white 0001                            wreg 000FE8  
                         l2103 09D0                           l2111 0A7C                           l2201 09B6  
                         l2105 09E0                           l2121 0AAA                           l2113 0A80  
                         l2203 09B8                           l2131 09A0                           l2123 0966  
                         l2107 0A9C                           l2115 0A92                           l2211 040E  
                         l2205 09BA                           l2133 09A2                           l2125 096A  
                         l2109 0AA0                           l2117 0A96                           l2221 0472  
                         l2213 041A                           l2301 0230                           l2207 09BC  
                         l2127 0972                           l2119 0AA6                           l2143 0886  
                         l2151 082C                           l2231 02E2                           l2223 047E  
                         l2215 0430                           l2311 027A                           l2303 0242  
                         l2129 097A                           l2145 08CC                           l2137 0796  
                         l2161 0920                           l2241 0346                           l2233 02F8  
                         l2225 0494                           l2217 0440                           l2209 0A20  
                         l2321 02B0                           l2313 027E                           l2305 0254  
                         l2155 0836                           l2139 07DC                           l2163 092E  
                         l2251 03A6                           l2243 035C                           l2235 0308  
                         l2227 04A4                           l2219 044C                           l2323 02C2  
                         l2315 0280                           l2307 0266                           l2171 0A14  
                         l2181 0676                           l2157 087C                           l2149 07E6  
                         l2165 0944                           l2253 03BC                           l2245 036C  
                         l2237 0314                           l2229 02D6                           l2317 0290  
                         l2309 0278                           l2261 004E                           l2191 06B0  
                         l2183 067E                           l2175 0654                           l2167 095A  
                         l2255 03D4                           l2247 038E                           l2239 033A  
                         l2351 0560                           l2271 0118                           l2263 00A2  
                         l2193 06B2                           l2185 068C                           l2177 065C  
                         l2257 03F0                           l2249 039A                           l2281 01BC  
                         l2361 05C4                           l2353 058A                           l2169 09F8  
                         l2273 015C                           l2265 00B6                           l2195 06B8  
                         l2187 0692                           l2179 066E                           l2291 01D6  
                         l2283 01C6                           l2275 019E                           l2363 05C6  
                         l2355 05AE                           l2267 00BA                           l2259 0032  
                         l2371 08D6                           l2197 09A6                           l2189 06A8  
                         l2293 01E8                           l2285 01D0                           l2277 01A2  
                         l2365 05D0                           l2357 05B8                           l2349 0550  
                         l2269 00FC                           l2373 08EE                           l1591 0A58  
                         l2199 09B0                           l2295 01FA                           l2287 01D2  
                         l2279 01AC                           l2367 05D2                           l2359 05BA  
                         l2375 08FA                           l1585 0A86                           l1593 0A5A  
                         l2297 020C                           l2289 01D4                           l2369 05DC  
                         l2377 0906                           l1587 0A3E                           l2299 021E  
                         l2571 05EC                           l1589 0A46                           l2573 060C  
                         l2581 063C                           l2575 0618                           l2831 04B6  
                         l2577 0624                           l2569 05E0                           l2841 04CE  
                         l2833 04BA                           l2579 0630                           l2851 04E4  
                         l2843 04D0                           l2835 04C6                           l2861 0500  
                         l2853 04EC                           l2845 04D4                           l2837 04C6  
                         l2829 04B2                           l2863 0508                           l2855 04F4  
                         l2847 04D8                           l2839 04CA                           l2865 0510  
                         l2857 04F8                           l2849 04DC                           l2867 0518  
                         l2859 04FC                           l2869 0534                           u1200 068C  
                         u1120 09E0                           u1201 0688                           u1121 09DC  
                         u1210 06A8                           u1130 09F6                           u1211 06A4  
                         u1131 09F2                           u1140 098E                           u1220 004E  
                         u1141 0986                           u1301 024C                           u1221 004A  
                         u1230 0118                           u1311 025E                           u1231 0114  
                         u1160 092E                           u1161 092A                           u1321 0270  
                         u1241 01E0                           u1170 0944                           u1330 0290  
                         u1171 0940                           u1331 028C                           u1251 01F2  
                         u1180 095A                           u1340 029E                           u1500 0652  
                         u1181 0956                           u1341 029A                           u1261 0204  
                         u1501 064E                           u1190 066E                           u1158 0990  
                         u1350 02AC                           u1191 066A                           u1351 02A8  
                         u1271 0216                           u1360 02C2                           u1361 02BE  
                         u1281 0228                           u1370 02D4                           u2307 0456  
                         u1371 02D0                           u1291 023A                           u2317 0488  
                         u2327 02EC                           u2337 031E                           _T2PR 000FBC  
                   _Black_rule 00C0                           u2347 0350                           u2357 0382  
                         u2277 0910                           u2367 03B0                           u2287 01B2  
                         u2297 0424                           _main 04B2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0058                           _stop 08D6                           prodh 000FF4  
                         prodl 000FF3                           start 002E         __end_of_color_read_Red 07E6  
              __end_of_HighISR 002E                   ___param_bank 000000                          ?_main 0001  
                        ?_stop 0014                    _Black_setup 002C                __end_of___lwdiv 06C8  
                        i2l271 0AB4                          i2l384 002A                          _TMR0H 000FD4  
                        _TMR0L 000FD3     __end_of_I2C_2_Master_Start 0AA6     __end_of_I2C_2_Master_Write 0A86  
                        _index 0054                          tablat 000FF5                          plusw1 000FE3  
                        plusw2 000FDB                          ttemp5 0059                          ttemp6 005C  
                        ttemp7 0060                          status 000FD8                          wtemp8 0059  
                   _Green_rule 00A8        __end_of_color_read_Blue 08D6          _I2C_2_Master_RepStart 0AA6  
              ?_color_read_Red 0005                __initialization 06C8                   __end_of_main 0550  
                 __end_of_stop 0920                         ??_main 001A                         ??_stop 0018  
                __activetblptr 000000                   ?_setMotorPWM 000E                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       _RE2PPS 000E74                         _RD5PPS 000E6F                         _RC7PPS 000E69  
                       _RD6PPS 000E70                         _RE4PPS 000E76                         i2l1583 0AB0  
                       i2l1831 000A                         i2l1833 001A                         i2l1835 001E  
                       i2l1837 0022                         i2l1839 0026                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 02D6                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                         ___wmul 09F8                      ??___lwdiv 000B  
                  _Color_rules 0100                         clear_0 070E                         clear_1 071A  
                       clear_2 0726                         isa$std 000001               __end_of_moveBack 0654  
        calibrate_black@clear1 0010          calibrate_black@clear2 0012                   __pdataCOMRAM 002C  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
               _Lightblue_rule 006C                     _White_rule 0060                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003          __end_of_set_led_color 0964  
                   __accesstop 0060        __end_of__initialization 072C       __end_of_color_read_Clear 0886  
     __end_of_color_read_Green 0836         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0005                _Interrupts_init 0A86                 __pcstackCOMRAM 0001  
                 __pidataBANK0 0736            __end_of_Timer0_init 0A5E                     __pbssBANK0 00C0  
                   __pbssBANK1 0100              _color_writetoaddr 0A1E                   _T2CLKCONbits 000FBF  
           ?_color_writetoaddr 0003                        ?___wmul 0001            ??_color_writetoaddr 0004  
                      i2u75_40 001A                        i2u75_41 0016                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    _Orange_rule 0078        __end_of_Interrupts_init 0A92  
       color_writetoaddr@value 0003               ??_color_read_Red 0007                        _HighISR 0008  
    __end_of_color_writetoaddr 0A3E             _I2C_2_Master_Start 0A9C             _I2C_2_Master_Write 0A7A  
                    ?_moveBack 0014                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 0A3E            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 0654            ?_I2C_2_Master_Write 0001                        __pcinit 06C8  
                      __ramtop 0E00                        __ptext0 04B2                        __ptext1 08D6  
                      __ptext2 05E0                        __ptext3 0032                        __ptext4 09F8  
                      __ptext5 0550                        __ptext6 019E                        __ptext7 0A1E  
                      __ptext8 040E                        __ptext9 02D6                      _T2CONbits 000FBD  
                      _seconds 0056                      _T2HLTbits 000FBE           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 072C              ?_color_click_init 0001  
                   ??_moveBack 001A             ??_color_click_init 0016                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
                  _White_setup 0038                _initDCmotorsPWM 0550                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013                    _Yellow_rule 0090                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
         _calibrate_black$2445 0014       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
             ?_Interrupts_init 0001                    _CCP1CONbits 000FAB              _increment_seconds 0AB0  
            ?_color_read_Clear 0005                    _CCP2CONbits 000FA7              ??_calibrate_black 000E  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    _CCP4CONbits 000F22  
                   main@motorL 001A                     main@motorR 0023              ??_calibrate_white 000C  
           ?_increment_seconds 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                    _Blue_rule 009C            ??_increment_seconds 0001                 __end_of___wmul 0A1E  
                __pidataCOMRAM 0A5E            color_read_Clear@tmp 000A            start_initialization 06C8  
    __end_of_increment_seconds 0AB6                      _Pink_rule 0084            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 05E0                       ??___wmul 0005                    __pdataBANK0 0060  
                  __pbssCOMRAM 0048                       ?_HighISR 0001               ___lwdiv@dividend 0007  
                 ?_Timer0_init 0001                     moveBack@mL 0014                     moveBack@mR 0016  
                    __pintcode 0008                       ?___lwdiv 0007                   moveBack@time 0018  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004              _I2C_2_Master_Idle 09D0  
            _I2C_2_Master_Init 09A6              _I2C_2_Master_Read 0964              _I2C_2_Master_Stop 0A92  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
                _set_led_color 0920            ??_I2C_2_Master_Stop 0002                       _LATCbits 000F7B  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _PIE0bits 000E29                       _PIE2bits 000E2B                       _PIR0bits 000E33  
             ?_initDCmotorsPWM 0001                      _wall_coef 0046                      _wait_time 0044  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8             set_led_color@color 0001  
    __end_of_I2C_2_Master_Idle 09F8      __end_of_I2C_2_Master_Init 09D0      __end_of_I2C_2_Master_Read 09A6  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 0A9C                   setMotorPWM@m 000E  
  I2C_2_Master_Write@data_byte 0002                  _movement_list 016C              ??_color_read_Blue 0007  
              _calibrate_black 02D6                _calibrate_white 040E                      copy_data0 06DC  
                    copy_data1 06FC                 ?_set_led_color 0001  __end_of_I2C_2_Master_RepStart 0AB0  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 019E                       _Red_rule 00B4  
                     __Hrparam 0000                       __Lrparam 0000                     _ANSELDbits 000EA7  
                   _ANSELFbits 000EB4                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
              ___lwdiv@divisor 0009                ___lwdiv@counter 000D                       __ptext10 0920  
                     __ptext11 0796                       __ptext20 09D0                       __ptext12 07E6  
                     __ptext21 0654                       __ptext13 0836                       __ptext22 09A6  
                     __ptext14 0886                       __ptext23 0A3E                       __ptext15 0A7A  
                     __ptext24 0A86                       __ptext16 0A92                       __ptext17 0A9C  
                     __ptext26 0AB0                       __ptext18 0AA6                       __ptext19 0964  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       _moveBack 05E0  
                     isa$xinst 000000                       int$flags 0058        __end_of_calibrate_black 040E  
      __end_of_calibrate_white 04B2                     _INTCONbits 000FF2                    _setMotorPWM 0032  
              ??_set_led_color 0003                       intlevel2 0000               _color_click_init 019E  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
