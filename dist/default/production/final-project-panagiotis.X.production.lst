

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 10:20:28 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 06/04/2022 GMT
    49                           ; 
    50                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F67K40 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataCOMRAM
    84   000AE4                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _Black_setup
    88   000AE4  0404               	dw	1028
    89   000AE6  0000               	dw	0
    90   000AE8  024B               	dw	587
    91   000AEA  0000               	dw	0
    92   000AEC  00A1               	dw	161
    93   000AEE  0000               	dw	0
    94                           
    95                           ;initializer for _White_setup
    96   000AF0  28FC               	dw	10492
    97   000AF2  0000               	dw	0
    98   000AF4  1B55               	dw	6997
    99   000AF6  0000               	dw	0
   100   000AF8  0770               	dw	1904
   101   000AFA  0000               	dw	0
   102                           
   103                           ;initializer for _wait_time
   104   000AFC  00DC               	dw	220
   105                           
   106                           ;initializer for _wall_coef
   107   000AFE  000F               	dw	15
   108                           
   109                           	psect	idataBANK0
   110   00077A                     __pidataBANK0:
   111                           	callstack 0
   112                           
   113                           ;initializer for _White_rule
   114   00077A  0064               	dw	100
   115   00077C  0000               	dw	0
   116   00077E  0064               	dw	100
   117   000780  0000               	dw	0
   118   000782  0064               	dw	100
   119   000784  0000               	dw	0
   120                           
   121                           ;initializer for _Lightblue_rule
   122   000786  0026               	dw	38
   123   000788  0000               	dw	0
   124   00078A  0048               	dw	72
   125   00078C  0000               	dw	0
   126   00078E  0054               	dw	84
   127   000790  0000               	dw	0
   128                           
   129                           ;initializer for _Orange_rule
   130   000792  005C               	dw	92
   131   000794  0000               	dw	0
   132   000796  0027               	dw	39
   133   000798  0000               	dw	0
   134   00079A  001C               	dw	28
   135   00079C  0000               	dw	0
   136                           
   137                           ;initializer for _Pink_rule
   138   00079E  004D               	dw	77
   139   0007A0  0000               	dw	0
   140   0007A2  003C               	dw	60
   141   0007A4  0000               	dw	0
   142   0007A6  0040               	dw	64
   143   0007A8  0000               	dw	0
   144                           
   145                           ;initializer for _Yellow_rule
   146   0007AA  005D               	dw	93
   147   0007AC  0000               	dw	0
   148   0007AE  004C               	dw	76
   149   0007B0  0000               	dw	0
   150   0007B2  0014               	dw	20
   151   0007B4  0000               	dw	0
   152                           
   153                           ;initializer for _Blue_rule
   154   0007B6  0003               	dw	3
   155   0007B8  0000               	dw	0
   156   0007BA  0009               	dw	9
   157   0007BC  0000               	dw	0
   158   0007BE  0024               	dw	36
   159   0007C0  0000               	dw	0
   160                           
   161                           ;initializer for _Green_rule
   162   0007C2  0019               	dw	25
   163   0007C4  0000               	dw	0
   164   0007C6  0036               	dw	54
   165   0007C8  0000               	dw	0
   166   0007CA  0008               	dw	8
   167   0007CC  0000               	dw	0
   168                           
   169                           ;initializer for _Red_rule
   170   0007CE  0048               	dw	72
   171   0007D0  0000               	dw	0
   172   0007D2  0002               	dw	2
   173   0007D4  0000               	dw	0
   174   0007D6  0002               	dw	2
   175   0007D8  0000               	dw	0
   176   000000                     _T0CON0bits	set	4053
   177   000000                     _T0CON1bits	set	4054
   178   000000                     _TRISDbits	set	3972
   179   000000                     _SSP2CON2bits	set	3802
   180   000000                     _SSP2CLKPPS	set	3612
   181   000000                     _SSP2DATPPS	set	3613
   182   000000                     _RC7PPS	set	3689
   183   000000                     _RE2PPS	set	3700
   184   000000                     _ANSELFbits	set	3764
   185   000000                     _TRISAbits	set	3969
   186   000000                     _TRISFbits	set	3974
   187   000000                     _PORTFbits	set	3982
   188   000000                     _TRISGbits	set	3975
   189   000000                     _TRISCbits	set	3971
   190   000000                     _TRISEbits	set	3973
   191   000000                     _SSP2BUF	set	3797
   192   000000                     _SSP2ADD	set	3798
   193   000000                     _SSP2CON1bits	set	3801
   194   000000                     _LATAbits	set	3961
   195   000000                     _LATGbits	set	3967
   196   000000                     _CCPR4H	set	3873
   197   000000                     _CCPR3H	set	3877
   198   000000                     _T2PR	set	4028
   199   000000                     _T2CONbits	set	4029
   200   000000                     _CCPR2H	set	4006
   201   000000                     _CCPR1H	set	4010
   202   000000                     _LATCbits	set	3963
   203   000000                     _LATEbits	set	3965
   204   000000                     _LATFbits	set	3966
   205   000000                     _RE4PPS	set	3702
   206   000000                     _RG6PPS	set	3720
   207   000000                     _RD5PPS	set	3695
   208   000000                     _ANSELDbits	set	3751
   209   000000                     _TMR0L	set	4051
   210   000000                     _TMR0H	set	4052
   211   000000                     _INTCONbits	set	4082
   212   000000                     _T2CLKCONbits	set	4031
   213   000000                     _T2HLTbits	set	4030
   214   000000                     _CCP1CONbits	set	4011
   215   000000                     _CCPTMRS0bits	set	4013
   216   000000                     _CCP2CONbits	set	4007
   217   000000                     _CCP3CONbits	set	3878
   218   000000                     _CCP4CONbits	set	3874
   219   000000                     _SSP2CON2	set	3802
   220   000000                     _SSP2STAT	set	3800
   221   000000                     _PIE0bits	set	3625
   222   000000                     _RD6PPS	set	3696
   223   000000                     _PIE2bits	set	3627
   224   000000                     _PIR0bits	set	3635
   225                           
   226                           ; #config settings
   227                           
   228                           	psect	cinit
   229   00070C                     __pcinit:
   230                           	callstack 0
   231   00070C                     start_initialization:
   232                           	callstack 0
   233   00070C                     __initialization:
   234                           	callstack 0
   235                           
   236                           ; Initialize objects allocated to BANK0 (96 bytes)
   237                           ; load TBLPTR registers with __pidataBANK0
   238   00070C  0E7A               	movlw	low __pidataBANK0
   239   00070E  6EF6               	movwf	tblptrl,c
   240   000710  0E07               	movlw	high __pidataBANK0
   241   000712  6EF7               	movwf	tblptrh,c
   242   000714  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   243   000716  6EF8               	movwf	tblptru,c
   244   000718  EE00  F060         	lfsr	0,__pdataBANK0
   245   00071C  EE10 F060          	lfsr	1,96
   246   000720                     copy_data0:
   247   000720  0009               	tblrd		*+
   248   000722  CFF5 FFEE          	movff	tablat,postinc0
   249   000726  50E5               	movf	postdec1,w,c
   250   000728  50E1               	movf	fsr1l,w,c
   251   00072A  E1FA               	bnz	copy_data0
   252                           
   253                           ; Initialize objects allocated to COMRAM (28 bytes)
   254                           ; load TBLPTR registers with __pidataCOMRAM
   255   00072C  0EE4               	movlw	low __pidataCOMRAM
   256   00072E  6EF6               	movwf	tblptrl,c
   257   000730  0E0A               	movlw	high __pidataCOMRAM
   258   000732  6EF7               	movwf	tblptrh,c
   259   000734  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   260   000736  6EF8               	movwf	tblptru,c
   261   000738  EE00  F02E         	lfsr	0,__pdataCOMRAM
   262   00073C  EE10 F01C          	lfsr	1,28
   263   000740                     copy_data1:
   264   000740  0009               	tblrd		*+
   265   000742  CFF5 FFEE          	movff	tablat,postinc0
   266   000746  50E5               	movf	postdec1,w,c
   267   000748  50E1               	movf	fsr1l,w,c
   268   00074A  E1FA               	bnz	copy_data1
   269                           
   270                           ; Clear objects allocated to BANK1 (208 bytes)
   271   00074C  EE01  F000         	lfsr	0,__pbssBANK1
   272   000750  0ED0               	movlw	208
   273   000752                     clear_0:
   274   000752  6AEE               	clrf	postinc0,c
   275   000754  06E8               	decf	wreg,f,c
   276   000756  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to BANK0 (12 bytes)
   279   000758  EE00  F0C0         	lfsr	0,__pbssBANK0
   280   00075C  0E0C               	movlw	12
   281   00075E                     clear_1:
   282   00075E  6AEE               	clrf	postinc0,c
   283   000760  06E8               	decf	wreg,f,c
   284   000762  E1FD               	bnz	clear_1
   285                           
   286                           ; Clear objects allocated to COMRAM (16 bytes)
   287   000764  EE00  F04A         	lfsr	0,__pbssCOMRAM
   288   000768  0E10               	movlw	16
   289   00076A                     clear_2:
   290   00076A  6AEE               	clrf	postinc0,c
   291   00076C  06E8               	decf	wreg,f,c
   292   00076E  E1FD               	bnz	clear_2
   293   000770                     end_of_initialization:
   294                           	callstack 0
   295   000770                     __end_of__initialization:
   296                           	callstack 0
   297   000770  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   298   000772  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   299   000774  0100               	movlb	0
   300   000776  EF07  F002         	goto	_main	;jump to C main() function
   301                           
   302                           	psect	bssCOMRAM
   303   00004A                     __pbssCOMRAM:
   304                           	callstack 0
   305   00004A                     _RGB:
   306                           	callstack 0
   307   00004A                     	ds	12
   308   000056                     _index:
   309                           	callstack 0
   310   000056                     	ds	2
   311   000058                     _seconds:
   312                           	callstack 0
   313   000058                     	ds	2
   314                           
   315                           	psect	dataCOMRAM
   316   00002E                     __pdataCOMRAM:
   317                           	callstack 0
   318   00002E                     _Black_setup:
   319                           	callstack 0
   320   00002E                     	ds	12
   321   00003A                     _White_setup:
   322                           	callstack 0
   323   00003A                     	ds	12
   324   000046                     _wait_time:
   325                           	callstack 0
   326   000046                     	ds	2
   327   000048                     _wall_coef:
   328                           	callstack 0
   329   000048                     	ds	2
   330                           
   331                           	psect	bssBANK0
   332   0000C0                     __pbssBANK0:
   333                           	callstack 0
   334   0000C0                     _Black_rule:
   335                           	callstack 0
   336   0000C0                     	ds	12
   337                           
   338                           	psect	dataBANK0
   339   000060                     __pdataBANK0:
   340                           	callstack 0
   341   000060                     _White_rule:
   342                           	callstack 0
   343   000060                     	ds	12
   344   00006C                     _Lightblue_rule:
   345                           	callstack 0
   346   00006C                     	ds	12
   347   000078                     _Orange_rule:
   348                           	callstack 0
   349   000078                     	ds	12
   350   000084                     _Pink_rule:
   351                           	callstack 0
   352   000084                     	ds	12
   353   000090                     _Yellow_rule:
   354                           	callstack 0
   355   000090                     	ds	12
   356   00009C                     _Blue_rule:
   357                           	callstack 0
   358   00009C                     	ds	12
   359   0000A8                     _Green_rule:
   360                           	callstack 0
   361   0000A8                     	ds	12
   362   0000B4                     _Red_rule:
   363                           	callstack 0
   364   0000B4                     	ds	12
   365                           
   366                           	psect	bssBANK1
   367   000100                     __pbssBANK1:
   368                           	callstack 0
   369   000100                     _Color_rules:
   370                           	callstack 0
   371   000100                     	ds	108
   372   00016C                     _movement_list:
   373                           	callstack 0
   374   00016C                     	ds	100
   375                           
   376                           	psect	cstackCOMRAM
   377   000001                     __pcstackCOMRAM:
   378                           	callstack 0
   379   000001                     ??_I2C_2_Master_Idle:
   380   000001                     ?___wmul:
   381                           	callstack 0
   382   000001                     set_led_color@color:
   383                           	callstack 0
   384   000001                     initDCmotorsPWM@PWMperiod:
   385                           	callstack 0
   386   000001                     ___wmul@multiplier:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x0
   390   000001                     	ds	1
   391   000002                     ??_I2C_2_Master_Read:
   392   000002                     I2C_2_Master_Write@data_byte:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x1
   396   000002                     	ds	1
   397   000003                     color_writetoaddr@value:
   398                           	callstack 0
   399   000003                     I2C_2_Master_Read@ack:
   400                           	callstack 0
   401   000003                     ___wmul@multiplicand:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x2
   405   000003                     	ds	1
   406   000004                     color_writetoaddr@address:
   407                           	callstack 0
   408   000004                     I2C_2_Master_Read@tmp:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x3
   412   000004                     	ds	1
   413   000005                     ?_color_read_Red:
   414                           	callstack 0
   415   000005                     ?_color_read_Blue:
   416                           	callstack 0
   417   000005                     ?_color_read_Green:
   418                           	callstack 0
   419   000005                     ?_color_read_Clear:
   420                           	callstack 0
   421   000005                     ___wmul@product:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x4
   425   000005                     	ds	2
   426   000007                     ??_color_read_Red:
   427   000007                     ??_color_read_Blue:
   428   000007                     ??_color_read_Green:
   429   000007                     ??_color_read_Clear:
   430   000007                     ?___lwdiv:
   431                           	callstack 0
   432   000007                     ___lwdiv@dividend:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x6
   436   000007                     	ds	2
   437   000009                     ___lwdiv@divisor:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x8
   441   000009                     	ds	1
   442   00000A                     color_read_Red@tmp:
   443                           	callstack 0
   444   00000A                     color_read_Blue@tmp:
   445                           	callstack 0
   446   00000A                     color_read_Green@tmp:
   447                           	callstack 0
   448   00000A                     color_read_Clear@tmp:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x9
   452   00000A                     	ds	1
   453   00000B                     ___lwdiv@quotient:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xA
   457   00000B                     	ds	1
   458   00000C                     ??_calibrate_white:
   459                           
   460                           ; 1 bytes @ 0xB
   461   00000C                     	ds	1
   462   00000D                     ___lwdiv@counter:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0xC
   466   00000D                     	ds	1
   467   00000E                     ??_calibrate_black:
   468   00000E                     setMotorPWM@m:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xD
   472   00000E                     	ds	2
   473   000010                     ??_setMotorPWM:
   474   000010                     calibrate_black@clear1:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xF
   478   000010                     	ds	2
   479   000012                     setMotorPWM@posDuty:
   480                           	callstack 0
   481   000012                     calibrate_black@clear2:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x11
   485   000012                     	ds	1
   486   000013                     setMotorPWM@negDuty:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x12
   490   000013                     	ds	1
   491   000014                     stop@mL:
   492                           	callstack 0
   493   000014                     fullSpeedAhead@mL:
   494                           	callstack 0
   495   000014                     TimedfullSpeedAhead@mL:
   496                           	callstack 0
   497   000014                     _calibrate_black$2439:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x13
   501   000014                     	ds	2
   502   000016                     ??_color_click_init:
   503   000016                     stop@mR:
   504                           	callstack 0
   505   000016                     fullSpeedAhead@mR:
   506                           	callstack 0
   507   000016                     TimedfullSpeedAhead@mR:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x15
   511   000016                     	ds	2
   512   000018                     TimedfullSpeedAhead@time:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x17
   516   000018                     	ds	2
   517   00001A                     ??_main:
   518                           
   519                           ; 1 bytes @ 0x19
   520   00001A                     	ds	2
   521   00001C                     main@motorL:
   522                           	callstack 0
   523                           
   524                           ; 9 bytes @ 0x1B
   525   00001C                     	ds	9
   526   000025                     main@motorR:
   527                           	callstack 0
   528                           
   529                           ; 9 bytes @ 0x24
   530   000025                     	ds	9
   531                           
   532 ;;
   533 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   534 ;;
   535 ;; *************** function _main *****************
   536 ;; Defined at:
   537 ;;		line 17 in file "main.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;  motorR          9   36[COMRAM] struct DC_motor
   542 ;;  motorL          9   27[COMRAM] struct DC_motor
   543 ;;  PWMcycle        2    0        unsigned int 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   554 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   555 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   556 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   557 ;;Total ram usage:       20 bytes
   558 ;; Hardware stack levels required when called: 7
   559 ;; This function calls:
   560 ;;		_Interrupts_init
   561 ;;		_TimedfullSpeedAhead
   562 ;;		_Timer0_init
   563 ;;		_color_click_init
   564 ;;		_fullSpeedAhead
   565 ;;		_initDCmotorsPWM
   566 ;;		_stop
   567 ;; This function is called by:
   568 ;;		Startup code after reset
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text0
   573   00040E                     __ptext0:
   574                           	callstack 0
   575   00040E                     _main:
   576                           	callstack 24
   577   00040E                     
   578                           ;main.c: 18:     Timer0_init();
   579   00040E  EC62  F005         	call	_Timer0_init	;wreg free
   580   000412                     
   581                           ;main.c: 19:     Interrupts_init();
   582   000412  EC86  F005         	call	_Interrupts_init	;wreg free
   583   000416                     
   584                           ;main.c: 20:     initDCmotorsPWM(99);
   585   000416  0E00               	movlw	0
   586   000418  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   587   00041A  0E63               	movlw	99
   588   00041C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   589   00041E  ECCA  F002         	call	_initDCmotorsPWM	;wreg free
   590   000422                     
   591                           ;main.c: 22:     color_click_init();
   592   000422  ECCF  F000         	call	_color_click_init	;wreg free
   593   000426                     
   594                           ;main.c: 24:     ANSELFbits.ANSELF2 = 0;
   595   000426  010E               	movlb	14	; () banked
   596   000428  95B4               	bcf	180,2,b	;volatile
   597   00042A                     
   598                           ; BSR set to: 14
   599                           ;main.c: 25:     TRISFbits.TRISF2 = 1;
   600   00042A  8486               	bsf	134,2,c	;volatile
   601   00042C                     
   602                           ; BSR set to: 14
   603                           ;main.c: 26:     struct DC_motor motorL, motorR;;main.c: 27:     motorL.power=0;
   604   00042C  0E00               	movlw	0
   605   00042E  6E1C               	movwf	main@motorL^0,c
   606   000430                     
   607                           ; BSR set to: 14
   608                           ;main.c: 28:     motorL.direction=1;
   609   000430  0E01               	movlw	1
   610   000432  6E1D               	movwf	(main@motorL+1)^0,c
   611   000434                     
   612                           ; BSR set to: 14
   613                           ;main.c: 29:     motorL.brakemode=1;
   614   000434  0E01               	movlw	1
   615   000436  6E1E               	movwf	(main@motorL+2)^0,c
   616   000438                     
   617                           ; BSR set to: 14
   618                           ;main.c: 30:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   619   000438  0EAA               	movlw	170
   620   00043A  6E21               	movwf	(main@motorL+5)^0,c
   621   00043C  0E0F               	movlw	15
   622   00043E  6E22               	movwf	(main@motorL+6)^0,c
   623   000440                     
   624                           ; BSR set to: 14
   625                           ;main.c: 31:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   626   000440  0EA6               	movlw	166
   627   000442  6E23               	movwf	(main@motorL+7)^0,c
   628   000444  0E0F               	movlw	15
   629   000446  6E24               	movwf	(main@motorL+8)^0,c
   630   000448                     
   631                           ; BSR set to: 14
   632                           ;main.c: 32:     motorL.PWMperiod=PWMcycle;
   633   000448  0E00               	movlw	0
   634   00044A  6E20               	movwf	(main@motorL+4)^0,c
   635   00044C  0E63               	movlw	99
   636   00044E  6E1F               	movwf	(main@motorL+3)^0,c
   637   000450                     
   638                           ; BSR set to: 14
   639                           ;main.c: 34:     motorR.power=0;
   640   000450  0E00               	movlw	0
   641   000452  6E25               	movwf	main@motorR^0,c
   642   000454                     
   643                           ; BSR set to: 14
   644                           ;main.c: 35:     motorR.direction=1;
   645   000454  0E01               	movlw	1
   646   000456  6E26               	movwf	(main@motorR+1)^0,c
   647   000458                     
   648                           ; BSR set to: 14
   649                           ;main.c: 36:     motorR.brakemode=1;
   650   000458  0E01               	movlw	1
   651   00045A  6E27               	movwf	(main@motorR+2)^0,c
   652   00045C                     
   653                           ; BSR set to: 14
   654                           ;main.c: 37:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   655   00045C  0E25               	movlw	37
   656   00045E  6E2A               	movwf	(main@motorR+5)^0,c
   657   000460  0E0F               	movlw	15
   658   000462  6E2B               	movwf	(main@motorR+6)^0,c
   659   000464                     
   660                           ; BSR set to: 14
   661                           ;main.c: 38:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   662   000464  0E21               	movlw	33
   663   000466  6E2C               	movwf	(main@motorR+7)^0,c
   664   000468  0E0F               	movlw	15
   665   00046A  6E2D               	movwf	(main@motorR+8)^0,c
   666   00046C                     
   667                           ; BSR set to: 14
   668                           ;main.c: 39:     motorR.PWMperiod=PWMcycle;
   669   00046C  0E00               	movlw	0
   670   00046E  6E29               	movwf	(main@motorR+4)^0,c
   671   000470  0E63               	movlw	99
   672   000472  6E28               	movwf	(main@motorR+3)^0,c
   673   000474                     
   674                           ; BSR set to: 14
   675                           ;main.c: 41:     fullSpeedAhead(&motorL,&motorR);
   676   000474  0E1C               	movlw	low main@motorL
   677   000476  6E14               	movwf	fullSpeedAhead@mL^0,c
   678   000478  0E00               	movlw	high main@motorL
   679   00047A  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
   680   00047C  0E25               	movlw	low main@motorR
   681   00047E  6E16               	movwf	fullSpeedAhead@mR^0,c
   682   000480  0E00               	movlw	high main@motorR
   683   000482  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
   684   000484  ECED  F003         	call	_fullSpeedAhead	;wreg free
   685   000488                     l2798:
   686                           
   687                           ;main.c: 53:         TimedfullSpeedAhead(&motorL,&motorR,10);
   688   000488  0E1C               	movlw	low main@motorL
   689   00048A  6E14               	movwf	TimedfullSpeedAhead@mL^0,c
   690   00048C  0E00               	movlw	high main@motorL
   691   00048E  6E15               	movwf	(TimedfullSpeedAhead@mL+1)^0,c
   692   000490  0E25               	movlw	low main@motorR
   693   000492  6E16               	movwf	TimedfullSpeedAhead@mR^0,c
   694   000494  0E00               	movlw	high main@motorR
   695   000496  6E17               	movwf	(TimedfullSpeedAhead@mR+1)^0,c
   696   000498  0E00               	movlw	0
   697   00049A  6E19               	movwf	(TimedfullSpeedAhead@time+1)^0,c
   698   00049C  0E0A               	movlw	10
   699   00049E  6E18               	movwf	TimedfullSpeedAhead@time^0,c
   700   0004A0  EC12  F003         	call	_TimedfullSpeedAhead	;wreg free
   701   0004A4                     
   702                           ;main.c: 54:         stop(&motorL,&motorR);
   703   0004A4  0E1C               	movlw	low main@motorL
   704   0004A6  6E14               	movwf	stop@mL^0,c
   705   0004A8  0E00               	movlw	high main@motorL
   706   0004AA  6E15               	movwf	(stop@mL+1)^0,c
   707   0004AC  0E25               	movlw	low main@motorR
   708   0004AE  6E16               	movwf	stop@mR^0,c
   709   0004B0  0E00               	movlw	high main@motorR
   710   0004B2  6E17               	movwf	(stop@mR+1)^0,c
   711   0004B4  ECFD  F004         	call	_stop	;wreg free
   712   0004B8                     
   713                           ;main.c: 55:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   714   0004B8  0E52               	movlw	82
   715   0004BA  6E1B               	movwf	(??_main+1)^0,c
   716   0004BC  0E2B               	movlw	43
   717   0004BE  6E1A               	movwf	??_main^0,c
   718   0004C0  0E00               	movlw	0
   719   0004C2                     u2157:
   720   0004C2  2EE8               	decfsz	wreg,f,c
   721   0004C4  D7FE               	bra	u2157
   722   0004C6  2E1A               	decfsz	??_main^0,f,c
   723   0004C8  D7FC               	bra	u2157
   724   0004CA  2E1B               	decfsz	(??_main+1)^0,f,c
   725   0004CC  D7FA               	bra	u2157
   726   0004CE  D000               	nop2	
   727   0004D0                     
   728                           ;main.c: 56:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   729   0004D0  0E52               	movlw	82
   730   0004D2  6E1B               	movwf	(??_main+1)^0,c
   731   0004D4  0E2B               	movlw	43
   732   0004D6  6E1A               	movwf	??_main^0,c
   733   0004D8  0E00               	movlw	0
   734   0004DA                     u2167:
   735   0004DA  2EE8               	decfsz	wreg,f,c
   736   0004DC  D7FE               	bra	u2167
   737   0004DE  2E1A               	decfsz	??_main^0,f,c
   738   0004E0  D7FC               	bra	u2167
   739   0004E2  2E1B               	decfsz	(??_main+1)^0,f,c
   740   0004E4  D7FA               	bra	u2167
   741   0004E6  D000               	nop2	
   742   0004E8  EF44  F002         	goto	l2798
   743   0004EC  EF17  F000         	goto	start
   744   0004F0                     __end_of_main:
   745                           	callstack 0
   746                           
   747 ;; *************** function _stop *****************
   748 ;; Defined at:
   749 ;;		line 92 in file "dc_motor.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  mL              2   19[COMRAM] PTR struct DC_motor
   752 ;;		 -> main@motorL(9), 
   753 ;;  mR              2   21[COMRAM] PTR struct DC_motor
   754 ;;		 -> main@motorR(9), 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   770 ;;Total ram usage:        4 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 4
   773 ;; This function calls:
   774 ;;		_setMotorPWM
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text1
   781   0009FA                     __ptext1:
   782                           	callstack 0
   783   0009FA                     _stop:
   784                           	callstack 26
   785   0009FA                     
   786                           ;dc_motor.c: 92: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 93: {;d
      +                          c_motor.c: 94:     (*mL).power=0;
   787   0009FA  C014  FFD9         	movff	stop@mL,fsr2l
   788   0009FE  C015  FFDA         	movff	stop@mL+1,fsr2h
   789   000A02  0E00               	movlw	0
   790   000A04  6EDF               	movwf	indf2,c
   791                           
   792                           ;dc_motor.c: 95:     (*mR).power=0;
   793   000A06  C016  FFD9         	movff	stop@mR,fsr2l
   794   000A0A  C017  FFDA         	movff	stop@mR+1,fsr2h
   795   000A0E  0E00               	movlw	0
   796   000A10  6EDF               	movwf	indf2,c
   797   000A12                     
   798                           ;dc_motor.c: 96:     setMotorPWM(mL);
   799   000A12  C014  F00E         	movff	stop@mL,setMotorPWM@m
   800   000A16  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
   801   000A1A  EC19  F000         	call	_setMotorPWM	;wreg free
   802   000A1E                     
   803                           ;dc_motor.c: 97:     setMotorPWM(mR);
   804   000A1E  C016  F00E         	movff	stop@mR,setMotorPWM@m
   805   000A22  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
   806   000A26  EC19  F000         	call	_setMotorPWM	;wreg free
   807   000A2A  0012               	return		;funcret
   808   000A2C                     __end_of_stop:
   809                           	callstack 0
   810                           
   811 ;; *************** function _initDCmotorsPWM *****************
   812 ;; Defined at:
   813 ;;		line 9 in file "dc_motor.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  PWMperiod       2    0[COMRAM] int 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   830 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   831 ;;Total ram usage:        2 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 2
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text2
   842   000594                     __ptext2:
   843                           	callstack 0
   844   000594                     _initDCmotorsPWM:
   845                           	callstack 28
   846   000594                     
   847                           ;dc_motor.c: 11:     TRISEbits.TRISE2=0;
   848   000594  9485               	bcf	133,2,c	;volatile
   849                           
   850                           ;dc_motor.c: 12:     TRISCbits.TRISC7=0;
   851   000596  9E83               	bcf	131,7,c	;volatile
   852                           
   853                           ;dc_motor.c: 13:     TRISGbits.TRISG6=0;
   854   000598  9C87               	bcf	135,6,c	;volatile
   855                           
   856                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
   857   00059A  9885               	bcf	133,4,c	;volatile
   858                           
   859                           ;dc_motor.c: 16:     LATEbits.LATE2=0;
   860   00059C  947D               	bcf	125,2,c	;volatile
   861                           
   862                           ;dc_motor.c: 17:     LATCbits.LATC7=0;
   863   00059E  9E7B               	bcf	123,7,c	;volatile
   864                           
   865                           ;dc_motor.c: 18:     LATGbits.LATG6=0;
   866   0005A0  9C7F               	bcf	127,6,c	;volatile
   867                           
   868                           ;dc_motor.c: 19:     LATEbits.LATE4=0;
   869   0005A2  987D               	bcf	125,4,c	;volatile
   870   0005A4                     
   871                           ;dc_motor.c: 22:     RE2PPS=0x05;
   872   0005A4  0E05               	movlw	5
   873   0005A6  010E               	movlb	14	; () banked
   874   0005A8  6F74               	movwf	116,b	;volatile
   875                           
   876                           ;dc_motor.c: 23:     RE4PPS=0x06;
   877   0005AA  0E06               	movlw	6
   878   0005AC  6F76               	movwf	118,b	;volatile
   879                           
   880                           ;dc_motor.c: 24:     RC7PPS=0x07;
   881   0005AE  0E07               	movlw	7
   882   0005B0  6F69               	movwf	105,b	;volatile
   883                           
   884                           ;dc_motor.c: 25:     RG6PPS=0x08;
   885   0005B2  0E08               	movlw	8
   886   0005B4  6F88               	movwf	136,b	;volatile
   887                           
   888                           ;dc_motor.c: 28:     T2CONbits.CKPS=0b100;
   889   0005B6  50BD               	movf	189,w,c	;volatile
   890   0005B8  0B8F               	andlw	-113
   891   0005BA  0940               	iorlw	64
   892   0005BC  6EBD               	movwf	189,c	;volatile
   893                           
   894                           ;dc_motor.c: 29:     T2HLTbits.MODE=0b00000;
   895   0005BE  0EE0               	movlw	-32
   896   0005C0  16BE               	andwf	190,f,c	;volatile
   897                           
   898                           ;dc_motor.c: 30:     T2CLKCONbits.CS=0b0001;
   899   0005C2  50BF               	movf	191,w,c	;volatile
   900   0005C4  0BF0               	andlw	-16
   901   0005C6  0901               	iorlw	1
   902   0005C8  6EBF               	movwf	191,c	;volatile
   903                           
   904                           ;dc_motor.c: 34:     T2PR=99;
   905   0005CA  0E63               	movlw	99
   906   0005CC  6EBC               	movwf	188,c	;volatile
   907   0005CE                     
   908                           ; BSR set to: 14
   909                           ;dc_motor.c: 35:     T2CONbits.ON=1;
   910   0005CE  8EBD               	bsf	189,7,c	;volatile
   911                           
   912                           ;dc_motor.c: 39:     CCPR1H=0;
   913   0005D0  0E00               	movlw	0
   914   0005D2  6EAA               	movwf	170,c	;volatile
   915                           
   916                           ;dc_motor.c: 40:     CCPR2H=0;
   917   0005D4  0E00               	movlw	0
   918   0005D6  6EA6               	movwf	166,c	;volatile
   919                           
   920                           ;dc_motor.c: 41:     CCPR3H=0;
   921   0005D8  0E00               	movlw	0
   922   0005DA  010F               	movlb	15	; () banked
   923   0005DC  6F25               	movwf	37,b	;volatile
   924                           
   925                           ;dc_motor.c: 42:     CCPR4H=0;
   926   0005DE  0E00               	movlw	0
   927   0005E0  6F21               	movwf	33,b	;volatile
   928                           
   929                           ;dc_motor.c: 45:     CCPTMRS0bits.C1TSEL=0;
   930   0005E2  0EFC               	movlw	-4
   931   0005E4  16AD               	andwf	173,f,c	;volatile
   932                           
   933                           ;dc_motor.c: 46:     CCPTMRS0bits.C2TSEL=0;
   934   0005E6  0EF3               	movlw	-13
   935   0005E8  16AD               	andwf	173,f,c	;volatile
   936                           
   937                           ;dc_motor.c: 47:     CCPTMRS0bits.C3TSEL=0;
   938   0005EA  0ECF               	movlw	-49
   939   0005EC  16AD               	andwf	173,f,c	;volatile
   940                           
   941                           ;dc_motor.c: 48:     CCPTMRS0bits.C4TSEL=0;
   942   0005EE  0E3F               	movlw	-193
   943   0005F0  16AD               	andwf	173,f,c	;volatile
   944   0005F2                     
   945                           ; BSR set to: 15
   946                           ;dc_motor.c: 51:     CCP1CONbits.FMT=1;
   947   0005F2  88AB               	bsf	171,4,c	;volatile
   948                           
   949                           ;dc_motor.c: 52:     CCP1CONbits.CCP1MODE=0b1100;
   950   0005F4  50AB               	movf	171,w,c	;volatile
   951   0005F6  0BF0               	andlw	-16
   952   0005F8  090C               	iorlw	12
   953   0005FA  6EAB               	movwf	171,c	;volatile
   954   0005FC                     
   955                           ; BSR set to: 15
   956                           ;dc_motor.c: 53:     CCP1CONbits.EN=1;
   957   0005FC  8EAB               	bsf	171,7,c	;volatile
   958   0005FE                     
   959                           ; BSR set to: 15
   960                           ;dc_motor.c: 55:     CCP2CONbits.FMT=1;
   961   0005FE  88A7               	bsf	167,4,c	;volatile
   962                           
   963                           ;dc_motor.c: 56:     CCP2CONbits.CCP2MODE=0b1100;
   964   000600  50A7               	movf	167,w,c	;volatile
   965   000602  0BF0               	andlw	-16
   966   000604  090C               	iorlw	12
   967   000606  6EA7               	movwf	167,c	;volatile
   968   000608                     
   969                           ; BSR set to: 15
   970                           ;dc_motor.c: 57:     CCP2CONbits.EN=1;
   971   000608  8EA7               	bsf	167,7,c	;volatile
   972   00060A                     
   973                           ; BSR set to: 15
   974                           ;dc_motor.c: 59:     CCP3CONbits.FMT=1;
   975   00060A  8926               	bsf	38,4,b	;volatile
   976                           
   977                           ;dc_motor.c: 60:     CCP3CONbits.CCP3MODE=0b1100;
   978   00060C  5126               	movf	38,w,b	;volatile
   979   00060E  0BF0               	andlw	-16
   980   000610  090C               	iorlw	12
   981   000612  6F26               	movwf	38,b	;volatile
   982   000614                     
   983                           ; BSR set to: 15
   984                           ;dc_motor.c: 61:     CCP3CONbits.EN=1;
   985   000614  8F26               	bsf	38,7,b	;volatile
   986   000616                     
   987                           ; BSR set to: 15
   988                           ;dc_motor.c: 63:     CCP4CONbits.FMT=1;
   989   000616  8922               	bsf	34,4,b	;volatile
   990                           
   991                           ;dc_motor.c: 64:     CCP4CONbits.CCP4MODE=0b1100;
   992   000618  5122               	movf	34,w,b	;volatile
   993   00061A  0BF0               	andlw	-16
   994   00061C  090C               	iorlw	12
   995   00061E  6F22               	movwf	34,b	;volatile
   996   000620                     
   997                           ; BSR set to: 15
   998                           ;dc_motor.c: 65:     CCP4CONbits.EN=1;
   999   000620  8F22               	bsf	34,7,b	;volatile
  1000   000622                     
  1001                           ; BSR set to: 15
  1002   000622  0012               	return		;funcret
  1003   000624                     __end_of_initDCmotorsPWM:
  1004                           	callstack 0
  1005                           
  1006 ;; *************** function _fullSpeedAhead *****************
  1007 ;; Defined at:
  1008 ;;		line 247 in file "dc_motor.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  1011 ;;		 -> main@motorL(9), 
  1012 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  1013 ;;		 -> main@motorR(9), 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1029 ;;Total ram usage:        4 bytes
  1030 ;; Hardware stack levels used: 1
  1031 ;; Hardware stack levels required when called: 4
  1032 ;; This function calls:
  1033 ;;		_setMotorPWM
  1034 ;; This function is called by:
  1035 ;;		_main
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text3
  1040   0007DA                     __ptext3:
  1041                           	callstack 0
  1042   0007DA                     _fullSpeedAhead:
  1043                           	callstack 26
  1044   0007DA                     
  1045                           ;dc_motor.c: 247: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 248: {;dc_motor.c: 249:     seconds = 0;
  1046   0007DA  0E00               	movlw	0
  1047   0007DC  6E59               	movwf	(_seconds+1)^0,c
  1048   0007DE  0E00               	movlw	0
  1049   0007E0  6E58               	movwf	_seconds^0,c
  1050   0007E2                     
  1051                           ;dc_motor.c: 250:     (*mL).direction=1;
  1052   0007E2  EE20 F001          	lfsr	2,1
  1053   0007E6  5014               	movf	fullSpeedAhead@mL^0,w,c
  1054   0007E8  26D9               	addwf	fsr2l,f,c
  1055   0007EA  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1056   0007EC  22DA               	addwfc	fsr2h,f,c
  1057   0007EE  0E01               	movlw	1
  1058   0007F0  6EDF               	movwf	indf2,c
  1059   0007F2                     
  1060                           ;dc_motor.c: 251:     (*mR).direction=1;
  1061   0007F2  EE20 F001          	lfsr	2,1
  1062   0007F6  5016               	movf	fullSpeedAhead@mR^0,w,c
  1063   0007F8  26D9               	addwf	fsr2l,f,c
  1064   0007FA  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1065   0007FC  22DA               	addwfc	fsr2h,f,c
  1066   0007FE  0E01               	movlw	1
  1067   000800  6EDF               	movwf	indf2,c
  1068   000802                     
  1069                           ;dc_motor.c: 252:     (*mL).power=40;
  1070   000802  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1071   000806  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1072   00080A  0E28               	movlw	40
  1073   00080C  6EDF               	movwf	indf2,c
  1074   00080E                     
  1075                           ;dc_motor.c: 253:     (*mR).power=38;
  1076   00080E  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1077   000812  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1078   000816  0E26               	movlw	38
  1079   000818  6EDF               	movwf	indf2,c
  1080   00081A                     
  1081                           ;dc_motor.c: 254:     setMotorPWM(mL);
  1082   00081A  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1083   00081E  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1084   000822  EC19  F000         	call	_setMotorPWM	;wreg free
  1085   000826                     
  1086                           ;dc_motor.c: 255:     setMotorPWM(mR);
  1087   000826  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1088   00082A  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1089   00082E  EC19  F000         	call	_setMotorPWM	;wreg free
  1090   000832  0012               	return		;funcret
  1091   000834                     __end_of_fullSpeedAhead:
  1092                           	callstack 0
  1093                           
  1094 ;; *************** function _color_click_init *****************
  1095 ;; Defined at:
  1096 ;;		line 30 in file "color.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1114 ;;Total ram usage:        1 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; Hardware stack levels required when called: 6
  1117 ;; This function calls:
  1118 ;;		_I2C_2_Master_Init
  1119 ;;		_calibrate_black
  1120 ;;		_calibrate_white
  1121 ;;		_color_writetoaddr
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text4
  1128   00019E                     __ptext4:
  1129                           	callstack 0
  1130   00019E                     _color_click_init:
  1131                           	callstack 24
  1132   00019E                     
  1133                           ;color.c: 33:     I2C_2_Master_Init();
  1134   00019E  EC16  F005         	call	_I2C_2_Master_Init	;wreg free
  1135   0001A2                     
  1136                           ;color.c: 36:   color_writetoaddr(0x00, 0x01);
  1137   0001A2  0E01               	movlw	1
  1138   0001A4  6E03               	movwf	color_writetoaddr@value^0,c
  1139   0001A6  0E00               	movlw	0
  1140   0001A8  EC52  F005         	call	_color_writetoaddr
  1141   0001AC                     
  1142                           ;color.c: 37:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1143   0001AC  0E3F               	movlw	63
  1144   0001AE  6E16               	movwf	??_color_click_init^0,c
  1145   0001B0  0E55               	movlw	85
  1146   0001B2                     u2177:
  1147   0001B2  2EE8               	decfsz	wreg,f,c
  1148   0001B4  D7FE               	bra	u2177
  1149   0001B6  2E16               	decfsz	??_color_click_init^0,f,c
  1150   0001B8  D7FC               	bra	u2177
  1151   0001BA  F000               	nop	
  1152   0001BC                     
  1153                           ;color.c: 40:  color_writetoaddr(0x00, 0x03);
  1154   0001BC  0E03               	movlw	3
  1155   0001BE  6E03               	movwf	color_writetoaddr@value^0,c
  1156   0001C0  0E00               	movlw	0
  1157   0001C2  EC52  F005         	call	_color_writetoaddr
  1158   0001C6                     
  1159                           ;color.c: 43:  color_writetoaddr(0x01, 0xD5);
  1160   0001C6  0ED5               	movlw	213
  1161   0001C8  6E03               	movwf	color_writetoaddr@value^0,c
  1162   0001CA  0E01               	movlw	1
  1163   0001CC  EC52  F005         	call	_color_writetoaddr
  1164   0001D0                     
  1165                           ;color.c: 45:     TRISFbits.TRISF7 = 0;
  1166   0001D0  9E86               	bcf	134,7,c	;volatile
  1167   0001D2                     
  1168                           ;color.c: 46:     TRISGbits.TRISG1 = 0;
  1169   0001D2  9287               	bcf	135,1,c	;volatile
  1170   0001D4                     
  1171                           ;color.c: 47:     TRISAbits.TRISA4 = 0;
  1172   0001D4  9881               	bcf	129,4,c	;volatile
  1173   0001D6                     
  1174                           ;color.c: 49:     Color_rules[0] = Red_rule;
  1175   0001D6  EE20  F0B4         	lfsr	2,_Red_rule
  1176   0001DA  EE11  F000         	lfsr	1,_Color_rules
  1177   0001DE  0E0B               	movlw	11
  1178   0001E0                     u1181:
  1179   0001E0  CFDB FFE3          	movff	plusw2,plusw1
  1180   0001E4  06E8               	decf	wreg,f,c
  1181   0001E6  E2FC               	bc	u1181
  1182   0001E8                     
  1183                           ;color.c: 50:     Color_rules[1] = Green_rule;
  1184   0001E8  EE20  F0A8         	lfsr	2,_Green_rule
  1185   0001EC  EE11  F00C         	lfsr	1,_Color_rules+12
  1186   0001F0  0E0B               	movlw	11
  1187   0001F2                     u1191:
  1188   0001F2  CFDB FFE3          	movff	plusw2,plusw1
  1189   0001F6  06E8               	decf	wreg,f,c
  1190   0001F8  E2FC               	bc	u1191
  1191   0001FA                     
  1192                           ;color.c: 51:     Color_rules[2] = Blue_rule;
  1193   0001FA  EE20  F09C         	lfsr	2,_Blue_rule
  1194   0001FE  EE11  F018         	lfsr	1,_Color_rules+24
  1195   000202  0E0B               	movlw	11
  1196   000204                     u1201:
  1197   000204  CFDB FFE3          	movff	plusw2,plusw1
  1198   000208  06E8               	decf	wreg,f,c
  1199   00020A  E2FC               	bc	u1201
  1200   00020C                     
  1201                           ;color.c: 52:     Color_rules[3] = Yellow_rule;
  1202   00020C  EE20  F090         	lfsr	2,_Yellow_rule
  1203   000210  EE11  F024         	lfsr	1,_Color_rules+36
  1204   000214  0E0B               	movlw	11
  1205   000216                     u1211:
  1206   000216  CFDB FFE3          	movff	plusw2,plusw1
  1207   00021A  06E8               	decf	wreg,f,c
  1208   00021C  E2FC               	bc	u1211
  1209   00021E                     
  1210                           ;color.c: 53:     Color_rules[4] = Pink_rule;
  1211   00021E  EE20  F084         	lfsr	2,_Pink_rule
  1212   000222  EE11  F030         	lfsr	1,_Color_rules+48
  1213   000226  0E0B               	movlw	11
  1214   000228                     u1221:
  1215   000228  CFDB FFE3          	movff	plusw2,plusw1
  1216   00022C  06E8               	decf	wreg,f,c
  1217   00022E  E2FC               	bc	u1221
  1218   000230                     
  1219                           ;color.c: 54:     Color_rules[5] = Orange_rule;
  1220   000230  EE20  F078         	lfsr	2,_Orange_rule
  1221   000234  EE11  F03C         	lfsr	1,_Color_rules+60
  1222   000238  0E0B               	movlw	11
  1223   00023A                     u1231:
  1224   00023A  CFDB FFE3          	movff	plusw2,plusw1
  1225   00023E  06E8               	decf	wreg,f,c
  1226   000240  E2FC               	bc	u1231
  1227   000242                     
  1228                           ;color.c: 55:     Color_rules[6] = Lightblue_rule;
  1229   000242  EE20  F06C         	lfsr	2,_Lightblue_rule
  1230   000246  EE11  F048         	lfsr	1,_Color_rules+72
  1231   00024A  0E0B               	movlw	11
  1232   00024C                     u1241:
  1233   00024C  CFDB FFE3          	movff	plusw2,plusw1
  1234   000250  06E8               	decf	wreg,f,c
  1235   000252  E2FC               	bc	u1241
  1236   000254                     
  1237                           ;color.c: 56:     Color_rules[7] = White_rule;
  1238   000254  EE20  F060         	lfsr	2,_White_rule
  1239   000258  EE11  F054         	lfsr	1,_Color_rules+84
  1240   00025C  0E0B               	movlw	11
  1241   00025E                     u1251:
  1242   00025E  CFDB FFE3          	movff	plusw2,plusw1
  1243   000262  06E8               	decf	wreg,f,c
  1244   000264  E2FC               	bc	u1251
  1245   000266                     
  1246                           ;color.c: 57:     Color_rules[8] = Black_rule;
  1247   000266  EE20  F0C0         	lfsr	2,_Black_rule
  1248   00026A  EE11  F060         	lfsr	1,_Color_rules+96
  1249   00026E  0E0B               	movlw	11
  1250   000270                     u1261:
  1251   000270  CFDB FFE3          	movff	plusw2,plusw1
  1252   000274  06E8               	decf	wreg,f,c
  1253   000276  E2FC               	bc	u1261
  1254   000278                     
  1255                           ;color.c: 66:     TRISFbits.TRISF3=1;
  1256   000278  8686               	bsf	134,3,c	;volatile
  1257   00027A                     
  1258                           ;color.c: 67:     ANSELFbits.ANSELF3=0;
  1259   00027A  010E               	movlb	14	; () banked
  1260   00027C  97B4               	bcf	180,3,b	;volatile
  1261   00027E                     
  1262                           ; BSR set to: 14
  1263                           ;color.c: 68:     TRISFbits.TRISF2=1;
  1264   00027E  8486               	bsf	134,2,c	;volatile
  1265   000280                     
  1266                           ; BSR set to: 14
  1267                           ;color.c: 69:     ANSELFbits.ANSELF2=0;
  1268   000280  95B4               	bcf	180,2,b	;volatile
  1269   000282                     l67:
  1270   000282  A68E               	btfss	142,3,c	;volatile
  1271   000284  EF46  F001         	goto	u1271
  1272   000288  EF48  F001         	goto	u1270
  1273   00028C                     u1271:
  1274   00028C  EF4F  F001         	goto	l71
  1275   000290                     u1270:
  1276   000290  B48E               	btfsc	142,2,c	;volatile
  1277   000292  EF4D  F001         	goto	u1281
  1278   000296  EF4F  F001         	goto	u1280
  1279   00029A                     u1281:
  1280   00029A  EF41  F001         	goto	l67
  1281   00029E                     u1280:
  1282   00029E                     l71:
  1283                           
  1284                           ;color.c: 72:     if(!PORTFbits.RF2){
  1285   00029E  B48E               	btfsc	142,2,c	;volatile
  1286   0002A0  EF54  F001         	goto	u1291
  1287   0002A4  EF56  F001         	goto	u1290
  1288   0002A8                     u1291:
  1289   0002A8  EF58  F001         	goto	l2282
  1290   0002AC                     u1290:
  1291   0002AC  EF6A  F001         	goto	l73
  1292   0002B0                     l2282:
  1293                           
  1294                           ;color.c: 75:     calibrate_white();
  1295   0002B0  EC78  F002         	call	_calibrate_white	;wreg free
  1296   0002B4                     l74:
  1297   0002B4  B68E               	btfsc	142,3,c	;volatile
  1298   0002B6  EF5F  F001         	goto	u1301
  1299   0002BA  EF61  F001         	goto	u1300
  1300   0002BE                     u1301:
  1301   0002BE  EF5A  F001         	goto	l74
  1302   0002C2                     u1300:
  1303   0002C2                     
  1304                           ;color.c: 77:     calibrate_black();
  1305   0002C2  EC6B  F001         	call	_calibrate_black	;wreg free
  1306   0002C6                     l77:
  1307   0002C6  B68E               	btfsc	142,3,c	;volatile
  1308   0002C8  EF68  F001         	goto	u1311
  1309   0002CC  EF6A  F001         	goto	u1310
  1310   0002D0                     u1311:
  1311   0002D0  EF63  F001         	goto	l77
  1312   0002D4                     u1310:
  1313   0002D4                     l73:
  1314   0002D4  0012               	return		;funcret
  1315   0002D6                     __end_of_color_click_init:
  1316                           	callstack 0
  1317                           
  1318 ;; *************** function _color_writetoaddr *****************
  1319 ;; Defined at:
  1320 ;;		line 82 in file "color.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  address         1    wreg     unsigned char 
  1323 ;;  value           1    2[COMRAM] unsigned char 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  address         1    3[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1335 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1339 ;;Total ram usage:        2 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 4
  1342 ;; This function calls:
  1343 ;;		_I2C_2_Master_Start
  1344 ;;		_I2C_2_Master_Stop
  1345 ;;		_I2C_2_Master_Write
  1346 ;; This function is called by:
  1347 ;;		_color_click_init
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text5
  1352   000AA4                     __ptext5:
  1353                           	callstack 0
  1354   000AA4                     _color_writetoaddr:
  1355                           	callstack 25
  1356                           
  1357                           ;incstack = 0
  1358                           ;color_writetoaddr@address stored from wreg
  1359   000AA4  6E04               	movwf	color_writetoaddr@address^0,c
  1360   000AA6                     
  1361                           ;color.c: 83:     I2C_2_Master_Start();
  1362   000AA6  EC91  F005         	call	_I2C_2_Master_Start	;wreg free
  1363                           
  1364                           ;color.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  1365   000AAA  0E52               	movlw	82
  1366   000AAC  EC80  F005         	call	_I2C_2_Master_Write
  1367                           
  1368                           ;color.c: 85:     I2C_2_Master_Write(0x80 | address);
  1369   000AB0  5004               	movf	color_writetoaddr@address^0,w,c
  1370   000AB2  0980               	iorlw	128
  1371   000AB4  EC80  F005         	call	_I2C_2_Master_Write
  1372                           
  1373                           ;color.c: 86:     I2C_2_Master_Write(value);
  1374   000AB8  5003               	movf	color_writetoaddr@value^0,w,c
  1375   000ABA  EC80  F005         	call	_I2C_2_Master_Write
  1376                           
  1377                           ;color.c: 87:     I2C_2_Master_Stop();
  1378   000ABE  EC8C  F005         	call	_I2C_2_Master_Stop	;wreg free
  1379   000AC2  0012               	return		;funcret
  1380   000AC4                     __end_of_color_writetoaddr:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _calibrate_white *****************
  1384 ;; Defined at:
  1385 ;;		line 229 in file "color.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1401 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;Total ram usage:        2 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; Hardware stack levels required when called: 5
  1406 ;; This function calls:
  1407 ;;		_color_read_Blue
  1408 ;;		_color_read_Green
  1409 ;;		_color_read_Red
  1410 ;;		_set_led_color
  1411 ;; This function is called by:
  1412 ;;		_color_click_init
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text6
  1417   0004F0                     __ptext6:
  1418                           	callstack 0
  1419   0004F0                     _calibrate_white:
  1420                           	callstack 24
  1421   0004F0                     
  1422                           ;color.c: 230:     set_led_color(0b100);
  1423   0004F0  0E00               	movlw	0
  1424   0004F2  6E02               	movwf	(set_led_color@color+1)^0,c
  1425   0004F4  0E04               	movlw	4
  1426   0004F6  6E01               	movwf	set_led_color@color^0,c
  1427   0004F8  ECBA  F004         	call	_set_led_color	;wreg free
  1428   0004FC                     
  1429                           ;color.c: 231:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1430   0004FC  0E12               	movlw	18
  1431   0004FE  6E0D               	movwf	(??_calibrate_white+1)^0,c
  1432   000500  0EDC               	movlw	220
  1433   000502  6E0C               	movwf	??_calibrate_white^0,c
  1434   000504  0E60               	movlw	96
  1435   000506                     u2187:
  1436   000506  2EE8               	decfsz	wreg,f,c
  1437   000508  D7FE               	bra	u2187
  1438   00050A  2E0C               	decfsz	??_calibrate_white^0,f,c
  1439   00050C  D7FC               	bra	u2187
  1440   00050E  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  1441   000510  D7FA               	bra	u2187
  1442   000512                     
  1443                           ;color.c: 232:     White_setup.R = color_read_Red();
  1444   000512  EC1A  F004         	call	_color_read_Red	;wreg free
  1445   000516  C005  F03A         	movff	?_color_read_Red,_White_setup
  1446   00051A  C006  F03B         	movff	?_color_read_Red+1,_White_setup+1
  1447   00051E  6A3C               	clrf	(_White_setup+2)^0,c
  1448   000520  6A3D               	clrf	(_White_setup+3)^0,c
  1449   000522                     
  1450                           ;color.c: 233:     set_led_color(0b010);
  1451   000522  0E00               	movlw	0
  1452   000524  6E02               	movwf	(set_led_color@color+1)^0,c
  1453   000526  0E02               	movlw	2
  1454   000528  6E01               	movwf	set_led_color@color^0,c
  1455   00052A  ECBA  F004         	call	_set_led_color	;wreg free
  1456   00052E                     
  1457                           ;color.c: 234:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1458   00052E  0E12               	movlw	18
  1459   000530  6E0D               	movwf	(??_calibrate_white+1)^0,c
  1460   000532  0EDC               	movlw	220
  1461   000534  6E0C               	movwf	??_calibrate_white^0,c
  1462   000536  0E60               	movlw	96
  1463   000538                     u2197:
  1464   000538  2EE8               	decfsz	wreg,f,c
  1465   00053A  D7FE               	bra	u2197
  1466   00053C  2E0C               	decfsz	??_calibrate_white^0,f,c
  1467   00053E  D7FC               	bra	u2197
  1468   000540  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  1469   000542  D7FA               	bra	u2197
  1470                           
  1471                           ;color.c: 235:     White_setup.G = color_read_Green();
  1472   000544  EC42  F004         	call	_color_read_Green	;wreg free
  1473   000548  C005  F03E         	movff	?_color_read_Green,_White_setup+4
  1474   00054C  C006  F03F         	movff	?_color_read_Green+1,_White_setup+5
  1475   000550  6A40               	clrf	(_White_setup+6)^0,c
  1476   000552  6A41               	clrf	(_White_setup+7)^0,c
  1477   000554                     
  1478                           ;color.c: 236:     set_led_color(0b001);
  1479   000554  0E00               	movlw	0
  1480   000556  6E02               	movwf	(set_led_color@color+1)^0,c
  1481   000558  0E01               	movlw	1
  1482   00055A  6E01               	movwf	set_led_color@color^0,c
  1483   00055C  ECBA  F004         	call	_set_led_color	;wreg free
  1484   000560                     
  1485                           ;color.c: 237:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1486   000560  0E12               	movlw	18
  1487   000562  6E0D               	movwf	(??_calibrate_white+1)^0,c
  1488   000564  0EDC               	movlw	220
  1489   000566  6E0C               	movwf	??_calibrate_white^0,c
  1490   000568  0E60               	movlw	96
  1491   00056A                     u2207:
  1492   00056A  2EE8               	decfsz	wreg,f,c
  1493   00056C  D7FE               	bra	u2207
  1494   00056E  2E0C               	decfsz	??_calibrate_white^0,f,c
  1495   000570  D7FC               	bra	u2207
  1496   000572  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  1497   000574  D7FA               	bra	u2207
  1498   000576                     
  1499                           ;color.c: 238:     White_setup.B = color_read_Blue();
  1500   000576  EC92  F004         	call	_color_read_Blue	;wreg free
  1501   00057A  C005  F042         	movff	?_color_read_Blue,_White_setup+8
  1502   00057E  C006  F043         	movff	?_color_read_Blue+1,_White_setup+9
  1503   000582  6A44               	clrf	(_White_setup+10)^0,c
  1504   000584  6A45               	clrf	(_White_setup+11)^0,c
  1505   000586                     
  1506                           ;color.c: 239:     set_led_color(0b000);
  1507   000586  0E00               	movlw	0
  1508   000588  6E02               	movwf	(set_led_color@color+1)^0,c
  1509   00058A  0E00               	movlw	0
  1510   00058C  6E01               	movwf	set_led_color@color^0,c
  1511   00058E  ECBA  F004         	call	_set_led_color	;wreg free
  1512   000592  0012               	return		;funcret
  1513   000594                     __end_of_calibrate_white:
  1514                           	callstack 0
  1515                           
  1516 ;; *************** function _calibrate_black *****************
  1517 ;; Defined at:
  1518 ;;		line 209 in file "color.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  clear2          2   17[COMRAM] unsigned int 
  1523 ;;  clear1          2   15[COMRAM] unsigned int 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1534 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1536 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1537 ;;Total ram usage:        8 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; Hardware stack levels required when called: 5
  1540 ;; This function calls:
  1541 ;;		___lwdiv
  1542 ;;		_color_read_Blue
  1543 ;;		_color_read_Clear
  1544 ;;		_color_read_Green
  1545 ;;		_color_read_Red
  1546 ;;		_set_led_color
  1547 ;; This function is called by:
  1548 ;;		_color_click_init
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text7
  1553   0002D6                     __ptext7:
  1554                           	callstack 0
  1555   0002D6                     _calibrate_black:
  1556                           	callstack 24
  1557   0002D6                     
  1558                           ;color.c: 210:     set_led_color(0b100);
  1559   0002D6  0E00               	movlw	0
  1560   0002D8  6E02               	movwf	(set_led_color@color+1)^0,c
  1561   0002DA  0E04               	movlw	4
  1562   0002DC  6E01               	movwf	set_led_color@color^0,c
  1563   0002DE  ECBA  F004         	call	_set_led_color	;wreg free
  1564   0002E2                     
  1565                           ;color.c: 211:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1566   0002E2  0E12               	movlw	18
  1567   0002E4  6E0F               	movwf	(??_calibrate_black+1)^0,c
  1568   0002E6  0EDC               	movlw	220
  1569   0002E8  6E0E               	movwf	??_calibrate_black^0,c
  1570   0002EA  0E60               	movlw	96
  1571   0002EC                     u2217:
  1572   0002EC  2EE8               	decfsz	wreg,f,c
  1573   0002EE  D7FE               	bra	u2217
  1574   0002F0  2E0E               	decfsz	??_calibrate_black^0,f,c
  1575   0002F2  D7FC               	bra	u2217
  1576   0002F4  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  1577   0002F6  D7FA               	bra	u2217
  1578   0002F8                     
  1579                           ;color.c: 212:     Black_setup.R = color_read_Red();
  1580   0002F8  EC1A  F004         	call	_color_read_Red	;wreg free
  1581   0002FC  C005  F02E         	movff	?_color_read_Red,_Black_setup
  1582   000300  C006  F02F         	movff	?_color_read_Red+1,_Black_setup+1
  1583   000304  6A30               	clrf	(_Black_setup+2)^0,c
  1584   000306  6A31               	clrf	(_Black_setup+3)^0,c
  1585   000308                     
  1586                           ;color.c: 213:     set_led_color(0b010);
  1587   000308  0E00               	movlw	0
  1588   00030A  6E02               	movwf	(set_led_color@color+1)^0,c
  1589   00030C  0E02               	movlw	2
  1590   00030E  6E01               	movwf	set_led_color@color^0,c
  1591   000310  ECBA  F004         	call	_set_led_color	;wreg free
  1592   000314                     
  1593                           ;color.c: 214:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1594   000314  0E12               	movlw	18
  1595   000316  6E0F               	movwf	(??_calibrate_black+1)^0,c
  1596   000318  0EDC               	movlw	220
  1597   00031A  6E0E               	movwf	??_calibrate_black^0,c
  1598   00031C  0E60               	movlw	96
  1599   00031E                     u2227:
  1600   00031E  2EE8               	decfsz	wreg,f,c
  1601   000320  D7FE               	bra	u2227
  1602   000322  2E0E               	decfsz	??_calibrate_black^0,f,c
  1603   000324  D7FC               	bra	u2227
  1604   000326  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  1605   000328  D7FA               	bra	u2227
  1606                           
  1607                           ;color.c: 215:     Black_setup.G = color_read_Green();
  1608   00032A  EC42  F004         	call	_color_read_Green	;wreg free
  1609   00032E  C005  F032         	movff	?_color_read_Green,_Black_setup+4
  1610   000332  C006  F033         	movff	?_color_read_Green+1,_Black_setup+5
  1611   000336  6A34               	clrf	(_Black_setup+6)^0,c
  1612   000338  6A35               	clrf	(_Black_setup+7)^0,c
  1613   00033A                     
  1614                           ;color.c: 216:     set_led_color(0b001);
  1615   00033A  0E00               	movlw	0
  1616   00033C  6E02               	movwf	(set_led_color@color+1)^0,c
  1617   00033E  0E01               	movlw	1
  1618   000340  6E01               	movwf	set_led_color@color^0,c
  1619   000342  ECBA  F004         	call	_set_led_color	;wreg free
  1620   000346                     
  1621                           ;color.c: 217:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1622   000346  0E12               	movlw	18
  1623   000348  6E0F               	movwf	(??_calibrate_black+1)^0,c
  1624   00034A  0EDC               	movlw	220
  1625   00034C  6E0E               	movwf	??_calibrate_black^0,c
  1626   00034E  0E60               	movlw	96
  1627   000350                     u2237:
  1628   000350  2EE8               	decfsz	wreg,f,c
  1629   000352  D7FE               	bra	u2237
  1630   000354  2E0E               	decfsz	??_calibrate_black^0,f,c
  1631   000356  D7FC               	bra	u2237
  1632   000358  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  1633   00035A  D7FA               	bra	u2237
  1634   00035C                     
  1635                           ;color.c: 218:     Black_setup.B = color_read_Blue();
  1636   00035C  EC92  F004         	call	_color_read_Blue	;wreg free
  1637   000360  C005  F036         	movff	?_color_read_Blue,_Black_setup+8
  1638   000364  C006  F037         	movff	?_color_read_Blue+1,_Black_setup+9
  1639   000368  6A38               	clrf	(_Black_setup+10)^0,c
  1640   00036A  6A39               	clrf	(_Black_setup+11)^0,c
  1641   00036C                     
  1642                           ;color.c: 219:     set_led_color(0b000);
  1643   00036C  0E00               	movlw	0
  1644   00036E  6E02               	movwf	(set_led_color@color+1)^0,c
  1645   000370  0E00               	movlw	0
  1646   000372  6E01               	movwf	set_led_color@color^0,c
  1647   000374  ECBA  F004         	call	_set_led_color	;wreg free
  1648                           
  1649                           ;color.c: 220:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1650   000378  0E12               	movlw	18
  1651   00037A  6E0F               	movwf	(??_calibrate_black+1)^0,c
  1652   00037C  0EDC               	movlw	220
  1653   00037E  6E0E               	movwf	??_calibrate_black^0,c
  1654   000380  0E60               	movlw	96
  1655   000382                     u2247:
  1656   000382  2EE8               	decfsz	wreg,f,c
  1657   000384  D7FE               	bra	u2247
  1658   000386  2E0E               	decfsz	??_calibrate_black^0,f,c
  1659   000388  D7FC               	bra	u2247
  1660   00038A  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  1661   00038C  D7FA               	bra	u2247
  1662   00038E                     
  1663                           ;color.c: 221:     unsigned int clear1 = color_read_Clear();
  1664   00038E  EC6A  F004         	call	_color_read_Clear	;wreg free
  1665   000392  C005  F010         	movff	?_color_read_Clear,calibrate_black@clear1
  1666   000396  C006  F011         	movff	?_color_read_Clear+1,calibrate_black@clear1+1
  1667   00039A                     
  1668                           ;color.c: 222:     set_led_color(0b111);
  1669   00039A  0E00               	movlw	0
  1670   00039C  6E02               	movwf	(set_led_color@color+1)^0,c
  1671   00039E  0E07               	movlw	7
  1672   0003A0  6E01               	movwf	set_led_color@color^0,c
  1673   0003A2  ECBA  F004         	call	_set_led_color	;wreg free
  1674   0003A6                     
  1675                           ;color.c: 223:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1676   0003A6  0E12               	movlw	18
  1677   0003A8  6E0F               	movwf	(??_calibrate_black+1)^0,c
  1678   0003AA  0EDC               	movlw	220
  1679   0003AC  6E0E               	movwf	??_calibrate_black^0,c
  1680   0003AE  0E60               	movlw	96
  1681   0003B0                     u2257:
  1682   0003B0  2EE8               	decfsz	wreg,f,c
  1683   0003B2  D7FE               	bra	u2257
  1684   0003B4  2E0E               	decfsz	??_calibrate_black^0,f,c
  1685   0003B6  D7FC               	bra	u2257
  1686   0003B8  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  1687   0003BA  D7FA               	bra	u2257
  1688   0003BC                     
  1689                           ;color.c: 224:     unsigned int clear2 = color_read_Clear();
  1690   0003BC  EC6A  F004         	call	_color_read_Clear	;wreg free
  1691   0003C0  C005  F012         	movff	?_color_read_Clear,calibrate_black@clear2
  1692   0003C4  C006  F013         	movff	?_color_read_Clear+1,calibrate_black@clear2+1
  1693                           
  1694                           ;color.c: 225:     set_led_color(0b000);
  1695   0003C8  0E00               	movlw	0
  1696   0003CA  6E02               	movwf	(set_led_color@color+1)^0,c
  1697   0003CC  0E00               	movlw	0
  1698   0003CE  6E01               	movwf	set_led_color@color^0,c
  1699   0003D0  ECBA  F004         	call	_set_led_color	;wreg free
  1700   0003D4                     
  1701                           ;color.c: 226:     wall_coef = clear2/clear1/5;
  1702   0003D4  C010  F009         	movff	calibrate_black@clear1,___lwdiv@divisor
  1703   0003D8  C011  F00A         	movff	calibrate_black@clear1+1,___lwdiv@divisor+1
  1704   0003DC  C012  F007         	movff	calibrate_black@clear2,___lwdiv@dividend
  1705   0003E0  C013  F008         	movff	calibrate_black@clear2+1,___lwdiv@dividend+1
  1706   0003E4  EC4C  F003         	call	___lwdiv	;wreg free
  1707   0003E8  C007  F014         	movff	?___lwdiv,_calibrate_black$2439
  1708   0003EC  C008  F015         	movff	?___lwdiv+1,_calibrate_black$2439+1
  1709   0003F0                     
  1710                           ;color.c: 226:     wall_coef = clear2/clear1/5;
  1711   0003F0  C014  F007         	movff	_calibrate_black$2439,___lwdiv@dividend
  1712   0003F4  C015  F008         	movff	_calibrate_black$2439+1,___lwdiv@dividend+1
  1713   0003F8  0E00               	movlw	0
  1714   0003FA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1715   0003FC  0E05               	movlw	5
  1716   0003FE  6E09               	movwf	___lwdiv@divisor^0,c
  1717   000400  EC4C  F003         	call	___lwdiv	;wreg free
  1718   000404  C007  F048         	movff	?___lwdiv,_wall_coef
  1719   000408  C008  F049         	movff	?___lwdiv+1,_wall_coef+1
  1720   00040C  0012               	return		;funcret
  1721   00040E                     __end_of_calibrate_black:
  1722                           	callstack 0
  1723                           
  1724 ;; *************** function _set_led_color *****************
  1725 ;; Defined at:
  1726 ;;		line 154 in file "color.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  color           2    0[COMRAM] unsigned int 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		None
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1744 ;;Total ram usage:        2 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; Hardware stack levels required when called: 2
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_calibrate_black
  1751 ;;		_calibrate_white
  1752 ;;		_get_color_code
  1753 ;;		_get_wall_presence
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text8
  1758   000974                     __ptext8:
  1759                           	callstack 0
  1760   000974                     _set_led_color:
  1761                           	callstack 26
  1762   000974                     
  1763                           ;color.c: 158:     if(color & 0b100){
  1764   000974  A401               	btfss	set_led_color@color^0,2,c
  1765   000976  EFBF  F004         	goto	u1101
  1766   00097A  EFC1  F004         	goto	u1100
  1767   00097E                     u1101:
  1768   00097E  EFC4  F004         	goto	l112
  1769   000982                     u1100:
  1770   000982                     
  1771                           ;color.c: 159:         LATGbits.LATG1 = 1;
  1772   000982  827F               	bsf	127,1,c	;volatile
  1773                           
  1774                           ;color.c: 160:     }else{
  1775   000984  EFC5  F004         	goto	l113
  1776   000988                     l112:
  1777                           
  1778                           ;color.c: 161:         LATGbits.LATG1 = 0;
  1779   000988  927F               	bcf	127,1,c	;volatile
  1780   00098A                     l113:
  1781                           
  1782                           ;color.c: 163:     if(color & 0b010){
  1783   00098A  A201               	btfss	set_led_color@color^0,1,c
  1784   00098C  EFCA  F004         	goto	u1111
  1785   000990  EFCC  F004         	goto	u1110
  1786   000994                     u1111:
  1787   000994  EFCF  F004         	goto	l114
  1788   000998                     u1110:
  1789   000998                     
  1790                           ;color.c: 164:         LATAbits.LATA4 = 1;
  1791   000998  8879               	bsf	121,4,c	;volatile
  1792                           
  1793                           ;color.c: 165:     }else{
  1794   00099A  EFD0  F004         	goto	l115
  1795   00099E                     l114:
  1796                           
  1797                           ;color.c: 166:         LATAbits.LATA4 = 0;
  1798   00099E  9879               	bcf	121,4,c	;volatile
  1799   0009A0                     l115:
  1800                           
  1801                           ;color.c: 168:     if(color & 0b001){
  1802   0009A0  A001               	btfss	set_led_color@color^0,0,c
  1803   0009A2  EFD5  F004         	goto	u1121
  1804   0009A6  EFD7  F004         	goto	u1120
  1805   0009AA                     u1121:
  1806   0009AA  EFDA  F004         	goto	l116
  1807   0009AE                     u1120:
  1808   0009AE                     
  1809                           ;color.c: 169:         LATFbits.LATF7 = 1;
  1810   0009AE  8E7E               	bsf	126,7,c	;volatile
  1811                           
  1812                           ;color.c: 170:     }else{
  1813   0009B0  EFDB  F004         	goto	l118
  1814   0009B4                     l116:
  1815                           
  1816                           ;color.c: 171:         LATFbits.LATF7 = 0;
  1817   0009B4  9E7E               	bcf	126,7,c	;volatile
  1818   0009B6                     l118:
  1819   0009B6  0012               	return		;funcret
  1820   0009B8                     __end_of_set_led_color:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _color_read_Red *****************
  1824 ;; Defined at:
  1825 ;;		line 90 in file "color.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  tmp             2    9[COMRAM] unsigned int 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  2    4[COMRAM] unsigned int 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1841 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1842 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1843 ;;Total ram usage:        7 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 4
  1846 ;; This function calls:
  1847 ;;		_I2C_2_Master_Read
  1848 ;;		_I2C_2_Master_RepStart
  1849 ;;		_I2C_2_Master_Start
  1850 ;;		_I2C_2_Master_Stop
  1851 ;;		_I2C_2_Master_Write
  1852 ;; This function is called by:
  1853 ;;		_calibrate_black
  1854 ;;		_calibrate_white
  1855 ;;		_get_color_code
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text9
  1860   000834                     __ptext9:
  1861                           	callstack 0
  1862   000834                     _color_read_Red:
  1863                           	callstack 24
  1864   000834                     
  1865                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  1866   000834  EC91  F005         	call	_I2C_2_Master_Start	;wreg free
  1867                           
  1868                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  1869   000838  0E52               	movlw	82
  1870   00083A  EC80  F005         	call	_I2C_2_Master_Write
  1871                           
  1872                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x16);
  1873   00083E  0EB6               	movlw	182
  1874   000840  EC80  F005         	call	_I2C_2_Master_Write
  1875                           
  1876                           ;color.c: 96:  I2C_2_Master_RepStart();
  1877   000844  EC96  F005         	call	_I2C_2_Master_RepStart	;wreg free
  1878                           
  1879                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  1880   000848  0E53               	movlw	83
  1881   00084A  EC80  F005         	call	_I2C_2_Master_Write
  1882                           
  1883                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  1884   00084E  0E01               	movlw	1
  1885   000850  ECDC  F004         	call	_I2C_2_Master_Read
  1886   000854  6E07               	movwf	??_color_read_Red^0,c
  1887   000856  5007               	movf	??_color_read_Red^0,w,c
  1888   000858  6E0A               	movwf	color_read_Red@tmp^0,c
  1889   00085A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1890                           
  1891                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1892   00085C  0E00               	movlw	0
  1893   00085E  ECDC  F004         	call	_I2C_2_Master_Read
  1894   000862  6E07               	movwf	??_color_read_Red^0,c
  1895   000864  5007               	movf	??_color_read_Red^0,w,c
  1896   000866  6E09               	movwf	(??_color_read_Red+2)^0,c
  1897   000868  6A08               	clrf	(??_color_read_Red+1)^0,c
  1898   00086A  500A               	movf	color_read_Red@tmp^0,w,c
  1899   00086C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1900   00086E  6E0A               	movwf	color_read_Red@tmp^0,c
  1901   000870  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1902   000872  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1903   000874  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1904                           
  1905                           ;color.c: 100:  I2C_2_Master_Stop();
  1906   000876  EC8C  F005         	call	_I2C_2_Master_Stop	;wreg free
  1907   00087A                     
  1908                           ;color.c: 101:  return tmp;
  1909   00087A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1910   00087E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1911   000882  0012               	return		;funcret
  1912   000884                     __end_of_color_read_Red:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function _color_read_Green *****************
  1916 ;; Defined at:
  1917 ;;		line 118 in file "color.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  tmp             2    9[COMRAM] unsigned int 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  2    4[COMRAM] unsigned int 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1933 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1934 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1935 ;;Total ram usage:        7 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 4
  1938 ;; This function calls:
  1939 ;;		_I2C_2_Master_Read
  1940 ;;		_I2C_2_Master_RepStart
  1941 ;;		_I2C_2_Master_Start
  1942 ;;		_I2C_2_Master_Stop
  1943 ;;		_I2C_2_Master_Write
  1944 ;; This function is called by:
  1945 ;;		_calibrate_black
  1946 ;;		_calibrate_white
  1947 ;;		_get_color_code
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text10
  1952   000884                     __ptext10:
  1953                           	callstack 0
  1954   000884                     _color_read_Green:
  1955                           	callstack 24
  1956   000884                     
  1957                           ;color.c: 120:  unsigned int tmp;;color.c: 121:  I2C_2_Master_Start();
  1958   000884  EC91  F005         	call	_I2C_2_Master_Start	;wreg free
  1959                           
  1960                           ;color.c: 122:  I2C_2_Master_Write(0x52 | 0x00);
  1961   000888  0E52               	movlw	82
  1962   00088A  EC80  F005         	call	_I2C_2_Master_Write
  1963                           
  1964                           ;color.c: 123:  I2C_2_Master_Write(0xA0 | 0x18);
  1965   00088E  0EB8               	movlw	184
  1966   000890  EC80  F005         	call	_I2C_2_Master_Write
  1967                           
  1968                           ;color.c: 124:  I2C_2_Master_RepStart();
  1969   000894  EC96  F005         	call	_I2C_2_Master_RepStart	;wreg free
  1970                           
  1971                           ;color.c: 125:  I2C_2_Master_Write(0x52 | 0x01);
  1972   000898  0E53               	movlw	83
  1973   00089A  EC80  F005         	call	_I2C_2_Master_Write
  1974                           
  1975                           ;color.c: 126:  tmp=I2C_2_Master_Read(1);
  1976   00089E  0E01               	movlw	1
  1977   0008A0  ECDC  F004         	call	_I2C_2_Master_Read
  1978   0008A4  6E07               	movwf	??_color_read_Green^0,c
  1979   0008A6  5007               	movf	??_color_read_Green^0,w,c
  1980   0008A8  6E0A               	movwf	color_read_Green@tmp^0,c
  1981   0008AA  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1982                           
  1983                           ;color.c: 127:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1984   0008AC  0E00               	movlw	0
  1985   0008AE  ECDC  F004         	call	_I2C_2_Master_Read
  1986   0008B2  6E07               	movwf	??_color_read_Green^0,c
  1987   0008B4  5007               	movf	??_color_read_Green^0,w,c
  1988   0008B6  6E09               	movwf	(??_color_read_Green+2)^0,c
  1989   0008B8  6A08               	clrf	(??_color_read_Green+1)^0,c
  1990   0008BA  500A               	movf	color_read_Green@tmp^0,w,c
  1991   0008BC  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1992   0008BE  6E0A               	movwf	color_read_Green@tmp^0,c
  1993   0008C0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1994   0008C2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1995   0008C4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1996                           
  1997                           ;color.c: 128:  I2C_2_Master_Stop();
  1998   0008C6  EC8C  F005         	call	_I2C_2_Master_Stop	;wreg free
  1999   0008CA                     
  2000                           ;color.c: 129:  return tmp;
  2001   0008CA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2002   0008CE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2003   0008D2  0012               	return		;funcret
  2004   0008D4                     __end_of_color_read_Green:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _color_read_Clear *****************
  2008 ;; Defined at:
  2009 ;;		line 132 in file "color.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  tmp             2    9[COMRAM] unsigned int 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  2    4[COMRAM] unsigned int 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2, status,0, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2025 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2026 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2027 ;;Total ram usage:        7 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; Hardware stack levels required when called: 4
  2030 ;; This function calls:
  2031 ;;		_I2C_2_Master_Read
  2032 ;;		_I2C_2_Master_RepStart
  2033 ;;		_I2C_2_Master_Start
  2034 ;;		_I2C_2_Master_Stop
  2035 ;;		_I2C_2_Master_Write
  2036 ;; This function is called by:
  2037 ;;		_calibrate_black
  2038 ;;		_get_wall_presence
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text11
  2043   0008D4                     __ptext11:
  2044                           	callstack 0
  2045   0008D4                     _color_read_Clear:
  2046                           	callstack 24
  2047   0008D4                     
  2048                           ;color.c: 134:  unsigned int tmp;;color.c: 135:  I2C_2_Master_Start();
  2049   0008D4  EC91  F005         	call	_I2C_2_Master_Start	;wreg free
  2050                           
  2051                           ;color.c: 136:  I2C_2_Master_Write(0x52 | 0x00);
  2052   0008D8  0E52               	movlw	82
  2053   0008DA  EC80  F005         	call	_I2C_2_Master_Write
  2054                           
  2055                           ;color.c: 137:  I2C_2_Master_Write(0xA0 | 0x14);
  2056   0008DE  0EB4               	movlw	180
  2057   0008E0  EC80  F005         	call	_I2C_2_Master_Write
  2058                           
  2059                           ;color.c: 138:  I2C_2_Master_RepStart();
  2060   0008E4  EC96  F005         	call	_I2C_2_Master_RepStart	;wreg free
  2061                           
  2062                           ;color.c: 139:  I2C_2_Master_Write(0x52 | 0x01);
  2063   0008E8  0E53               	movlw	83
  2064   0008EA  EC80  F005         	call	_I2C_2_Master_Write
  2065                           
  2066                           ;color.c: 140:  tmp=I2C_2_Master_Read(1);
  2067   0008EE  0E01               	movlw	1
  2068   0008F0  ECDC  F004         	call	_I2C_2_Master_Read
  2069   0008F4  6E07               	movwf	??_color_read_Clear^0,c
  2070   0008F6  5007               	movf	??_color_read_Clear^0,w,c
  2071   0008F8  6E0A               	movwf	color_read_Clear@tmp^0,c
  2072   0008FA  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2073                           
  2074                           ;color.c: 141:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2075   0008FC  0E00               	movlw	0
  2076   0008FE  ECDC  F004         	call	_I2C_2_Master_Read
  2077   000902  6E07               	movwf	??_color_read_Clear^0,c
  2078   000904  5007               	movf	??_color_read_Clear^0,w,c
  2079   000906  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2080   000908  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2081   00090A  500A               	movf	color_read_Clear@tmp^0,w,c
  2082   00090C  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2083   00090E  6E0A               	movwf	color_read_Clear@tmp^0,c
  2084   000910  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2085   000912  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2086   000914  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2087                           
  2088                           ;color.c: 142:  I2C_2_Master_Stop();
  2089   000916  EC8C  F005         	call	_I2C_2_Master_Stop	;wreg free
  2090   00091A                     
  2091                           ;color.c: 143:  return tmp;
  2092   00091A  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2093   00091E  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2094   000922  0012               	return		;funcret
  2095   000924                     __end_of_color_read_Clear:
  2096                           	callstack 0
  2097                           
  2098 ;; *************** function _color_read_Blue *****************
  2099 ;; Defined at:
  2100 ;;		line 104 in file "color.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  tmp             2    9[COMRAM] unsigned int 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  2    4[COMRAM] unsigned int 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;Total ram usage:        7 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 4
  2121 ;; This function calls:
  2122 ;;		_I2C_2_Master_Read
  2123 ;;		_I2C_2_Master_RepStart
  2124 ;;		_I2C_2_Master_Start
  2125 ;;		_I2C_2_Master_Stop
  2126 ;;		_I2C_2_Master_Write
  2127 ;; This function is called by:
  2128 ;;		_calibrate_black
  2129 ;;		_calibrate_white
  2130 ;;		_get_color_code
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text12
  2135   000924                     __ptext12:
  2136                           	callstack 0
  2137   000924                     _color_read_Blue:
  2138                           	callstack 24
  2139   000924                     
  2140                           ;color.c: 106:  unsigned int tmp;;color.c: 107:  I2C_2_Master_Start();
  2141   000924  EC91  F005         	call	_I2C_2_Master_Start	;wreg free
  2142                           
  2143                           ;color.c: 108:  I2C_2_Master_Write(0x52 | 0x00);
  2144   000928  0E52               	movlw	82
  2145   00092A  EC80  F005         	call	_I2C_2_Master_Write
  2146                           
  2147                           ;color.c: 109:  I2C_2_Master_Write(0xA0 | 0x1A);
  2148   00092E  0EBA               	movlw	186
  2149   000930  EC80  F005         	call	_I2C_2_Master_Write
  2150                           
  2151                           ;color.c: 110:  I2C_2_Master_RepStart();
  2152   000934  EC96  F005         	call	_I2C_2_Master_RepStart	;wreg free
  2153                           
  2154                           ;color.c: 111:  I2C_2_Master_Write(0x52 | 0x01);
  2155   000938  0E53               	movlw	83
  2156   00093A  EC80  F005         	call	_I2C_2_Master_Write
  2157                           
  2158                           ;color.c: 112:  tmp=I2C_2_Master_Read(1);
  2159   00093E  0E01               	movlw	1
  2160   000940  ECDC  F004         	call	_I2C_2_Master_Read
  2161   000944  6E07               	movwf	??_color_read_Blue^0,c
  2162   000946  5007               	movf	??_color_read_Blue^0,w,c
  2163   000948  6E0A               	movwf	color_read_Blue@tmp^0,c
  2164   00094A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2165                           
  2166                           ;color.c: 113:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2167   00094C  0E00               	movlw	0
  2168   00094E  ECDC  F004         	call	_I2C_2_Master_Read
  2169   000952  6E07               	movwf	??_color_read_Blue^0,c
  2170   000954  5007               	movf	??_color_read_Blue^0,w,c
  2171   000956  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2172   000958  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2173   00095A  500A               	movf	color_read_Blue@tmp^0,w,c
  2174   00095C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2175   00095E  6E0A               	movwf	color_read_Blue@tmp^0,c
  2176   000960  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2177   000962  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2178   000964  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2179                           
  2180                           ;color.c: 114:  I2C_2_Master_Stop();
  2181   000966  EC8C  F005         	call	_I2C_2_Master_Stop	;wreg free
  2182   00096A                     
  2183                           ;color.c: 115:  return tmp;
  2184   00096A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2185   00096E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2186   000972  0012               	return		;funcret
  2187   000974                     __end_of_color_read_Blue:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function _I2C_2_Master_Write *****************
  2191 ;; Defined at:
  2192 ;;		line 45 in file "i2c.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  data_byte       1    wreg     unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  data_byte       1    1[COMRAM] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;Total ram usage:        1 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 3
  2213 ;; This function calls:
  2214 ;;		_I2C_2_Master_Idle
  2215 ;; This function is called by:
  2216 ;;		_color_writetoaddr
  2217 ;;		_color_read_Red
  2218 ;;		_color_read_Blue
  2219 ;;		_color_read_Green
  2220 ;;		_color_read_Clear
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text13
  2225   000B00                     __ptext13:
  2226                           	callstack 0
  2227   000B00                     _I2C_2_Master_Write:
  2228                           	callstack 25
  2229                           
  2230                           ;incstack = 0
  2231                           ;I2C_2_Master_Write@data_byte stored from wreg
  2232   000B00  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2233   000B02                     
  2234                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2235   000B02  EC2B  F005         	call	_I2C_2_Master_Idle	;wreg free
  2236   000B06                     
  2237                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2238   000B06  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2239   000B0A  0012               	return		;funcret
  2240   000B0C                     __end_of_I2C_2_Master_Write:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function _I2C_2_Master_Stop *****************
  2244 ;; Defined at:
  2245 ;;		line 39 in file "i2c.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2, status,0, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; Hardware stack levels required when called: 3
  2266 ;; This function calls:
  2267 ;;		_I2C_2_Master_Idle
  2268 ;; This function is called by:
  2269 ;;		_color_writetoaddr
  2270 ;;		_color_read_Red
  2271 ;;		_color_read_Blue
  2272 ;;		_color_read_Green
  2273 ;;		_color_read_Clear
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text14
  2278   000B18                     __ptext14:
  2279                           	callstack 0
  2280   000B18                     _I2C_2_Master_Stop:
  2281                           	callstack 25
  2282   000B18                     
  2283                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2284   000B18  EC2B  F005         	call	_I2C_2_Master_Idle	;wreg free
  2285   000B1C                     
  2286                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2287   000B1C  010E               	movlb	14	; () banked
  2288   000B1E  85DA               	bsf	218,2,b	;volatile
  2289   000B20                     
  2290                           ; BSR set to: 14
  2291   000B20  0012               	return		;funcret
  2292   000B22                     __end_of_I2C_2_Master_Stop:
  2293                           	callstack 0
  2294                           
  2295 ;; *************** function _I2C_2_Master_Start *****************
  2296 ;; Defined at:
  2297 ;;		line 27 in file "i2c.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 3
  2318 ;; This function calls:
  2319 ;;		_I2C_2_Master_Idle
  2320 ;; This function is called by:
  2321 ;;		_color_writetoaddr
  2322 ;;		_color_read_Red
  2323 ;;		_color_read_Blue
  2324 ;;		_color_read_Green
  2325 ;;		_color_read_Clear
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text15
  2330   000B22                     __ptext15:
  2331                           	callstack 0
  2332   000B22                     _I2C_2_Master_Start:
  2333                           	callstack 25
  2334   000B22                     
  2335                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2336   000B22  EC2B  F005         	call	_I2C_2_Master_Idle	;wreg free
  2337   000B26                     
  2338                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2339   000B26  010E               	movlb	14	; () banked
  2340   000B28  81DA               	bsf	218,0,b	;volatile
  2341   000B2A                     
  2342                           ; BSR set to: 14
  2343   000B2A  0012               	return		;funcret
  2344   000B2C                     __end_of_I2C_2_Master_Start:
  2345                           	callstack 0
  2346                           
  2347 ;; *************** function _I2C_2_Master_RepStart *****************
  2348 ;; Defined at:
  2349 ;;		line 33 in file "i2c.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;Total ram usage:        0 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 3
  2370 ;; This function calls:
  2371 ;;		_I2C_2_Master_Idle
  2372 ;; This function is called by:
  2373 ;;		_color_read_Red
  2374 ;;		_color_read_Blue
  2375 ;;		_color_read_Green
  2376 ;;		_color_read_Clear
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text16
  2381   000B2C                     __ptext16:
  2382                           	callstack 0
  2383   000B2C                     _I2C_2_Master_RepStart:
  2384                           	callstack 24
  2385   000B2C                     
  2386                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2387   000B2C  EC2B  F005         	call	_I2C_2_Master_Idle	;wreg free
  2388   000B30                     
  2389                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2390   000B30  010E               	movlb	14	; () banked
  2391   000B32  83DA               	bsf	218,1,b	;volatile
  2392   000B34                     
  2393                           ; BSR set to: 14
  2394   000B34  0012               	return		;funcret
  2395   000B36                     __end_of_I2C_2_Master_RepStart:
  2396                           	callstack 0
  2397                           
  2398 ;; *************** function _I2C_2_Master_Read *****************
  2399 ;; Defined at:
  2400 ;;		line 51 in file "i2c.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  ack             1    wreg     unsigned char 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  ack             1    2[COMRAM] unsigned char 
  2405 ;;  tmp             1    3[COMRAM] unsigned char 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      unsigned char 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;Total ram usage:        3 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 3
  2422 ;; This function calls:
  2423 ;;		_I2C_2_Master_Idle
  2424 ;; This function is called by:
  2425 ;;		_color_read_Red
  2426 ;;		_color_read_Blue
  2427 ;;		_color_read_Green
  2428 ;;		_color_read_Clear
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text17
  2433   0009B8                     __ptext17:
  2434                           	callstack 0
  2435   0009B8                     _I2C_2_Master_Read:
  2436                           	callstack 24
  2437                           
  2438                           ; BSR set to: 14
  2439                           ;incstack = 0
  2440                           ;I2C_2_Master_Read@ack stored from wreg
  2441   0009B8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2442   0009BA                     
  2443                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2444   0009BA  EC2B  F005         	call	_I2C_2_Master_Idle	;wreg free
  2445   0009BE                     
  2446                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2447   0009BE  010E               	movlb	14	; () banked
  2448   0009C0  87DA               	bsf	218,3,b	;volatile
  2449                           
  2450                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2451   0009C2  EC2B  F005         	call	_I2C_2_Master_Idle	;wreg free
  2452   0009C6                     
  2453                           ;i2c.c: 57:   tmp = SSP2BUF;
  2454   0009C6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2455                           
  2456                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2457   0009CA  EC2B  F005         	call	_I2C_2_Master_Idle	;wreg free
  2458   0009CE                     
  2459                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2460   0009CE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2461   0009D0  B4D8               	btfsc	status,2,c
  2462   0009D2  EFED  F004         	goto	u1081
  2463   0009D6  EFF1  F004         	goto	u1080
  2464   0009DA                     u1081:
  2465   0009DA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2466   0009DC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2467   0009DE  EFF2  F004         	goto	u1098
  2468   0009E2                     u1080:
  2469   0009E2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2470   0009E4                     u1098:
  2471   0009E4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2472   0009E6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2473   0009E8  010E               	movlb	14	; () banked
  2474   0009EA  51DA               	movf	218,w,b	;volatile
  2475   0009EC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2476   0009EE  0BDF               	andlw	-33
  2477   0009F0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2478   0009F2  6FDA               	movwf	218,b	;volatile
  2479   0009F4                     
  2480                           ; BSR set to: 14
  2481                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2482   0009F4  89DA               	bsf	218,4,b	;volatile
  2483   0009F6                     
  2484                           ; BSR set to: 14
  2485                           ;i2c.c: 61:   return tmp;
  2486   0009F6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2487   0009F8                     
  2488                           ; BSR set to: 14
  2489   0009F8  0012               	return		;funcret
  2490   0009FA                     __end_of_I2C_2_Master_Read:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _I2C_2_Master_Idle *****************
  2494 ;; Defined at:
  2495 ;;		line 22 in file "i2c.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2513 ;;Total ram usage:        1 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 2
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_I2C_2_Master_Start
  2520 ;;		_I2C_2_Master_RepStart
  2521 ;;		_I2C_2_Master_Stop
  2522 ;;		_I2C_2_Master_Write
  2523 ;;		_I2C_2_Master_Read
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text18
  2528   000A56                     __ptext18:
  2529                           	callstack 0
  2530   000A56                     _I2C_2_Master_Idle:
  2531                           	callstack 25
  2532   000A56                     l326:
  2533   000A56  010E               	movlb	14	; () banked
  2534   000A58  B5D8               	btfsc	216,2,b	;volatile
  2535   000A5A  EF31  F005         	goto	u1061
  2536   000A5E  EF33  F005         	goto	u1060
  2537   000A62                     u1061:
  2538   000A62  EF2B  F005         	goto	l326
  2539   000A66                     u1060:
  2540   000A66                     
  2541                           ; BSR set to: 14
  2542   000A66  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2543   000A6A  0E1F               	movlw	31
  2544   000A6C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2545   000A6E  A4D8               	btfss	status,2,c
  2546   000A70  EF3C  F005         	goto	u1071
  2547   000A74  EF3E  F005         	goto	u1070
  2548   000A78                     u1071:
  2549   000A78  EF2B  F005         	goto	l326
  2550   000A7C                     u1070:
  2551   000A7C                     
  2552                           ; BSR set to: 14
  2553   000A7C  0012               	return		;funcret
  2554   000A7E                     __end_of_I2C_2_Master_Idle:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function _I2C_2_Master_Init *****************
  2558 ;; Defined at:
  2559 ;;		line 4 in file "i2c.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;Total ram usage:        0 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 2
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_color_click_init
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text19
  2588   000A2C                     __ptext19:
  2589                           	callstack 0
  2590   000A2C                     _I2C_2_Master_Init:
  2591                           	callstack 27
  2592   000A2C                     
  2593                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2594   000A2C  010E               	movlb	14	; () banked
  2595   000A2E  51D9               	movf	217,w,b	;volatile
  2596   000A30  0BF0               	andlw	-16
  2597   000A32  0908               	iorlw	8
  2598   000A34  6FD9               	movwf	217,b	;volatile
  2599   000A36                     
  2600                           ; BSR set to: 14
  2601                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2602   000A36  8BD9               	bsf	217,5,b	;volatile
  2603                           
  2604                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2605   000A38  0E9F               	movlw	159
  2606   000A3A  6FD6               	movwf	214,b	;volatile
  2607   000A3C                     
  2608                           ; BSR set to: 14
  2609                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2610   000A3C  8A84               	bsf	132,5,c	;volatile
  2611   000A3E                     
  2612                           ; BSR set to: 14
  2613                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2614   000A3E  8C84               	bsf	132,6,c	;volatile
  2615   000A40                     
  2616                           ; BSR set to: 14
  2617                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2618   000A40  9BA7               	bcf	167,5,b	;volatile
  2619   000A42                     
  2620                           ; BSR set to: 14
  2621                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2622   000A42  9DA7               	bcf	167,6,b	;volatile
  2623                           
  2624                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2625   000A44  0E1D               	movlw	29
  2626   000A46  6F1D               	movwf	29,b	;volatile
  2627                           
  2628                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2629   000A48  0E1E               	movlw	30
  2630   000A4A  6F1C               	movwf	28,b	;volatile
  2631                           
  2632                           ;i2c.c: 18:   RD5PPS=0x1C;
  2633   000A4C  0E1C               	movlw	28
  2634   000A4E  6F6F               	movwf	111,b	;volatile
  2635                           
  2636                           ;i2c.c: 19:   RD6PPS=0x1B;
  2637   000A50  0E1B               	movlw	27
  2638   000A52  6F70               	movwf	112,b	;volatile
  2639   000A54                     
  2640                           ; BSR set to: 14
  2641   000A54  0012               	return		;funcret
  2642   000A56                     __end_of_I2C_2_Master_Init:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function _Timer0_init *****************
  2646 ;; Defined at:
  2647 ;;		line 7 in file "timers.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; Hardware stack levels required when called: 2
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text20
  2676   000AC4                     __ptext20:
  2677                           	callstack 0
  2678   000AC4                     _Timer0_init:
  2679                           	callstack 28
  2680   000AC4                     
  2681                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2682   000AC4  50D6               	movf	214,w,c	;volatile
  2683   000AC6  0B1F               	andlw	-225
  2684   000AC8  0940               	iorlw	64
  2685   000ACA  6ED6               	movwf	214,c	;volatile
  2686   000ACC                     
  2687                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  2688   000ACC  88D6               	bsf	214,4,c	;volatile
  2689                           
  2690                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  2691   000ACE  50D6               	movf	214,w,c	;volatile
  2692   000AD0  0BF0               	andlw	-16
  2693   000AD2  0908               	iorlw	8
  2694   000AD4  6ED6               	movwf	214,c	;volatile
  2695                           
  2696                           ;timers.c: 13:     TMR0H=0b11100111;
  2697   000AD6  0EE7               	movlw	231
  2698   000AD8  6ED4               	movwf	212,c	;volatile
  2699                           
  2700                           ;timers.c: 14:     TMR0L=0b10010101;
  2701   000ADA  0E95               	movlw	149
  2702   000ADC  6ED3               	movwf	211,c	;volatile
  2703   000ADE                     
  2704                           ;timers.c: 15:     T0CON0bits.T016BIT=1;
  2705   000ADE  88D5               	bsf	213,4,c	;volatile
  2706   000AE0                     
  2707                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  2708   000AE0  8ED5               	bsf	213,7,c	;volatile
  2709   000AE2  0012               	return		;funcret
  2710   000AE4                     __end_of_Timer0_init:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _TimedfullSpeedAhead *****************
  2714 ;; Defined at:
  2715 ;;		line 258 in file "dc_motor.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  2718 ;;		 -> main@motorL(9), 
  2719 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  2720 ;;		 -> main@motorR(9), 
  2721 ;;  time            2   23[COMRAM] unsigned int 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2733 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2736 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2737 ;;Total ram usage:        6 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; Hardware stack levels required when called: 4
  2740 ;; This function calls:
  2741 ;;		_setMotorPWM
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text21
  2748   000624                     __ptext21:
  2749                           	callstack 0
  2750   000624                     _TimedfullSpeedAhead:
  2751                           	callstack 26
  2752   000624                     
  2753                           ;dc_motor.c: 258: void TimedfullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR, uns
      +                          igned int time);dc_motor.c: 259: {;dc_motor.c: 260:     seconds = 0;
  2754   000624  0E00               	movlw	0
  2755   000626  6E59               	movwf	(_seconds+1)^0,c
  2756   000628  0E00               	movlw	0
  2757   00062A  6E58               	movwf	_seconds^0,c
  2758                           
  2759                           ;dc_motor.c: 261:     while (seconds<time)
  2760   00062C  EF40  F003         	goto	l2540
  2761   000630                     l2530:
  2762                           
  2763                           ;dc_motor.c: 262:     {;dc_motor.c: 264:         (*mL).direction=1;
  2764   000630  EE20 F001          	lfsr	2,1
  2765   000634  5014               	movf	TimedfullSpeedAhead@mL^0,w,c
  2766   000636  26D9               	addwf	fsr2l,f,c
  2767   000638  5015               	movf	(TimedfullSpeedAhead@mL+1)^0,w,c
  2768   00063A  22DA               	addwfc	fsr2h,f,c
  2769   00063C  0E01               	movlw	1
  2770   00063E  6EDF               	movwf	indf2,c
  2771                           
  2772                           ;dc_motor.c: 265:         (*mR).direction=1;
  2773   000640  EE20 F001          	lfsr	2,1
  2774   000644  5016               	movf	TimedfullSpeedAhead@mR^0,w,c
  2775   000646  26D9               	addwf	fsr2l,f,c
  2776   000648  5017               	movf	(TimedfullSpeedAhead@mR+1)^0,w,c
  2777   00064A  22DA               	addwfc	fsr2h,f,c
  2778   00064C  0E01               	movlw	1
  2779   00064E  6EDF               	movwf	indf2,c
  2780   000650                     
  2781                           ;dc_motor.c: 266:         (*mL).power=40;
  2782   000650  C014  FFD9         	movff	TimedfullSpeedAhead@mL,fsr2l
  2783   000654  C015  FFDA         	movff	TimedfullSpeedAhead@mL+1,fsr2h
  2784   000658  0E28               	movlw	40
  2785   00065A  6EDF               	movwf	indf2,c
  2786   00065C                     
  2787                           ;dc_motor.c: 267:         (*mR).power=40;
  2788   00065C  C016  FFD9         	movff	TimedfullSpeedAhead@mR,fsr2l
  2789   000660  C017  FFDA         	movff	TimedfullSpeedAhead@mR+1,fsr2h
  2790   000664  0E28               	movlw	40
  2791   000666  6EDF               	movwf	indf2,c
  2792   000668                     
  2793                           ;dc_motor.c: 268:         setMotorPWM(mL);
  2794   000668  C014  F00E         	movff	TimedfullSpeedAhead@mL,setMotorPWM@m
  2795   00066C  C015  F00F         	movff	TimedfullSpeedAhead@mL+1,setMotorPWM@m+1
  2796   000670  EC19  F000         	call	_setMotorPWM	;wreg free
  2797   000674                     
  2798                           ;dc_motor.c: 269:         setMotorPWM(mR);
  2799   000674  C016  F00E         	movff	TimedfullSpeedAhead@mR,setMotorPWM@m
  2800   000678  C017  F00F         	movff	TimedfullSpeedAhead@mR+1,setMotorPWM@m+1
  2801   00067C  EC19  F000         	call	_setMotorPWM	;wreg free
  2802   000680                     l2540:
  2803                           
  2804                           ;dc_motor.c: 261:     while (seconds<time)
  2805   000680  5018               	movf	TimedfullSpeedAhead@time^0,w,c
  2806   000682  5C58               	subwf	_seconds^0,w,c
  2807   000684  5019               	movf	(TimedfullSpeedAhead@time+1)^0,w,c
  2808   000686  5859               	subwfb	(_seconds+1)^0,w,c
  2809   000688  A0D8               	btfss	status,0,c
  2810   00068A  EF49  F003         	goto	u1431
  2811   00068E  EF4B  F003         	goto	u1430
  2812   000692                     u1431:
  2813   000692  EF18  F003         	goto	l2530
  2814   000696                     u1430:
  2815   000696  0012               	return		;funcret
  2816   000698                     __end_of_TimedfullSpeedAhead:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _setMotorPWM *****************
  2820 ;; Defined at:
  2821 ;;		line 69 in file "dc_motor.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  m               2   13[COMRAM] PTR struct DC_motor
  2824 ;;		 -> main@motorR(9), main@motorL(9), RobotMovement@motorR(2), RobotMovement@motorL(2), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  negDuty         1   18[COMRAM] unsigned char 
  2827 ;;  posDuty         1   17[COMRAM] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2841 ;;Total ram usage:        6 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 3
  2844 ;; This function calls:
  2845 ;;		___lwdiv
  2846 ;;		___wmul
  2847 ;; This function is called by:
  2848 ;;		_stop
  2849 ;;		_fullSpeedAhead
  2850 ;;		_TimedfullSpeedAhead
  2851 ;;		_turnLeft
  2852 ;;		_turnRight
  2853 ;;		_turnLeftLong
  2854 ;;		_turnRightLong
  2855 ;;		_moveBack
  2856 ;;		_Calibrate
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text22
  2861   000032                     __ptext22:
  2862                           	callstack 0
  2863   000032                     _setMotorPWM:
  2864                           	callstack 26
  2865   000032                     
  2866                           ;dc_motor.c: 69: void setMotorPWM(DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
  2867   000032  EE20 F002          	lfsr	2,2
  2868   000036  500E               	movf	setMotorPWM@m^0,w,c
  2869   000038  26D9               	addwf	fsr2l,f,c
  2870   00003A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2871   00003C  22DA               	addwfc	fsr2h,f,c
  2872   00003E  50DF               	movf	indf2,w,c
  2873   000040  B4D8               	btfsc	status,2,c
  2874   000042  EF25  F000         	goto	u1161
  2875   000046  EF27  F000         	goto	u1160
  2876   00004A                     u1161:
  2877   00004A  EF5B  F000         	goto	l2226
  2878   00004E                     u1160:
  2879   00004E                     
  2880                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2881   00004E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2882   000052  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2883   000056  50DF               	movf	indf2,w,c
  2884   000058  6E10               	movwf	??_setMotorPWM^0,c
  2885   00005A  5010               	movf	??_setMotorPWM^0,w,c
  2886   00005C  6E01               	movwf	___wmul@multiplier^0,c
  2887   00005E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2888   000060  EE20 F003          	lfsr	2,3
  2889   000064  500E               	movf	setMotorPWM@m^0,w,c
  2890   000066  26D9               	addwf	fsr2l,f,c
  2891   000068  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2892   00006A  22DA               	addwfc	fsr2h,f,c
  2893   00006C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2894   000070  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2895   000074  EC3F  F005         	call	___wmul	;wreg free
  2896   000078  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2897   00007C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2898   000080  0E00               	movlw	0
  2899   000082  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2900   000084  0E64               	movlw	100
  2901   000086  6E09               	movwf	___lwdiv@divisor^0,c
  2902   000088  EC4C  F003         	call	___lwdiv	;wreg free
  2903   00008C  EE20 F003          	lfsr	2,3
  2904   000090  500E               	movf	setMotorPWM@m^0,w,c
  2905   000092  26D9               	addwf	fsr2l,f,c
  2906   000094  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2907   000096  22DA               	addwfc	fsr2h,f,c
  2908   000098  50DF               	movf	indf2,w,c
  2909   00009A  6E11               	movwf	(??_setMotorPWM+1)^0,c
  2910   00009C  5007               	movf	?___lwdiv^0,w,c
  2911   00009E  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  2912   0000A0  6E12               	movwf	setMotorPWM@posDuty^0,c
  2913   0000A2                     
  2914                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
  2915   0000A2  EE20 F003          	lfsr	2,3
  2916   0000A6  500E               	movf	setMotorPWM@m^0,w,c
  2917   0000A8  26D9               	addwf	fsr2l,f,c
  2918   0000AA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2919   0000AC  22DA               	addwfc	fsr2h,f,c
  2920   0000AE  50DF               	movf	indf2,w,c
  2921   0000B0  6E13               	movwf	setMotorPWM@negDuty^0,c
  2922                           
  2923                           ;dc_motor.c: 76:     }
  2924   0000B2  EF7E  F000         	goto	l2230
  2925   0000B6                     l2226:
  2926                           
  2927                           ;dc_motor.c: 78:         posDuty=0;
  2928   0000B6  0E00               	movlw	0
  2929   0000B8  6E12               	movwf	setMotorPWM@posDuty^0,c
  2930   0000BA                     
  2931                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2932   0000BA  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2933   0000BE  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2934   0000C2  50DF               	movf	indf2,w,c
  2935   0000C4  6E10               	movwf	??_setMotorPWM^0,c
  2936   0000C6  5010               	movf	??_setMotorPWM^0,w,c
  2937   0000C8  6E01               	movwf	___wmul@multiplier^0,c
  2938   0000CA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2939   0000CC  EE20 F003          	lfsr	2,3
  2940   0000D0  500E               	movf	setMotorPWM@m^0,w,c
  2941   0000D2  26D9               	addwf	fsr2l,f,c
  2942   0000D4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2943   0000D6  22DA               	addwfc	fsr2h,f,c
  2944   0000D8  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2945   0000DC  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2946   0000E0  EC3F  F005         	call	___wmul	;wreg free
  2947   0000E4  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2948   0000E8  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2949   0000EC  0E00               	movlw	0
  2950   0000EE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2951   0000F0  0E64               	movlw	100
  2952   0000F2  6E09               	movwf	___lwdiv@divisor^0,c
  2953   0000F4  EC4C  F003         	call	___lwdiv	;wreg free
  2954   0000F8  5007               	movf	?___lwdiv^0,w,c
  2955   0000FA  6E13               	movwf	setMotorPWM@negDuty^0,c
  2956   0000FC                     l2230:
  2957                           
  2958                           ;dc_motor.c: 82:     if (m->direction) {
  2959   0000FC  EE20 F001          	lfsr	2,1
  2960   000100  500E               	movf	setMotorPWM@m^0,w,c
  2961   000102  26D9               	addwf	fsr2l,f,c
  2962   000104  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2963   000106  22DA               	addwfc	fsr2h,f,c
  2964   000108  50DF               	movf	indf2,w,c
  2965   00010A  B4D8               	btfsc	status,2,c
  2966   00010C  EF8A  F000         	goto	u1171
  2967   000110  EF8C  F000         	goto	u1170
  2968   000114                     u1171:
  2969   000114  EFAE  F000         	goto	l2234
  2970   000118                     u1170:
  2971   000118                     
  2972                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
  2973   000118  EE20 F005          	lfsr	2,5
  2974   00011C  500E               	movf	setMotorPWM@m^0,w,c
  2975   00011E  26D9               	addwf	fsr2l,f,c
  2976   000120  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2977   000122  22DA               	addwfc	fsr2h,f,c
  2978   000124  CFDE F010          	movff	postinc2,??_setMotorPWM
  2979   000128  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2980   00012C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2981   000130  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2982   000134  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2983                           
  2984                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
  2985   000138  EE20 F007          	lfsr	2,7
  2986   00013C  500E               	movf	setMotorPWM@m^0,w,c
  2987   00013E  26D9               	addwf	fsr2l,f,c
  2988   000140  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2989   000142  22DA               	addwfc	fsr2h,f,c
  2990   000144  CFDE F010          	movff	postinc2,??_setMotorPWM
  2991   000148  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2992   00014C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2993   000150  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2994   000154  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2995                           
  2996                           ;dc_motor.c: 85:     } else {
  2997   000158  EFCE  F000         	goto	l211
  2998   00015C                     l2234:
  2999                           
  3000                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
  3001   00015C  EE20 F005          	lfsr	2,5
  3002   000160  500E               	movf	setMotorPWM@m^0,w,c
  3003   000162  26D9               	addwf	fsr2l,f,c
  3004   000164  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3005   000166  22DA               	addwfc	fsr2h,f,c
  3006   000168  CFDE F010          	movff	postinc2,??_setMotorPWM
  3007   00016C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3008   000170  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3009   000174  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3010   000178  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  3011                           
  3012                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
  3013   00017C  EE20 F007          	lfsr	2,7
  3014   000180  500E               	movf	setMotorPWM@m^0,w,c
  3015   000182  26D9               	addwf	fsr2l,f,c
  3016   000184  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3017   000186  22DA               	addwfc	fsr2h,f,c
  3018   000188  CFDE F010          	movff	postinc2,??_setMotorPWM
  3019   00018C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3020   000190  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3021   000194  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3022   000198  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  3023   00019C                     l211:
  3024   00019C  0012               	return		;funcret
  3025   00019E                     __end_of_setMotorPWM:
  3026                           	callstack 0
  3027                           
  3028 ;; *************** function ___wmul *****************
  3029 ;; Defined at:
  3030 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  multiplier      2    0[COMRAM] unsigned int 
  3033 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  product         2    4[COMRAM] unsigned int 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  2    0[COMRAM] unsigned int 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, prodl, prodh
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3048 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3049 ;;Total ram usage:        6 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; Hardware stack levels required when called: 2
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_setMotorPWM
  3056 ;;		_get_color_distance
  3057 ;;		_get_color_code
  3058 ;;		_get_wall_presence
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text23
  3063   000A7E                     __ptext23:
  3064                           	callstack 0
  3065   000A7E                     ___wmul:
  3066                           	callstack 26
  3067   000A7E  5001               	movf	___wmul@multiplier^0,w,c
  3068   000A80  0203               	mulwf	___wmul@multiplicand^0,c
  3069   000A82  CFF3 F005          	movff	prodl,___wmul@product
  3070   000A86  CFF4 F006          	movff	prodh,___wmul@product+1
  3071   000A8A  5001               	movf	___wmul@multiplier^0,w,c
  3072   000A8C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3073   000A8E  50F3               	movf	243,w,c
  3074   000A90  2606               	addwf	(___wmul@product+1)^0,f,c
  3075   000A92  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3076   000A94  0203               	mulwf	___wmul@multiplicand^0,c
  3077   000A96  50F3               	movf	243,w,c
  3078   000A98  2606               	addwf	(___wmul@product+1)^0,f,c
  3079   000A9A  C005  F001         	movff	___wmul@product,?___wmul
  3080   000A9E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3081   000AA2  0012               	return		;funcret
  3082   000AA4                     __end_of___wmul:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function ___lwdiv *****************
  3086 ;; Defined at:
  3087 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  dividend        2    6[COMRAM] unsigned int 
  3090 ;;  divisor         2    8[COMRAM] unsigned int 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  quotient        2   10[COMRAM] unsigned int 
  3093 ;;  counter         1   12[COMRAM] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2    6[COMRAM] unsigned int 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;Total ram usage:        7 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 2
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_calibrate_black
  3114 ;;		_setMotorPWM
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text24
  3119   000698                     __ptext24:
  3120                           	callstack 0
  3121   000698                     ___lwdiv:
  3122                           	callstack 26
  3123   000698  0E00               	movlw	0
  3124   00069A  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  3125   00069C  0E00               	movlw	0
  3126   00069E  6E0B               	movwf	___lwdiv@quotient^0,c
  3127   0006A0  5009               	movf	___lwdiv@divisor^0,w,c
  3128   0006A2  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3129   0006A4  B4D8               	btfsc	status,2,c
  3130   0006A6  EF57  F003         	goto	u1131
  3131   0006AA  EF59  F003         	goto	u1130
  3132   0006AE                     u1131:
  3133   0006AE  EF81  F003         	goto	l908
  3134   0006B2                     u1130:
  3135   0006B2  0E01               	movlw	1
  3136   0006B4  6E0D               	movwf	___lwdiv@counter^0,c
  3137   0006B6  EF61  F003         	goto	l2144
  3138   0006BA                     l2142:
  3139   0006BA  90D8               	bcf	status,0,c
  3140   0006BC  3609               	rlcf	___lwdiv@divisor^0,f,c
  3141   0006BE  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3142   0006C0  2A0D               	incf	___lwdiv@counter^0,f,c
  3143   0006C2                     l2144:
  3144   0006C2  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3145   0006C4  EF66  F003         	goto	u1141
  3146   0006C8  EF68  F003         	goto	u1140
  3147   0006CC                     u1141:
  3148   0006CC  EF5D  F003         	goto	l2142
  3149   0006D0                     u1140:
  3150   0006D0                     l2146:
  3151   0006D0  90D8               	bcf	status,0,c
  3152   0006D2  360B               	rlcf	___lwdiv@quotient^0,f,c
  3153   0006D4  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3154   0006D6  5009               	movf	___lwdiv@divisor^0,w,c
  3155   0006D8  5C07               	subwf	___lwdiv@dividend^0,w,c
  3156   0006DA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3157   0006DC  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3158   0006DE  A0D8               	btfss	status,0,c
  3159   0006E0  EF74  F003         	goto	u1151
  3160   0006E4  EF76  F003         	goto	u1150
  3161   0006E8                     u1151:
  3162   0006E8  EF7B  F003         	goto	l2154
  3163   0006EC                     u1150:
  3164   0006EC  5009               	movf	___lwdiv@divisor^0,w,c
  3165   0006EE  5E07               	subwf	___lwdiv@dividend^0,f,c
  3166   0006F0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3167   0006F2  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3168   0006F4  800B               	bsf	___lwdiv@quotient^0,0,c
  3169   0006F6                     l2154:
  3170   0006F6  90D8               	bcf	status,0,c
  3171   0006F8  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3172   0006FA  3209               	rrcf	___lwdiv@divisor^0,f,c
  3173   0006FC  2E0D               	decfsz	___lwdiv@counter^0,f,c
  3174   0006FE  EF68  F003         	goto	l2146
  3175   000702                     l908:
  3176   000702  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  3177   000706  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3178   00070A  0012               	return		;funcret
  3179   00070C                     __end_of___lwdiv:
  3180                           	callstack 0
  3181                           
  3182 ;; *************** function _Interrupts_init *****************
  3183 ;; Defined at:
  3184 ;;		line 10 in file "interrupts.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		None
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 2
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text25
  3213   000B0C                     __ptext25:
  3214                           	callstack 0
  3215   000B0C                     _Interrupts_init:
  3216                           	callstack 28
  3217   000B0C                     
  3218                           ;interrupts.c: 12:     INTCONbits.PEIE = 1;
  3219   000B0C  8CF2               	bsf	242,6,c	;volatile
  3220                           
  3221                           ;interrupts.c: 13:     PIE0bits.TMR0IE = 1;
  3222   000B0E  010E               	movlb	14	; () banked
  3223   000B10  8B29               	bsf	41,5,b	;volatile
  3224                           
  3225                           ;interrupts.c: 14:     PIE2bits.C1IE = 1;
  3226   000B12  812B               	bsf	43,0,b	;volatile
  3227                           
  3228                           ;interrupts.c: 15:     INTCONbits.GIE = 1;
  3229   000B14  8EF2               	bsf	242,7,c	;volatile
  3230   000B16                     
  3231                           ; BSR set to: 14
  3232   000B16  0012               	return		;funcret
  3233   000B18                     __end_of_Interrupts_init:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function _HighISR *****************
  3237 ;; Defined at:
  3238 ;;		line 22 in file "interrupts.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3256 ;;Total ram usage:        0 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 1
  3259 ;; This function calls:
  3260 ;;		_increment_seconds
  3261 ;; This function is called by:
  3262 ;;		Interrupt level 2
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	intcode
  3267   000008                     __pintcode:
  3268                           	callstack 0
  3269   000008                     _HighISR:
  3270                           	callstack 24
  3271                           
  3272                           ; BSR set to: 14
  3273                           ;incstack = 0
  3274   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3275   00000A                     
  3276                           ;interrupts.c: 24:     if(PIR0bits.TMR0IF == 1){
  3277   00000A  010E               	movlb	14	; () banked
  3278   00000C  AB33               	btfss	51,5,b	;volatile
  3279   00000E  EF0B  F000         	goto	i2u69_41
  3280   000012  EF0D  F000         	goto	i2u69_40
  3281   000016                     i2u69_41:
  3282   000016  EF15  F000         	goto	i2l367
  3283   00001A                     i2u69_40:
  3284   00001A                     
  3285                           ; BSR set to: 14
  3286                           ;interrupts.c: 25:     increment_seconds();
  3287   00001A  EC9B  F005         	call	_increment_seconds	;wreg free
  3288   00001E                     
  3289                           ;interrupts.c: 27:     TMR0H=0b11100111;
  3290   00001E  0EE7               	movlw	231
  3291   000020  6ED4               	movwf	212,c	;volatile
  3292   000022                     
  3293                           ;interrupts.c: 28:     TMR0L=0b10010101;
  3294   000022  0E95               	movlw	149
  3295   000024  6ED3               	movwf	211,c	;volatile
  3296   000026                     
  3297                           ;interrupts.c: 30:     PIR0bits.TMR0IF = 0;
  3298   000026  010E               	movlb	14	; () banked
  3299   000028  9B33               	bcf	51,5,b	;volatile
  3300   00002A                     i2l367:
  3301                           
  3302                           ; BSR set to: 14
  3303   00002A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3304   00002C  0011               	retfie		f
  3305   00002E                     __end_of_HighISR:
  3306                           	callstack 0
  3307                           
  3308 ;; *************** function _increment_seconds *****************
  3309 ;; Defined at:
  3310 ;;		line 312 in file "dc_motor.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_HighISR
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text27
  3338   000B36                     __ptext27:
  3339                           	callstack 0
  3340   000B36                     _increment_seconds:
  3341                           	callstack 24
  3342   000B36                     
  3343                           ;dc_motor.c: 314:     seconds += 1;
  3344   000B36  4A58               	infsnz	_seconds^0,f,c
  3345   000B38  2A59               	incf	(_seconds+1)^0,f,c
  3346   000B3A  0012               	return		;funcret
  3347   000B3C                     __end_of_increment_seconds:
  3348                           	callstack 0
  3349   000000                     
  3350                           	psect	rparam
  3351   000000                     
  3352                           	psect	temp
  3353   00005A                     btemp:
  3354                           	callstack 0
  3355   00005A                     	ds	1
  3356   000000                     int$flags	set	btemp
  3357   000000                     wtemp8	set	btemp+1
  3358   000000                     ttemp5	set	btemp+1
  3359   000000                     ttemp6	set	btemp+4
  3360   000000                     ttemp7	set	btemp+8
  3361                           
  3362                           	psect	idloc
  3363                           
  3364                           ;Config register IDLOC0 @ 0x200000
  3365                           ;	unspecified, using default values
  3366   200000                     	org	2097152
  3367   200000  0FFF               	dw	4095
  3368                           
  3369                           ;Config register IDLOC1 @ 0x200002
  3370                           ;	unspecified, using default values
  3371   200002                     	org	2097154
  3372   200002  0FFF               	dw	4095
  3373                           
  3374                           ;Config register IDLOC2 @ 0x200004
  3375                           ;	unspecified, using default values
  3376   200004                     	org	2097156
  3377   200004  0FFF               	dw	4095
  3378                           
  3379                           ;Config register IDLOC3 @ 0x200006
  3380                           ;	unspecified, using default values
  3381   200006                     	org	2097158
  3382   200006  0FFF               	dw	4095
  3383                           
  3384                           ;Config register IDLOC4 @ 0x200008
  3385                           ;	unspecified, using default values
  3386   200008                     	org	2097160
  3387   200008  0FFF               	dw	4095
  3388                           
  3389                           ;Config register IDLOC5 @ 0x20000A
  3390                           ;	unspecified, using default values
  3391   20000A                     	org	2097162
  3392   20000A  0FFF               	dw	4095
  3393                           
  3394                           ;Config register IDLOC6 @ 0x20000C
  3395                           ;	unspecified, using default values
  3396   20000C                     	org	2097164
  3397   20000C  0FFF               	dw	4095
  3398                           
  3399                           ;Config register IDLOC7 @ 0x20000E
  3400                           ;	unspecified, using default values
  3401   20000E                     	org	2097166
  3402   20000E  0FFF               	dw	4095
  3403                           
  3404                           	psect	config
  3405                           
  3406                           ;Config register CONFIG1L @ 0x300000
  3407                           ;	External Oscillator mode Selection bits
  3408                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3409                           ;	Power-up default value for COSC bits
  3410                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3411   300000                     	org	3145728
  3412   300000  AA                 	db	170
  3413                           
  3414                           ;Config register CONFIG1H @ 0x300001
  3415                           ;	unspecified, using default values
  3416                           ;	Clock Out Enable bit
  3417                           ;	CLKOUTEN = 0x1, unprogrammed default
  3418                           ;	Clock Switch Enable bit
  3419                           ;	CSWEN = 0x1, unprogrammed default
  3420                           ;	Fail-Safe Clock Monitor Enable bit
  3421                           ;	FCMEN = 0x1, unprogrammed default
  3422   300001                     	org	3145729
  3423   300001  FF                 	db	255
  3424                           
  3425                           ;Config register CONFIG2L @ 0x300002
  3426                           ;	unspecified, using default values
  3427                           ;	Master Clear Enable bit
  3428                           ;	MCLRE = 0x1, unprogrammed default
  3429                           ;	Power-up Timer Enable bit
  3430                           ;	PWRTE = 0x1, unprogrammed default
  3431                           ;	Low-power BOR enable bit
  3432                           ;	LPBOREN = 0x1, unprogrammed default
  3433                           ;	Brown-out Reset Enable bits
  3434                           ;	BOREN = 0x3, unprogrammed default
  3435   300002                     	org	3145730
  3436   300002  FF                 	db	255
  3437                           
  3438                           ;Config register CONFIG2H @ 0x300003
  3439                           ;	unspecified, using default values
  3440                           ;	Brown Out Reset Voltage selection bits
  3441                           ;	BORV = 0x3, unprogrammed default
  3442                           ;	ZCD Disable bit
  3443                           ;	ZCD = 0x1, unprogrammed default
  3444                           ;	PPSLOCK bit One-Way Set Enable bit
  3445                           ;	PPS1WAY = 0x1, unprogrammed default
  3446                           ;	Stack Full/Underflow Reset Enable bit
  3447                           ;	STVREN = 0x1, unprogrammed default
  3448                           ;	Debugger Enable bit
  3449                           ;	DEBUG = 0x1, unprogrammed default
  3450                           ;	Extended Instruction Set Enable bit
  3451                           ;	XINST = 0x1, unprogrammed default
  3452   300003                     	org	3145731
  3453   300003  FF                 	db	255
  3454                           
  3455                           ;Config register CONFIG3L @ 0x300004
  3456                           ;	WDT Period Select bits
  3457                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3458                           ;	WDT operating mode
  3459                           ;	WDTE = OFF, WDT Disabled
  3460   300004                     	org	3145732
  3461   300004  9F                 	db	159
  3462                           
  3463                           ;Config register CONFIG3H @ 0x300005
  3464                           ;	unspecified, using default values
  3465                           ;	WDT Window Select bits
  3466                           ;	WDTCWS = 0x7, unprogrammed default
  3467                           ;	WDT input clock selector
  3468                           ;	WDTCCS = 0x7, unprogrammed default
  3469   300005                     	org	3145733
  3470   300005  FF                 	db	255
  3471                           
  3472                           ;Config register CONFIG4L @ 0x300006
  3473                           ;	unspecified, using default values
  3474                           ;	Write Protection Block 0
  3475                           ;	WRT0 = 0x1, unprogrammed default
  3476                           ;	Write Protection Block 1
  3477                           ;	WRT1 = 0x1, unprogrammed default
  3478                           ;	Write Protection Block 2
  3479                           ;	WRT2 = 0x1, unprogrammed default
  3480                           ;	Write Protection Block 3
  3481                           ;	WRT3 = 0x1, unprogrammed default
  3482                           ;	Write Protection Block 3
  3483                           ;	WRT4 = 0x1, unprogrammed default
  3484                           ;	Write Protection Block 3
  3485                           ;	WRT5 = 0x1, unprogrammed default
  3486                           ;	Write Protection Block 3
  3487                           ;	WRT6 = 0x1, unprogrammed default
  3488                           ;	Write Protection Block 3
  3489                           ;	WRT7 = 0x1, unprogrammed default
  3490   300006                     	org	3145734
  3491   300006  FF                 	db	255
  3492                           
  3493                           ;Config register CONFIG4H @ 0x300007
  3494                           ;	unspecified, using default values
  3495                           ;	Configuration Register Write Protection bit
  3496                           ;	WRTC = 0x1, unprogrammed default
  3497                           ;	Boot Block Write Protection bit
  3498                           ;	WRTB = 0x1, unprogrammed default
  3499                           ;	Data EEPROM Write Protection bit
  3500                           ;	WRTD = 0x1, unprogrammed default
  3501                           ;	Scanner Enable bit
  3502                           ;	SCANE = 0x1, unprogrammed default
  3503                           ;	Low Voltage Programming Enable bit
  3504                           ;	LVP = 0x1, unprogrammed default
  3505   300007                     	org	3145735
  3506   300007  FF                 	db	255
  3507                           
  3508                           ;Config register CONFIG5L @ 0x300008
  3509                           ;	unspecified, using default values
  3510                           ;	UserNVM Program Memory Code Protection bit
  3511                           ;	CP = 0x1, unprogrammed default
  3512                           ;	DataNVM Memory Code Protection bit
  3513                           ;	CPD = 0x1, unprogrammed default
  3514   300008                     	org	3145736
  3515   300008  FF                 	db	255
  3516                           
  3517                           ;Config register CONFIG5H @ 0x300009
  3518                           ;	unspecified, using default values
  3519   300009                     	org	3145737
  3520   300009  FF                 	db	255
  3521                           
  3522                           ;Config register CONFIG6L @ 0x30000A
  3523                           ;	unspecified, using default values
  3524                           ;	Table Read Protection Block 0
  3525                           ;	EBTR0 = 0x1, unprogrammed default
  3526                           ;	Table Read Protection Block 1
  3527                           ;	EBTR1 = 0x1, unprogrammed default
  3528                           ;	Table Read Protection Block 2
  3529                           ;	EBTR2 = 0x1, unprogrammed default
  3530                           ;	Table Read Protection Block 3
  3531                           ;	EBTR3 = 0x1, unprogrammed default
  3532                           ;	Table Read Protection Block 4
  3533                           ;	EBTR4 = 0x1, unprogrammed default
  3534                           ;	Table Read Protection Block 5
  3535                           ;	EBTR5 = 0x1, unprogrammed default
  3536                           ;	Table Read Protection Block 6
  3537                           ;	EBTR6 = 0x1, unprogrammed default
  3538                           ;	Table Read Protection Block 7
  3539                           ;	EBTR7 = 0x1, unprogrammed default
  3540   30000A                     	org	3145738
  3541   30000A  FF                 	db	255
  3542                           
  3543                           ;Config register CONFIG6H @ 0x30000B
  3544                           ;	unspecified, using default values
  3545                           ;	Boot Block Table Read Protection bit
  3546                           ;	EBTRB = 0x1, unprogrammed default
  3547   30000B                     	org	3145739
  3548   30000B  FF                 	db	255
  3549                           tosu	equ	0xFFF
  3550                           tosh	equ	0xFFE
  3551                           tosl	equ	0xFFD
  3552                           stkptr	equ	0xFFC
  3553                           pclatu	equ	0xFFB
  3554                           pclath	equ	0xFFA
  3555                           pcl	equ	0xFF9
  3556                           tblptru	equ	0xFF8
  3557                           tblptrh	equ	0xFF7
  3558                           tblptrl	equ	0xFF6
  3559                           tablat	equ	0xFF5
  3560                           prodh	equ	0xFF4
  3561                           prodl	equ	0xFF3
  3562                           indf0	equ	0xFEF
  3563                           postinc0	equ	0xFEE
  3564                           postdec0	equ	0xFED
  3565                           preinc0	equ	0xFEC
  3566                           plusw0	equ	0xFEB
  3567                           fsr0h	equ	0xFEA
  3568                           fsr0l	equ	0xFE9
  3569                           wreg	equ	0xFE8
  3570                           indf1	equ	0xFE7
  3571                           postinc1	equ	0xFE6
  3572                           postdec1	equ	0xFE5
  3573                           preinc1	equ	0xFE4
  3574                           plusw1	equ	0xFE3
  3575                           fsr1h	equ	0xFE2
  3576                           fsr1l	equ	0xFE1
  3577                           bsr	equ	0xFE0
  3578                           indf2	equ	0xFDF
  3579                           postinc2	equ	0xFDE
  3580                           postdec2	equ	0xFDD
  3581                           preinc2	equ	0xFDC
  3582                           plusw2	equ	0xFDB
  3583                           fsr2h	equ	0xFDA
  3584                           fsr2l	equ	0xFD9
  3585                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        124
    BSS         236
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      89
    BANK0           160      0     108
    BANK1           256      0     208
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    RobotMovement@motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    RobotMovement@motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    RobotMovement@motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    RobotMovement@motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    Calibrate@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    Calibrate@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    Calibrate@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    Calibrate@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    TimedfullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    turnRightLong@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRightLong@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRightLong@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRightLong@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    S1015DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S1015DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), main@motorL(COMRAM[9]), RobotMovement@motorR(COMRAM[2]), RobotMovement@motorL(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_TimedfullSpeedAhead
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_click_init->_calibrate_black
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _calibrate_black->___lwdiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _TimedfullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   18760
                                             25 COMRAM    20    20      0
                    _Interrupts_init
                _TimedfullSpeedAhead
                        _Timer0_init
                   _color_click_init
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 4     0      4    4501
                                             19 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       4     0      4    4545
                                             19 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    4532
                                             21 COMRAM     1     1      0
                  _I2C_2_Master_Init
                    _calibrate_black
                    _calibrate_white
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      2     2      0    1697
                                             11 COMRAM     2     2      0
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _calibrate_black                                      8     8      0    2541
                                             13 COMRAM     8     8      0
                            ___lwdiv
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (3) _set_led_color                                        2     0      2    1358
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TimedfullSpeedAhead                                  6     0      6    4643
                                             19 COMRAM     6     0      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    4261
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1115
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     662
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0       0
                  _increment_seconds
 ---------------------------------------------------------------------------------
 (7) _increment_seconds                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _TimedfullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _calibrate_black
       ___lwdiv
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _set_led_color
     _calibrate_white
       _color_read_Blue
       _color_read_Green
       _color_read_Red
       _set_led_color
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _stop
     _setMotorPWM

 _HighISR (ROOT)
   _increment_seconds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D0       7       81.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      6C       5       67.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      59       1       94.7%
BITBIGSFRllhllh     52      0       0      44        0.0%
BITBIGSFRllhlll     46      0       0      46        0.0%
BITBIGSFRlllllh     35      0       0      55        0.0%
BITBIGSFRllllll     2D      0       0      59        0.0%
BITBIGSFRllhlll     20      0       0      48        0.0%
BITBIGSFRlllhhh     1E      0       0      50        0.0%
BITBIGSFRhhhlhh     1B      0       0      33        0.0%
BITBIGSFRhhlll      17      0       0      38        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      51        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      49        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllllh      7      0       0      56        0.0%
BITBIGSFRhl          6      0       0      39        0.0%
BITBIGSFRllllhl      5      0       0      54        0.0%
BITBIGSFRllllhh      3      0       0      53        0.0%
BITBIGSFRllhlll      2      0       0      45        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      57        0.0%
BITBIGSFRllhlll      1      0       0      47        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      52        0.0%
BITBIGSFRllhlhh      1      0       0      42        0.0%
BITBIGSFRllhlhl      1      0       0      43        0.0%
BITBIGSFRllhh        1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     195      60        0.0%
DATA                 0      0     195       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 10:20:28 2022

               _color_read_Red 0834                _color_read_Blue 0924                             l71 029E  
                           l73 02D4                             l82 0AC2                             l74 02B4  
                           l91 08D2                             l67 0282                             l85 0882  
                           l77 02C6                             l94 0922                             l88 0972  
          ___wmul@multiplicand 0003               _color_read_Clear 08D4               ?_calibrate_black 0001  
             _color_read_Green 0884              ??_Interrupts_init 0001                            l112 0988  
                          l113 098A                            l114 099E                            l211 019C  
                          l115 09A0                            l116 09B4                            l204 0622  
                          l141 040C                            l118 09B6                            l214 0A2A  
                          l144 0592                            l251 0696                            l323 0A54  
                          l332 0B2A                            l341 0B0A                            l245 0832  
                          l414 0AE2                            l326 0A56                            l335 0B34  
                          l344 09F8                            l361 0B16                            l417 0AA2  
                          l329 0A7C                            l338 0B20                            l915 070A  
                          l908 0702                            _RGB 004A               ?_calibrate_white 0001  
                          wreg 000FE8                           l2100 087A                           l2110 0884  
                         l2104 0924                           l2112 08CA                           l2200 033A  
                         l2130 0A7E                           l2106 096A                           l2122 0974  
                         l2210 039A                           l2202 0346                           l2140 06B2  
                         l2132 0A9A                           l2220 0032                           l2116 08D4  
                         l2124 0982                           l2212 03A6                           l2204 035C  
                         l2150 06EC                           l2142 06BA                           l2230 00FC  
                         l2222 004E                           l2070 0B26                           l2118 091A  
                         l2126 0998                           l2214 03BC                           l2206 036C  
                         l2310 0594                           l2152 06F4                           l2144 06C2  
                         l2136 0698                           l2232 0118                           l2224 00A2  
                         l2160 0A36                           l2064 0A56                           l2080 0B2C  
                         l2072 0B02                           l2128 09AE                           l2216 03D4  
                         l2208 038E                           l2240 01AC                           l2320 05FE  
                         l2312 05A4                           l2154 06F6                           l2146 06D0  
                         l2138 06A0                           l2234 015C                           l2226 00B6  
                         l2162 0A3C                           l2066 0A66                           l2090 09CE  
                         l2082 0B30                           l2074 0B06                           l2218 03F0  
                         l2170 0AA6                           l2250 01D4                           l2242 01BC  
                         l2330 0620                           l2322 0608                           l2314 05CE  
                         l2156 06FC                           l2148 06D6                           l2228 00BA  
                         l2164 0A3E                           l2092 09F4                           l2084 09BA  
                         l2068 0B22                           l2076 0B18                           l2180 052E  
                         l2172 04F0                           l2260 021E                           l2252 01D6  
                         l2244 01C6                           l2236 019E                           l2324 060A  
                         l2316 05F2                           l2332 09FA                           l2166 0A40  
                         l2158 0A2C                           l2094 09F6                           l2086 09BE  
                         l2078 0B1C                           l2190 02D6                           l2182 0554  
                         l2174 04FC                           l2270 0278                           l2262 0230  
                         l2254 01E8                           l2246 01D0                           l2238 01A2  
                         l2326 0614                           l2318 05FC                           l2334 0A12  
                         l2168 0A42                           l2088 09C6                           l2192 02E2  
                         l2184 0560                           l2176 0512                           l2272 027A  
                         l2264 0242                           l2256 01FA                           l2248 01D2  
                         l2520 0802                           l2328 0616                           l2336 0A1E  
                         l1570 0B0C                           l2530 0630                           l2098 0834  
                         l2194 02F8                           l2186 0576                           l2178 0522  
                         l2282 02B0                           l2274 027E                           l2266 0254  
                         l2258 020C                           l2522 080E                           l2514 07DA  
                         l2532 0650                           l2540 0680                           l1572 0AC4  
                         l2196 0308                           l2188 0586                           l2284 02C2  
                         l2276 0280                           l2268 0266                           l2524 081A  
                         l2516 07E2                           l2534 065C                           l1574 0ACC  
                         l2198 0314                           l2278 0290                           l2526 0826  
                         l2518 07F2                           l2536 0668                           l2528 0624  
                         l1576 0ADE                           l2800 04A4                           l2538 0674  
                         l1578 0AE0                           l2802 04B8                           l2804 04D0  
                         l2760 0412                           l2770 042A                           l2762 0416  
                         l2780 0440                           l2772 042C                           l2764 0422  
                         l2790 045C                           l2782 0448                           l2774 0430  
                         l2766 0422                           l2758 040E                           l2792 0464  
                         l2784 0450                           l2776 0434                           l2768 0426  
                         l2794 046C                           l2786 0454                           l2778 0438  
                         l2796 0474                           l2788 0458                           l2798 0488  
                         u1100 0982                           u1101 097E                           u1110 0998  
                         u1111 0994                           u1120 09AE                           u1121 09AA  
                         u1201 0204                           u1130 06B2                           u1131 06AE  
                         u1211 0216                           u1140 06D0                           u1060 0A66  
                         u1300 02C2                           u1141 06CC                           u1061 0A62  
                         u1301 02BE                           u1221 0228                           u1150 06EC  
                         u1070 0A7C                           u1310 02D4                           u1151 06E8  
                         u1071 0A78                           u1311 02D0                           u1231 023A  
                         u1160 004E                           u1080 09E2                           u1161 004A  
                         u1081 09DA                           u1241 024C                           u1170 0118  
                         u1171 0114                           u1251 025E                           u1261 0270  
                         u1181 01E0                           u1430 0696                           u1270 0290  
                         u1431 0692                           u2207 056A                           u1271 028C  
                         u1191 01F2                           u1280 029E                           u2217 02EC  
                         u1281 029A                           u1098 09E4                           u1290 02AC  
                         u2227 031E                           u1291 02A8                           u2237 0350  
                         u2157 04C2                           u2247 0382                           u2167 04DA  
                         u2257 03B0                           u2177 01B2                           _T2PR 000FBC  
                   _Black_rule 00C0                           u2187 0506                           u2197 0538  
                         _main 040E                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 005A  
                         _stop 09FA                           prodh 000FF4                           prodl 000FF3  
                         start 002E         __end_of_color_read_Red 0884                __end_of_HighISR 002E  
                 ___param_bank 000000                          ?_main 0001                          ?_stop 0014  
                  _Black_setup 002E                __end_of___lwdiv 070C                          i2l269 0B3A  
                        i2l367 002A                          _TMR0H 000FD4                          _TMR0L 000FD3  
   __end_of_I2C_2_Master_Start 0B2C     __end_of_I2C_2_Master_Write 0B0C                          _index 0056  
                        tablat 000FF5                          plusw1 000FE3                          plusw2 000FDB  
                        ttemp5 005B                          ttemp6 005E                          ttemp7 0062  
                        status 000FD8                          wtemp8 005B                     _Green_rule 00A8  
      __end_of_color_read_Blue 0974          _I2C_2_Master_RepStart 0B2C                ?_color_read_Red 0005  
              __initialization 070C                   __end_of_main 04F0                   __end_of_stop 0A2C  
                       ??_main 001A                         ??_stop 0018                  __activetblptr 000000  
                 ?_setMotorPWM 000E                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RD6PPS 000E70  
                       _RE4PPS 000E76                         i2l1568 0B36                         i2l1790 001E  
                       i2l1792 0022                         i2l1794 0026                         i2l1786 000A  
                       i2l1788 001A                         _RG6PPS 000E88                      ??_HighISR 0001  
     __end_of_color_click_init 02D6                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                       ___wmul 0A7E                      ??___lwdiv 000B                    _Color_rules 0100  
                       clear_0 0752                         clear_1 075E                         clear_2 076A  
                       isa$std 000001          calibrate_black@clear1 0010          calibrate_black@clear2 0012  
                 __pdataCOMRAM 002E                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                 _Lightblue_rule 006C                     _White_rule 0060  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
        __end_of_set_led_color 09B8                     __accesstop 0060        __end_of__initialization 0770  
     __end_of_color_read_Clear 0924       __end_of_color_read_Green 08D4         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0005                _Interrupts_init 0B0C  
               __pcstackCOMRAM 0001                   __pidataBANK0 077A            __end_of_Timer0_init 0AE4  
                   __pbssBANK0 00C0                     __pbssBANK1 0100              _color_writetoaddr 0AA4  
                 _T2CLKCONbits 000FBF             ?_color_writetoaddr 0003                        ?___wmul 0001  
          ??_color_writetoaddr 0004                        i2u69_40 001A                        i2u69_41 0016  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                    _Orange_rule 0078  
      __end_of_Interrupts_init 0B18         color_writetoaddr@value 0003               ??_color_read_Red 0007  
                      _HighISR 0008      __end_of_color_writetoaddr 0AC4             _I2C_2_Master_Start 0B22  
           _I2C_2_Master_Write 0B00                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 0AC4            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 0698            ?_I2C_2_Master_Write 0001                        __pcinit 070C  
                      __ramtop 0E00                        __ptext0 040E                        __ptext1 09FA  
                      __ptext2 0594                        __ptext3 07DA                        __ptext4 019E  
                      __ptext5 0AA4                        __ptext6 04F0                        __ptext7 02D6  
                      __ptext8 0974                        __ptext9 0834                      _T2CONbits 000FBD  
                      _seconds 0058                      _T2HLTbits 000FBE           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 0770              ?_color_click_init 0001  
           ??_color_click_init 0016                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                    _White_setup 003A  
              _initDCmotorsPWM 0594                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
                  _Yellow_rule 0090                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87           _calibrate_black$2439 0014  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002               ?_Interrupts_init 0001                    _CCP1CONbits 000FAB  
            _increment_seconds 0B36              ?_color_read_Clear 0005                    _CCP2CONbits 000FA7  
            ??_calibrate_black 000E              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  _CCP4CONbits 000F22                     main@motorL 001C                     main@motorR 0025  
            ??_calibrate_white 000C             ?_increment_seconds 0001             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                 _fullSpeedAhead 07DA                      _Blue_rule 009C  
          ??_increment_seconds 0001                 __end_of___wmul 0AA4                  __pidataCOMRAM 0AE4  
          color_read_Clear@tmp 000A            start_initialization 070C            _TimedfullSpeedAhead 0624  
    __end_of_increment_seconds 0B3C                      _Pink_rule 0084            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 0624           ?_TimedfullSpeedAhead 0014         __end_of_fullSpeedAhead 0834  
                     ??___wmul 0005                    __pdataBANK0 0060                    __pbssCOMRAM 004A  
                     ?_HighISR 0001               ___lwdiv@dividend 0007          ??_TimedfullSpeedAhead 001A  
                 ?_Timer0_init 0001                ?_fullSpeedAhead 0014                      __pintcode 0008  
                     ?___lwdiv 0007           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
        TimedfullSpeedAhead@mL 0014          TimedfullSpeedAhead@mR 0016              _I2C_2_Master_Idle 0A56  
            _I2C_2_Master_Init 0A2C              _I2C_2_Master_Read 09B8              _I2C_2_Master_Stop 0B18  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
                _set_led_color 0974            ??_I2C_2_Master_Stop 0002                       _LATCbits 000F7B  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _PIE0bits 000E29                       _PIE2bits 000E2B                       _PIR0bits 000E33  
             ?_initDCmotorsPWM 0001                      _wall_coef 0048                      _wait_time 0046  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8             set_led_color@color 0001  
    __end_of_I2C_2_Master_Idle 0A7E      __end_of_I2C_2_Master_Init 0A56      __end_of_I2C_2_Master_Read 09FA  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 0B22                   setMotorPWM@m 000E  
  I2C_2_Master_Write@data_byte 0002                  _movement_list 016C              ??_color_read_Blue 0007  
              _calibrate_black 02D6        TimedfullSpeedAhead@time 0018                _calibrate_white 04F0  
                    copy_data0 0720                      copy_data1 0740                 ?_set_led_color 0001  
__end_of_I2C_2_Master_RepStart 0B36             color_read_Blue@tmp 000A            __end_of_setMotorPWM 019E  
                     _Red_rule 00B4                       __Hrparam 0000                       __Lrparam 0000  
                   _ANSELDbits 000EA7                     _ANSELFbits 000EB4                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                ___lwdiv@divisor 0009                ___lwdiv@counter 000D  
                     __ptext10 0884                       __ptext11 08D4                       __ptext20 0AC4  
                     __ptext12 0924                       __ptext21 0624                       __ptext13 0B00  
                     __ptext22 0032                       __ptext14 0B18                       __ptext23 0A7E  
                     __ptext15 0B22                       __ptext24 0698                       __ptext16 0B2C  
                     __ptext25 0B0C                       __ptext17 09B8                       __ptext18 0A56  
                     __ptext27 0B36                       __ptext19 0A2C                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       isa$xinst 000000                       int$flags 005A  
      __end_of_calibrate_black 040E        __end_of_calibrate_white 0594                     _INTCONbits 000FF2  
                  _setMotorPWM 0032                ??_set_led_color 0003                       intlevel2 0000  
             ??_fullSpeedAhead 0018               _color_click_init 019E                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C    __end_of_TimedfullSpeedAhead 0698  
