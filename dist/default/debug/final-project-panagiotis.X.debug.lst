

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Dec 07 21:10:40 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Version 2.40
    56                           ; Generated 04/07/2022 GMT
    57                           ; 
    58                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F67K40 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     
    91                           	psect	idataCOMRAM
    92   001104                     __pidataCOMRAM:
    93                           	callstack 0
    94                           
    95                           ;initializer for _Black_setup
    96   001104  0404               	dw	1028
    97   001106  0000               	dw	0
    98   001108  024B               	dw	587
    99   00110A  0000               	dw	0
   100   00110C  00A1               	dw	161
   101   00110E  0000               	dw	0
   102                           
   103                           ;initializer for _wall_coef
   104   001110  000F               	dw	15
   105                           
   106                           	psect	idataBANK0
   107   000DA0                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for _White_setup
   111   000DA0  28FC               	dw	10492
   112   000DA2  0000               	dw	0
   113   000DA4  1B55               	dw	6997
   114   000DA6  0000               	dw	0
   115   000DA8  0770               	dw	1904
   116   000DAA  0000               	dw	0
   117                           
   118                           ;initializer for _Lightblue_rule
   119   000DAC  0026               	dw	38
   120   000DAE  0000               	dw	0
   121   000DB0  0048               	dw	72
   122   000DB2  0000               	dw	0
   123   000DB4  0054               	dw	84
   124   000DB6  0000               	dw	0
   125                           
   126                           ;initializer for _Orange_rule
   127   000DB8  005C               	dw	92
   128   000DBA  0000               	dw	0
   129   000DBC  0027               	dw	39
   130   000DBE  0000               	dw	0
   131   000DC0  001C               	dw	28
   132   000DC2  0000               	dw	0
   133                           
   134                           ;initializer for _Pink_rule
   135   000DC4  004D               	dw	77
   136   000DC6  0000               	dw	0
   137   000DC8  003C               	dw	60
   138   000DCA  0000               	dw	0
   139   000DCC  0040               	dw	64
   140   000DCE  0000               	dw	0
   141                           
   142                           ;initializer for _Yellow_rule
   143   000DD0  005D               	dw	93
   144   000DD2  0000               	dw	0
   145   000DD4  004C               	dw	76
   146   000DD6  0000               	dw	0
   147   000DD8  0014               	dw	20
   148   000DDA  0000               	dw	0
   149                           
   150                           ;initializer for _Blue_rule
   151   000DDC  0003               	dw	3
   152   000DDE  0000               	dw	0
   153   000DE0  0009               	dw	9
   154   000DE2  0000               	dw	0
   155   000DE4  0024               	dw	36
   156   000DE6  0000               	dw	0
   157                           
   158                           ;initializer for _Green_rule
   159   000DE8  0019               	dw	25
   160   000DEA  0000               	dw	0
   161   000DEC  0036               	dw	54
   162   000DEE  0000               	dw	0
   163   000DF0  0008               	dw	8
   164   000DF2  0000               	dw	0
   165                           
   166                           ;initializer for _Red_rule
   167   000DF4  0048               	dw	72
   168   000DF6  0000               	dw	0
   169   000DF8  0002               	dw	2
   170   000DFA  0000               	dw	0
   171   000DFC  0002               	dw	2
   172   000DFE  0000               	dw	0
   173                           
   174                           ;initializer for _wait_time
   175   000E00  00DC               	dw	220
   176                           
   177                           	psect	idataBANK1
   178   001112                     __pidataBANK1:
   179                           	callstack 0
   180                           
   181                           ;initializer for _White_rule
   182   001112  0064               	dw	100
   183   001114  0000               	dw	0
   184   001116  0064               	dw	100
   185   001118  0000               	dw	0
   186   00111A  0064               	dw	100
   187   00111C  0000               	dw	0
   188   000000                     _T0CON0bits	set	4053
   189   000000                     _T0CON1bits	set	4054
   190   000000                     _TRISDbits	set	3972
   191   000000                     _SSP2CON2bits	set	3802
   192   000000                     _SSP2CLKPPS	set	3612
   193   000000                     _SSP2DATPPS	set	3613
   194   000000                     _RC7PPS	set	3689
   195   000000                     _RE2PPS	set	3700
   196   000000                     _ANSELFbits	set	3764
   197   000000                     _TRISAbits	set	3969
   198   000000                     _TRISFbits	set	3974
   199   000000                     _PORTFbits	set	3982
   200   000000                     _TRISGbits	set	3975
   201   000000                     _TRISCbits	set	3971
   202   000000                     _TRISEbits	set	3973
   203   000000                     _SSP2BUF	set	3797
   204   000000                     _SSP2ADD	set	3798
   205   000000                     _SSP2CON1bits	set	3801
   206   000000                     _LATAbits	set	3961
   207   000000                     _LATGbits	set	3967
   208   000000                     _CCPR4H	set	3873
   209   000000                     _CCPR3H	set	3877
   210   000000                     _T2PR	set	4028
   211   000000                     _T2CONbits	set	4029
   212   000000                     _CCPR2H	set	4006
   213   000000                     _CCPR1H	set	4010
   214   000000                     _LATCbits	set	3963
   215   000000                     _LATEbits	set	3965
   216   000000                     _LATFbits	set	3966
   217   000000                     _RE4PPS	set	3702
   218   000000                     _RG6PPS	set	3720
   219   000000                     _RD5PPS	set	3695
   220   000000                     _ANSELDbits	set	3751
   221   000000                     _TMR0L	set	4051
   222   000000                     _TMR0H	set	4052
   223   000000                     _INTCONbits	set	4082
   224   000000                     _T2CLKCONbits	set	4031
   225   000000                     _T2HLTbits	set	4030
   226   000000                     _CCP1CONbits	set	4011
   227   000000                     _CCPTMRS0bits	set	4013
   228   000000                     _CCP2CONbits	set	4007
   229   000000                     _CCP3CONbits	set	3878
   230   000000                     _CCP4CONbits	set	3874
   231   000000                     _SSP2CON2	set	3802
   232   000000                     _SSP2STAT	set	3800
   233   000000                     _PIE0bits	set	3625
   234   000000                     _RD6PPS	set	3696
   235   000000                     _PIE2bits	set	3627
   236   000000                     _PIR0bits	set	3635
   237                           
   238                           ; #config settings
   239                           
   240                           	psect	cinit
   241   000C38                     __pcinit:
   242                           	callstack 0
   243   000C38                     start_initialization:
   244                           	callstack 0
   245   000C38                     __initialization:
   246                           	callstack 0
   247                           
   248                           ; Initialize objects allocated to BANK1 (12 bytes)
   249                           ; load TBLPTR registers with __pidataBANK1
   250   000C38  0E12               	movlw	low __pidataBANK1
   251   000C3A  6EF6               	movwf	tblptrl,c
   252   000C3C  0E11               	movlw	high __pidataBANK1
   253   000C3E  6EF7               	movwf	tblptrh,c
   254   000C40  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   255   000C42  6EF8               	movwf	tblptru,c
   256   000C44  EE01  F0DC         	lfsr	0,__pdataBANK1
   257   000C48  EE10 F00C          	lfsr	1,12
   258   000C4C                     copy_data0:
   259   000C4C  0009               	tblrd		*+
   260   000C4E  CFF5 FFEE          	movff	tablat,postinc0
   261   000C52  50E5               	movf	postdec1,w,c
   262   000C54  50E1               	movf	fsr1l,w,c
   263   000C56  E1FA               	bnz	copy_data0
   264                           
   265                           ; Initialize objects allocated to BANK0 (98 bytes)
   266                           ; load TBLPTR registers with __pidataBANK0
   267   000C58  0EA0               	movlw	low __pidataBANK0
   268   000C5A  6EF6               	movwf	tblptrl,c
   269   000C5C  0E0D               	movlw	high __pidataBANK0
   270   000C5E  6EF7               	movwf	tblptrh,c
   271   000C60  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   272   000C62  6EF8               	movwf	tblptru,c
   273   000C64  EE00  F060         	lfsr	0,__pdataBANK0
   274   000C68  EE10 F062          	lfsr	1,98
   275   000C6C                     copy_data1:
   276   000C6C  0009               	tblrd		*+
   277   000C6E  CFF5 FFEE          	movff	tablat,postinc0
   278   000C72  50E5               	movf	postdec1,w,c
   279   000C74  50E1               	movf	fsr1l,w,c
   280   000C76  E1FA               	bnz	copy_data1
   281                           
   282                           ; Initialize objects allocated to COMRAM (14 bytes)
   283                           ; load TBLPTR registers with __pidataCOMRAM
   284   000C78  0E04               	movlw	low __pidataCOMRAM
   285   000C7A  6EF6               	movwf	tblptrl,c
   286   000C7C  0E11               	movlw	high __pidataCOMRAM
   287   000C7E  6EF7               	movwf	tblptrh,c
   288   000C80  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   289   000C82  6EF8               	movwf	tblptru,c
   290   000C84  EE00  F04D         	lfsr	0,__pdataCOMRAM
   291   000C88  EE10 F00E          	lfsr	1,14
   292   000C8C                     copy_data2:
   293   000C8C  0009               	tblrd		*+
   294   000C8E  CFF5 FFEE          	movff	tablat,postinc0
   295   000C92  50E5               	movf	postdec1,w,c
   296   000C94  50E1               	movf	fsr1l,w,c
   297   000C96  E1FA               	bnz	copy_data2
   298                           
   299                           ; Clear objects allocated to BANK1 (220 bytes)
   300   000C98  EE01  F000         	lfsr	0,__pbssBANK1
   301   000C9C  0EDC               	movlw	220
   302   000C9E                     clear_0:
   303   000C9E  6AEE               	clrf	postinc0,c
   304   000CA0  06E8               	decf	wreg,f,c
   305   000CA2  E1FD               	bnz	clear_0
   306                           
   307                           ; Clear objects allocated to BANK0 (12 bytes)
   308   000CA4  EE00  F0EE         	lfsr	0,__pbssBANK0
   309   000CA8  0E0C               	movlw	12
   310   000CAA                     clear_1:
   311   000CAA  6AEE               	clrf	postinc0,c
   312   000CAC  06E8               	decf	wreg,f,c
   313   000CAE  E1FD               	bnz	clear_1
   314                           
   315                           ; Clear objects allocated to COMRAM (4 bytes)
   316   000CB0  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   317   000CB2  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   318   000CB4  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   319   000CB6  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   320   000CB8                     end_of_initialization:
   321                           	callstack 0
   322   000CB8                     __end_of__initialization:
   323                           	callstack 0
   324   000CB8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   325   000CBA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   326   000CBC  0100               	movlb	0
   327   000CBE  EF81  F004         	goto	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMRAM
   330   00005B                     __pbssCOMRAM:
   331                           	callstack 0
   332   00005B                     _index:
   333                           	callstack 0
   334   00005B                     	ds	2
   335   00005D                     _seconds:
   336                           	callstack 0
   337   00005D                     	ds	2
   338                           
   339                           	psect	dataCOMRAM
   340   00004D                     __pdataCOMRAM:
   341                           	callstack 0
   342   00004D                     _Black_setup:
   343                           	callstack 0
   344   00004D                     	ds	12
   345   000059                     _wall_coef:
   346                           	callstack 0
   347   000059                     	ds	2
   348                           
   349                           	psect	bssBANK0
   350   0000EE                     __pbssBANK0:
   351                           	callstack 0
   352   0000EE                     _RGB:
   353                           	callstack 0
   354   0000EE                     	ds	12
   355                           
   356                           	psect	dataBANK0
   357   000060                     __pdataBANK0:
   358                           	callstack 0
   359   000060                     _White_setup:
   360                           	callstack 0
   361   000060                     	ds	12
   362   00006C                     _Lightblue_rule:
   363                           	callstack 0
   364   00006C                     	ds	12
   365   000078                     _Orange_rule:
   366                           	callstack 0
   367   000078                     	ds	12
   368   000084                     _Pink_rule:
   369                           	callstack 0
   370   000084                     	ds	12
   371   000090                     _Yellow_rule:
   372                           	callstack 0
   373   000090                     	ds	12
   374   00009C                     _Blue_rule:
   375                           	callstack 0
   376   00009C                     	ds	12
   377   0000A8                     _Green_rule:
   378                           	callstack 0
   379   0000A8                     	ds	12
   380   0000B4                     _Red_rule:
   381                           	callstack 0
   382   0000B4                     	ds	12
   383   0000C0                     _wait_time:
   384                           	callstack 0
   385   0000C0                     	ds	2
   386                           
   387                           	psect	bssBANK1
   388   000100                     __pbssBANK1:
   389                           	callstack 0
   390   000100                     _Color_rules:
   391                           	callstack 0
   392   000100                     	ds	108
   393   00016C                     _timer_list:
   394                           	callstack 0
   395   00016C                     	ds	100
   396   0001D0                     _Black_rule:
   397                           	callstack 0
   398   0001D0                     	ds	12
   399                           
   400                           	psect	dataBANK1
   401   0001DC                     __pdataBANK1:
   402                           	callstack 0
   403   0001DC                     _White_rule:
   404                           	callstack 0
   405   0001DC                     	ds	12
   406                           
   407                           	psect	cstackBANK0
   408   0000C2                     __pcstackBANK0:
   409                           	callstack 0
   410   0000C2                     _get_color_code$2464:
   411                           	callstack 0
   412                           
   413                           ; 12 bytes @ 0x0
   414   0000C2                     	ds	12
   415   0000CE                     _get_color_code$458:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0xC
   419   0000CE                     	ds	4
   420   0000D2                     _get_color_code$459:
   421                           	callstack 0
   422                           
   423                           ; 4 bytes @ 0x10
   424   0000D2                     	ds	4
   425   0000D6                     _get_color_code$460:
   426                           	callstack 0
   427                           
   428                           ; 4 bytes @ 0x14
   429   0000D6                     	ds	4
   430   0000DA                     get_color_code@min_value:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x18
   434   0000DA                     	ds	2
   435   0000DC                     get_color_code@min_index:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x1A
   439   0000DC                     	ds	2
   440   0000DE                     get_color_code@value:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x1C
   444   0000DE                     	ds	2
   445   0000E0                     get_color_code@i:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x1E
   449   0000E0                     	ds	2
   450   0000E2                     get_color_code@NormalizedRGB:
   451                           	callstack 0
   452                           
   453                           ; 12 bytes @ 0x20
   454   0000E2                     	ds	12
   455                           
   456                           	psect	cstackCOMRAM
   457   000001                     __pcstackCOMRAM:
   458                           	callstack 0
   459   000001                     ??_I2C_2_Master_Idle:
   460   000001                     ?___wmul:
   461                           	callstack 0
   462   000001                     ?___lmul:
   463                           	callstack 0
   464   000001                     set_led_color@color:
   465                           	callstack 0
   466   000001                     initDCmotorsPWM@PWMperiod:
   467                           	callstack 0
   468   000001                     ___wmul@multiplier:
   469                           	callstack 0
   470   000001                     ___lmul@multiplier:
   471                           	callstack 0
   472                           
   473                           ; 4 bytes @ 0x0
   474   000001                     	ds	1
   475   000002                     ??_I2C_2_Master_Read:
   476   000002                     I2C_2_Master_Write@data_byte:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x1
   480   000002                     	ds	1
   481   000003                     color_writetoaddr@value:
   482                           	callstack 0
   483   000003                     I2C_2_Master_Read@ack:
   484                           	callstack 0
   485   000003                     ___wmul@multiplicand:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x2
   489   000003                     	ds	1
   490   000004                     color_writetoaddr@address:
   491                           	callstack 0
   492   000004                     I2C_2_Master_Read@tmp:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x3
   496   000004                     	ds	1
   497   000005                     ?_color_read_Red:
   498                           	callstack 0
   499   000005                     ?_color_read_Blue:
   500                           	callstack 0
   501   000005                     ?_color_read_Green:
   502                           	callstack 0
   503   000005                     ?_color_read_Clear:
   504                           	callstack 0
   505   000005                     ___wmul@product:
   506                           	callstack 0
   507   000005                     ___lmul@multiplicand:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x4
   511   000005                     	ds	2
   512   000007                     ??_color_read_Red:
   513   000007                     ??_color_read_Blue:
   514   000007                     ??_color_read_Green:
   515   000007                     ??_color_read_Clear:
   516   000007                     ?_get_color_distance:
   517                           	callstack 0
   518   000007                     ?___lwdiv:
   519                           	callstack 0
   520   000007                     ___lwdiv@dividend:
   521                           	callstack 0
   522   000007                     get_color_distance@color1:
   523                           	callstack 0
   524                           
   525                           ; 12 bytes @ 0x6
   526   000007                     	ds	2
   527   000009                     ___lwdiv@divisor:
   528                           	callstack 0
   529   000009                     ___lmul@product:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x8
   533   000009                     	ds	1
   534   00000A                     color_read_Red@tmp:
   535                           	callstack 0
   536   00000A                     color_read_Blue@tmp:
   537                           	callstack 0
   538   00000A                     color_read_Green@tmp:
   539                           	callstack 0
   540   00000A                     color_read_Clear@tmp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x9
   544   00000A                     	ds	1
   545   00000B                     ___lwdiv@quotient:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0xA
   549   00000B                     	ds	1
   550   00000C                     ??_calibrate_white:
   551   00000C                     ?_get_wall_presence:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xB
   555   00000C                     	ds	1
   556   00000D                     ?___lldiv:
   557                           	callstack 0
   558   00000D                     ___lwdiv@counter:
   559                           	callstack 0
   560   00000D                     ___lldiv@dividend:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0xC
   564   00000D                     	ds	1
   565   00000E                     ??_calibrate_black:
   566   00000E                     ??_get_wall_presence:
   567   00000E                     setMotorPWM@m:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0xD
   571   00000E                     	ds	2
   572   000010                     ??_setMotorPWM:
   573   000010                     calibrate_black@clear1:
   574                           	callstack 0
   575   000010                     get_wall_presence@clear1:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0xF
   579   000010                     	ds	1
   580   000011                     ___lldiv@divisor:
   581                           	callstack 0
   582                           
   583                           ; 4 bytes @ 0x10
   584   000011                     	ds	1
   585   000012                     setMotorPWM@posDuty:
   586                           	callstack 0
   587   000012                     calibrate_black@clear2:
   588                           	callstack 0
   589   000012                     get_wall_presence@clear2:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x11
   593   000012                     	ds	1
   594   000013                     setMotorPWM@negDuty:
   595                           	callstack 0
   596   000013                     get_color_distance@color2:
   597                           	callstack 0
   598                           
   599                           ; 12 bytes @ 0x12
   600   000013                     	ds	1
   601   000014                     ??_color_click_init:
   602   000014                     stop@mL:
   603                           	callstack 0
   604   000014                     moveForward@mL:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x13
   608   000014                     	ds	1
   609   000015                     ___lldiv@quotient:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x14
   613   000015                     	ds	1
   614   000016                     stop@mR:
   615                           	callstack 0
   616   000016                     moveForward@mR:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x15
   620   000016                     	ds	2
   621   000018                     
   622                           ; 1 bytes @ 0x17
   623   000018                     	ds	1
   624   000019                     ___lldiv@counter:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x18
   628   000019                     	ds	6
   629   00001F                     ??_get_color_distance:
   630                           
   631                           ; 1 bytes @ 0x1E
   632   00001F                     	ds	4
   633   000023                     _get_color_distance$417:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x22
   637   000023                     	ds	4
   638   000027                     _get_color_distance$419:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x26
   642   000027                     	ds	4
   643   00002B                     _get_color_distance$421:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x2A
   647   00002B                     	ds	4
   648   00002F                     get_color_distance@R_offset:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x2E
   652   00002F                     	ds	2
   653   000031                     get_color_distance@G_offset:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x30
   657   000031                     	ds	2
   658   000033                     get_color_distance@B_offset:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x32
   662   000033                     	ds	2
   663   000035                     ?_get_color_code:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x34
   667   000035                     	ds	2
   668   000037                     ??_get_color_code:
   669                           
   670                           ; 1 bytes @ 0x36
   671   000037                     	ds	2
   672   000039                     main@color_code:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x38
   676   000039                     	ds	2
   677   00003B                     main@motorL:
   678                           	callstack 0
   679                           
   680                           ; 9 bytes @ 0x3A
   681   00003B                     	ds	9
   682   000044                     main@motorR:
   683                           	callstack 0
   684                           
   685                           ; 9 bytes @ 0x43
   686   000044                     	ds	9
   687                           
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   690 ;;
   691 ;; *************** function _main *****************
   692 ;; Defined at:
   693 ;;		line 17 in file "main.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  color_code      2   56[COMRAM] unsigned int 
   698 ;;  motorR          9   67[COMRAM] struct DC_motor
   699 ;;  motorL          9   58[COMRAM] struct DC_motor
   700 ;;  PWMcycle        2    0        unsigned int 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   711 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   713 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   714 ;;Total ram usage:       20 bytes
   715 ;; Hardware stack levels required when called: 7
   716 ;; This function calls:
   717 ;;		_Interrupts_init
   718 ;;		_Timer0_init
   719 ;;		_color_click_init
   720 ;;		_get_color_code
   721 ;;		_get_wall_presence
   722 ;;		_initDCmotorsPWM
   723 ;;		_moveForward
   724 ;;		_stop
   725 ;; This function is called by:
   726 ;;		Startup code after reset
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text0
   731   000902                     __ptext0:
   732                           	callstack 0
   733   000902                     _main:
   734                           	callstack 24
   735   000902                     
   736                           ;main.c: 18:     Timer0_init();
   737   000902  EC72  F008         	call	_Timer0_init	;wreg free
   738   000906                     
   739                           ;main.c: 19:     Interrupts_init();
   740   000906  EC95  F008         	call	_Interrupts_init	;wreg free
   741   00090A                     
   742                           ;main.c: 20:     initDCmotorsPWM(99);
   743   00090A  0E00               	movlw	0
   744   00090C  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   745   00090E  0E63               	movlw	99
   746   000910  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   747   000912  ECD4  F005         	call	_initDCmotorsPWM	;wreg free
   748   000916                     
   749                           ;main.c: 22:     color_click_init();
   750   000916  EC54  F003         	call	_color_click_init	;wreg free
   751   00091A                     
   752                           ;main.c: 24:     ANSELFbits.ANSELF2 = 0;
   753   00091A  010E               	movlb	14	; () banked
   754   00091C  95B4               	bcf	180,2,b	;volatile
   755   00091E                     
   756                           ; BSR set to: 14
   757                           ;main.c: 25:     TRISFbits.TRISF2 = 1;
   758   00091E  8486               	bsf	134,2,c	;volatile
   759   000920                     
   760                           ; BSR set to: 14
   761                           ;main.c: 26:     struct DC_motor motorL, motorR;;main.c: 27:     motorL.power=0;
   762   000920  0E00               	movlw	0
   763   000922  6E3B               	movwf	main@motorL^0,c
   764   000924                     
   765                           ; BSR set to: 14
   766                           ;main.c: 28:     motorL.direction=1;
   767   000924  0E01               	movlw	1
   768   000926  6E3C               	movwf	(main@motorL+1)^0,c
   769   000928                     
   770                           ; BSR set to: 14
   771                           ;main.c: 29:     motorL.brakemode=1;
   772   000928  0E01               	movlw	1
   773   00092A  6E3D               	movwf	(main@motorL+2)^0,c
   774   00092C                     
   775                           ; BSR set to: 14
   776                           ;main.c: 30:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   777   00092C  0EAA               	movlw	170
   778   00092E  6E40               	movwf	(main@motorL+5)^0,c
   779   000930  0E0F               	movlw	15
   780   000932  6E41               	movwf	(main@motorL+6)^0,c
   781   000934                     
   782                           ; BSR set to: 14
   783                           ;main.c: 31:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   784   000934  0EA6               	movlw	166
   785   000936  6E42               	movwf	(main@motorL+7)^0,c
   786   000938  0E0F               	movlw	15
   787   00093A  6E43               	movwf	(main@motorL+8)^0,c
   788   00093C                     
   789                           ; BSR set to: 14
   790                           ;main.c: 32:     motorL.PWMperiod=PWMcycle;
   791   00093C  0E00               	movlw	0
   792   00093E  6E3F               	movwf	(main@motorL+4)^0,c
   793   000940  0E63               	movlw	99
   794   000942  6E3E               	movwf	(main@motorL+3)^0,c
   795   000944                     
   796                           ; BSR set to: 14
   797                           ;main.c: 34:     motorR.power=0;
   798   000944  0E00               	movlw	0
   799   000946  6E44               	movwf	main@motorR^0,c
   800   000948                     
   801                           ; BSR set to: 14
   802                           ;main.c: 35:     motorR.direction=1;
   803   000948  0E01               	movlw	1
   804   00094A  6E45               	movwf	(main@motorR+1)^0,c
   805   00094C                     
   806                           ; BSR set to: 14
   807                           ;main.c: 36:     motorR.brakemode=1;
   808   00094C  0E01               	movlw	1
   809   00094E  6E46               	movwf	(main@motorR+2)^0,c
   810   000950                     
   811                           ; BSR set to: 14
   812                           ;main.c: 37:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   813   000950  0E25               	movlw	37
   814   000952  6E49               	movwf	(main@motorR+5)^0,c
   815   000954  0E0F               	movlw	15
   816   000956  6E4A               	movwf	(main@motorR+6)^0,c
   817   000958                     
   818                           ; BSR set to: 14
   819                           ;main.c: 38:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   820   000958  0E21               	movlw	33
   821   00095A  6E4B               	movwf	(main@motorR+7)^0,c
   822   00095C  0E0F               	movlw	15
   823   00095E  6E4C               	movwf	(main@motorR+8)^0,c
   824   000960                     
   825                           ; BSR set to: 14
   826                           ;main.c: 39:     motorR.PWMperiod=PWMcycle;
   827   000960  0E00               	movlw	0
   828   000962  6E48               	movwf	(main@motorR+4)^0,c
   829   000964  0E63               	movlw	99
   830   000966  6E47               	movwf	(main@motorR+3)^0,c
   831   000968                     l2711:
   832                           
   833                           ;main.c: 41:     moveForward(&motorL,&motorR);
   834   000968  0E3B               	movlw	low main@motorL
   835   00096A  6E14               	movwf	moveForward@mL^0,c
   836   00096C  0E00               	movlw	high main@motorL
   837   00096E  6E15               	movwf	(moveForward@mL+1)^0,c
   838   000970  0E44               	movlw	low main@motorR
   839   000972  6E16               	movwf	moveForward@mR^0,c
   840   000974  0E00               	movlw	high main@motorR
   841   000976  6E17               	movwf	(moveForward@mR+1)^0,c
   842   000978  EC01  F007         	call	_moveForward	;wreg free
   843   00097C                     l2713:
   844                           
   845                           ;main.c: 43:         if(get_wall_presence() == 1){
   846   00097C  EC86  F005         	call	_get_wall_presence	;wreg free
   847   000980  040C               	decf	?_get_wall_presence^0,w,c
   848   000982  100D               	iorwf	(?_get_wall_presence+1)^0,w,c
   849   000984  A4D8               	btfss	status,2,c
   850   000986  EFC7  F004         	goto	u1711
   851   00098A  EFC9  F004         	goto	u1710
   852   00098E                     u1711:
   853   00098E  EFBE  F004         	goto	l2713
   854   000992                     u1710:
   855   000992                     
   856                           ;main.c: 44:             stop(&motorL,&motorR);
   857   000992  0E3B               	movlw	low main@motorL
   858   000994  6E14               	movwf	stop@mL^0,c
   859   000996  0E00               	movlw	high main@motorL
   860   000998  6E15               	movwf	(stop@mL+1)^0,c
   861   00099A  0E44               	movlw	low main@motorR
   862   00099C  6E16               	movwf	stop@mR^0,c
   863   00099E  0E00               	movlw	high main@motorR
   864   0009A0  6E17               	movwf	(stop@mR+1)^0,c
   865   0009A2  EC0D  F008         	call	_stop	;wreg free
   866   0009A6                     
   867                           ;main.c: 46:             unsigned int color_code = get_color_code();
   868   0009A6  EC19  F000         	call	_get_color_code	;wreg free
   869   0009AA  C035  F039         	movff	?_get_color_code,main@color_code
   870   0009AE  C036  F03A         	movff	?_get_color_code+1,main@color_code+1
   871   0009B2                     
   872                           ;main.c: 47:             color_code += 1;
   873   0009B2  4A39               	infsnz	main@color_code^0,f,c
   874   0009B4  2A3A               	incf	(main@color_code+1)^0,f,c
   875   0009B6  EFB4  F004         	goto	l2711
   876   0009BA  EF17  F000         	goto	start
   877   0009BE                     __end_of_main:
   878                           	callstack 0
   879                           
   880 ;; *************** function _stop *****************
   881 ;; Defined at:
   882 ;;		line 91 in file "dc_motor.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  mL              2   19[COMRAM] PTR struct DC_motor
   885 ;;		 -> main@motorL(9), 
   886 ;;  mR              2   21[COMRAM] PTR struct DC_motor
   887 ;;		 -> main@motorR(9), 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   903 ;;Total ram usage:        4 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 4
   906 ;; This function calls:
   907 ;;		_setMotorPWM
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text1
   914   00101A                     __ptext1:
   915                           	callstack 0
   916   00101A                     _stop:
   917                           	callstack 26
   918   00101A                     
   919                           ;dc_motor.c: 91: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 92: {;d
      +                          c_motor.c: 93:     (*mL).power=0;
   920   00101A  C014  FFD9         	movff	stop@mL,fsr2l
   921   00101E  C015  FFDA         	movff	stop@mL+1,fsr2h
   922   001022  0E00               	movlw	0
   923   001024  6EDF               	movwf	indf2,c
   924                           
   925                           ;dc_motor.c: 94:     (*mR).power=0;
   926   001026  C016  FFD9         	movff	stop@mR,fsr2l
   927   00102A  C017  FFDA         	movff	stop@mR+1,fsr2h
   928   00102E  0E00               	movlw	0
   929   001030  6EDF               	movwf	indf2,c
   930   001032                     
   931                           ;dc_motor.c: 95:     setMotorPWM(mL);
   932   001032  C014  F00E         	movff	stop@mL,setMotorPWM@m
   933   001036  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
   934   00103A  ECE8  F001         	call	_setMotorPWM	;wreg free
   935   00103E                     
   936                           ;dc_motor.c: 96:     setMotorPWM(mR);
   937   00103E  C016  F00E         	movff	stop@mR,setMotorPWM@m
   938   001042  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
   939   001046  ECE8  F001         	call	_setMotorPWM	;wreg free
   940   00104A  0012               	return		;funcret
   941   00104C                     __end_of_stop:
   942                           	callstack 0
   943                           
   944 ;; *************** function _moveForward *****************
   945 ;; Defined at:
   946 ;;		line 283 in file "dc_motor.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  mL              2   19[COMRAM] PTR struct DC_motor
   949 ;;		 -> main@motorL(9), 
   950 ;;  mR              2   21[COMRAM] PTR struct DC_motor
   951 ;;		 -> main@motorR(9), 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   966 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   967 ;;Total ram usage:        4 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 4
   970 ;; This function calls:
   971 ;;		_setMotorPWM
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text2
   978   000E02                     __ptext2:
   979                           	callstack 0
   980   000E02                     _moveForward:
   981                           	callstack 26
   982   000E02                     
   983                           ;dc_motor.c: 283: void moveForward(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           284: {;dc_motor.c: 285:     (*mL).direction=-1;
   984   000E02  EE20 F001          	lfsr	2,1
   985   000E06  5014               	movf	moveForward@mL^0,w,c
   986   000E08  26D9               	addwf	fsr2l,f,c
   987   000E0A  5015               	movf	(moveForward@mL+1)^0,w,c
   988   000E0C  22DA               	addwfc	fsr2h,f,c
   989   000E0E  0EFF               	movlw	255
   990   000E10  6EDF               	movwf	indf2,c
   991                           
   992                           ;dc_motor.c: 286:     (*mR).direction=-1;
   993   000E12  EE20 F001          	lfsr	2,1
   994   000E16  5016               	movf	moveForward@mR^0,w,c
   995   000E18  26D9               	addwf	fsr2l,f,c
   996   000E1A  5017               	movf	(moveForward@mR+1)^0,w,c
   997   000E1C  22DA               	addwfc	fsr2h,f,c
   998   000E1E  0EFF               	movlw	255
   999   000E20  6EDF               	movwf	indf2,c
  1000   000E22                     
  1001                           ;dc_motor.c: 287:     (*mL).power=50;
  1002   000E22  C014  FFD9         	movff	moveForward@mL,fsr2l
  1003   000E26  C015  FFDA         	movff	moveForward@mL+1,fsr2h
  1004   000E2A  0E32               	movlw	50
  1005   000E2C  6EDF               	movwf	indf2,c
  1006   000E2E                     
  1007                           ;dc_motor.c: 288:     (*mR).power=50;
  1008   000E2E  C016  FFD9         	movff	moveForward@mR,fsr2l
  1009   000E32  C017  FFDA         	movff	moveForward@mR+1,fsr2h
  1010   000E36  0E32               	movlw	50
  1011   000E38  6EDF               	movwf	indf2,c
  1012   000E3A                     
  1013                           ;dc_motor.c: 289:     setMotorPWM(mL);
  1014   000E3A  C014  F00E         	movff	moveForward@mL,setMotorPWM@m
  1015   000E3E  C015  F00F         	movff	moveForward@mL+1,setMotorPWM@m+1
  1016   000E42  ECE8  F001         	call	_setMotorPWM	;wreg free
  1017   000E46                     
  1018                           ;dc_motor.c: 290:     setMotorPWM(mR);
  1019   000E46  C016  F00E         	movff	moveForward@mR,setMotorPWM@m
  1020   000E4A  C017  F00F         	movff	moveForward@mR+1,setMotorPWM@m+1
  1021   000E4E  ECE8  F001         	call	_setMotorPWM	;wreg free
  1022   000E52  0012               	return		;funcret
  1023   000E54                     __end_of_moveForward:
  1024                           	callstack 0
  1025                           
  1026 ;; *************** function _setMotorPWM *****************
  1027 ;; Defined at:
  1028 ;;		line 68 in file "dc_motor.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  m               2   13[COMRAM] PTR struct DC_motor
  1031 ;;		 -> main@motorR(9), main@motorL(9), RobotMovement@motorR(9), RobotMovement@motorL(9), 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  negDuty         1   18[COMRAM] unsigned char 
  1034 ;;  posDuty         1   17[COMRAM] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1047 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1048 ;;Total ram usage:        6 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 3
  1051 ;; This function calls:
  1052 ;;		___lwdiv
  1053 ;;		___wmul
  1054 ;; This function is called by:
  1055 ;;		_stop
  1056 ;;		_moveForward
  1057 ;;		_turnLeft
  1058 ;;		_turnRight
  1059 ;;		_turnLeftLong
  1060 ;;		_turnRightLong
  1061 ;;		_fullSpeedAhead
  1062 ;;		_TimedfullSpeedAhead
  1063 ;;		_moveBack
  1064 ;;		_Calibrate
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text3
  1069   0003D0                     __ptext3:
  1070                           	callstack 0
  1071   0003D0                     _setMotorPWM:
  1072                           	callstack 26
  1073   0003D0                     
  1074                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  1075   0003D0  EE20 F002          	lfsr	2,2
  1076   0003D4  500E               	movf	setMotorPWM@m^0,w,c
  1077   0003D6  26D9               	addwf	fsr2l,f,c
  1078   0003D8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1079   0003DA  22DA               	addwfc	fsr2h,f,c
  1080   0003DC  50DF               	movf	indf2,w,c
  1081   0003DE  B4D8               	btfsc	status,2,c
  1082   0003E0  EFF4  F001         	goto	u1181
  1083   0003E4  EFF6  F001         	goto	u1180
  1084   0003E8                     u1181:
  1085   0003E8  EF2A  F002         	goto	l2201
  1086   0003EC                     u1180:
  1087   0003EC                     
  1088                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  1089   0003EC  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  1090   0003F0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1091   0003F4  50DF               	movf	indf2,w,c
  1092   0003F6  6E10               	movwf	??_setMotorPWM^0,c
  1093   0003F8  5010               	movf	??_setMotorPWM^0,w,c
  1094   0003FA  6E01               	movwf	___wmul@multiplier^0,c
  1095   0003FC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1096   0003FE  EE20 F003          	lfsr	2,3
  1097   000402  500E               	movf	setMotorPWM@m^0,w,c
  1098   000404  26D9               	addwf	fsr2l,f,c
  1099   000406  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1100   000408  22DA               	addwfc	fsr2h,f,c
  1101   00040A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1102   00040E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1103   000412  EC4F  F008         	call	___wmul	;wreg free
  1104   000416  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1105   00041A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1106   00041E  0E00               	movlw	0
  1107   000420  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1108   000422  0E64               	movlw	100
  1109   000424  6E09               	movwf	___lwdiv@divisor^0,c
  1110   000426  EC61  F006         	call	___lwdiv	;wreg free
  1111   00042A  EE20 F003          	lfsr	2,3
  1112   00042E  500E               	movf	setMotorPWM@m^0,w,c
  1113   000430  26D9               	addwf	fsr2l,f,c
  1114   000432  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1115   000434  22DA               	addwfc	fsr2h,f,c
  1116   000436  50DF               	movf	indf2,w,c
  1117   000438  6E11               	movwf	(??_setMotorPWM+1)^0,c
  1118   00043A  5007               	movf	?___lwdiv^0,w,c
  1119   00043C  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  1120   00043E  6E12               	movwf	setMotorPWM@posDuty^0,c
  1121   000440                     
  1122                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  1123   000440  EE20 F003          	lfsr	2,3
  1124   000444  500E               	movf	setMotorPWM@m^0,w,c
  1125   000446  26D9               	addwf	fsr2l,f,c
  1126   000448  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1127   00044A  22DA               	addwfc	fsr2h,f,c
  1128   00044C  50DF               	movf	indf2,w,c
  1129   00044E  6E13               	movwf	setMotorPWM@negDuty^0,c
  1130                           
  1131                           ;dc_motor.c: 75:     }
  1132   000450  EF4D  F002         	goto	l2205
  1133   000454                     l2201:
  1134                           
  1135                           ;dc_motor.c: 77:         posDuty=0;
  1136   000454  0E00               	movlw	0
  1137   000456  6E12               	movwf	setMotorPWM@posDuty^0,c
  1138   000458                     
  1139                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  1140   000458  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  1141   00045C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1142   000460  50DF               	movf	indf2,w,c
  1143   000462  6E10               	movwf	??_setMotorPWM^0,c
  1144   000464  5010               	movf	??_setMotorPWM^0,w,c
  1145   000466  6E01               	movwf	___wmul@multiplier^0,c
  1146   000468  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1147   00046A  EE20 F003          	lfsr	2,3
  1148   00046E  500E               	movf	setMotorPWM@m^0,w,c
  1149   000470  26D9               	addwf	fsr2l,f,c
  1150   000472  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1151   000474  22DA               	addwfc	fsr2h,f,c
  1152   000476  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1153   00047A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1154   00047E  EC4F  F008         	call	___wmul	;wreg free
  1155   000482  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1156   000486  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1157   00048A  0E00               	movlw	0
  1158   00048C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1159   00048E  0E64               	movlw	100
  1160   000490  6E09               	movwf	___lwdiv@divisor^0,c
  1161   000492  EC61  F006         	call	___lwdiv	;wreg free
  1162   000496  5007               	movf	?___lwdiv^0,w,c
  1163   000498  6E13               	movwf	setMotorPWM@negDuty^0,c
  1164   00049A                     l2205:
  1165                           
  1166                           ;dc_motor.c: 81:     if (m->direction) {
  1167   00049A  EE20 F001          	lfsr	2,1
  1168   00049E  500E               	movf	setMotorPWM@m^0,w,c
  1169   0004A0  26D9               	addwf	fsr2l,f,c
  1170   0004A2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1171   0004A4  22DA               	addwfc	fsr2h,f,c
  1172   0004A6  50DF               	movf	indf2,w,c
  1173   0004A8  B4D8               	btfsc	status,2,c
  1174   0004AA  EF59  F002         	goto	u1191
  1175   0004AE  EF5B  F002         	goto	u1190
  1176   0004B2                     u1191:
  1177   0004B2  EF7D  F002         	goto	l2209
  1178   0004B6                     u1190:
  1179   0004B6                     
  1180                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  1181   0004B6  EE20 F005          	lfsr	2,5
  1182   0004BA  500E               	movf	setMotorPWM@m^0,w,c
  1183   0004BC  26D9               	addwf	fsr2l,f,c
  1184   0004BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1185   0004C0  22DA               	addwfc	fsr2h,f,c
  1186   0004C2  CFDE F010          	movff	postinc2,??_setMotorPWM
  1187   0004C6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1188   0004CA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1189   0004CE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1190   0004D2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1191                           
  1192                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  1193   0004D6  EE20 F007          	lfsr	2,7
  1194   0004DA  500E               	movf	setMotorPWM@m^0,w,c
  1195   0004DC  26D9               	addwf	fsr2l,f,c
  1196   0004DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1197   0004E0  22DA               	addwfc	fsr2h,f,c
  1198   0004E2  CFDE F010          	movff	postinc2,??_setMotorPWM
  1199   0004E6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1200   0004EA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1201   0004EE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1202   0004F2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1203                           
  1204                           ;dc_motor.c: 84:     } else {
  1205   0004F6  EF9D  F002         	goto	l211
  1206   0004FA                     l2209:
  1207                           
  1208                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  1209   0004FA  EE20 F005          	lfsr	2,5
  1210   0004FE  500E               	movf	setMotorPWM@m^0,w,c
  1211   000500  26D9               	addwf	fsr2l,f,c
  1212   000502  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1213   000504  22DA               	addwfc	fsr2h,f,c
  1214   000506  CFDE F010          	movff	postinc2,??_setMotorPWM
  1215   00050A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1216   00050E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1217   000512  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1218   000516  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1219                           
  1220                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  1221   00051A  EE20 F007          	lfsr	2,7
  1222   00051E  500E               	movf	setMotorPWM@m^0,w,c
  1223   000520  26D9               	addwf	fsr2l,f,c
  1224   000522  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1225   000524  22DA               	addwfc	fsr2h,f,c
  1226   000526  CFDE F010          	movff	postinc2,??_setMotorPWM
  1227   00052A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1228   00052E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1229   000532  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1230   000536  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1231   00053A                     l211:
  1232   00053A  0012               	return		;funcret
  1233   00053C                     __end_of_setMotorPWM:
  1234                           	callstack 0
  1235                           
  1236 ;; *************** function _initDCmotorsPWM *****************
  1237 ;; Defined at:
  1238 ;;		line 8 in file "dc_motor.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  PWMperiod       2    0[COMRAM] int 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, status,2
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1256 ;;Total ram usage:        2 bytes
  1257 ;; Hardware stack levels used: 1
  1258 ;; Hardware stack levels required when called: 2
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text4
  1267   000BA8                     __ptext4:
  1268                           	callstack 0
  1269   000BA8                     _initDCmotorsPWM:
  1270                           	callstack 28
  1271   000BA8                     
  1272                           ;dc_motor.c: 10:     TRISEbits.TRISE2=0;
  1273   000BA8  9485               	bcf	133,2,c	;volatile
  1274                           
  1275                           ;dc_motor.c: 11:     TRISCbits.TRISC7=0;
  1276   000BAA  9E83               	bcf	131,7,c	;volatile
  1277                           
  1278                           ;dc_motor.c: 12:     TRISGbits.TRISG6=0;
  1279   000BAC  9C87               	bcf	135,6,c	;volatile
  1280                           
  1281                           ;dc_motor.c: 13:     TRISEbits.TRISE4=0;
  1282   000BAE  9885               	bcf	133,4,c	;volatile
  1283                           
  1284                           ;dc_motor.c: 15:     LATEbits.LATE2=0;
  1285   000BB0  947D               	bcf	125,2,c	;volatile
  1286                           
  1287                           ;dc_motor.c: 16:     LATCbits.LATC7=0;
  1288   000BB2  9E7B               	bcf	123,7,c	;volatile
  1289                           
  1290                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  1291   000BB4  9C7F               	bcf	127,6,c	;volatile
  1292                           
  1293                           ;dc_motor.c: 18:     LATEbits.LATE4=0;
  1294   000BB6  987D               	bcf	125,4,c	;volatile
  1295   000BB8                     
  1296                           ;dc_motor.c: 21:     RE2PPS=0x05;
  1297   000BB8  0E05               	movlw	5
  1298   000BBA  010E               	movlb	14	; () banked
  1299   000BBC  6F74               	movwf	116,b	;volatile
  1300                           
  1301                           ;dc_motor.c: 22:     RE4PPS=0x06;
  1302   000BBE  0E06               	movlw	6
  1303   000BC0  6F76               	movwf	118,b	;volatile
  1304                           
  1305                           ;dc_motor.c: 23:     RC7PPS=0x07;
  1306   000BC2  0E07               	movlw	7
  1307   000BC4  6F69               	movwf	105,b	;volatile
  1308                           
  1309                           ;dc_motor.c: 24:     RG6PPS=0x08;
  1310   000BC6  0E08               	movlw	8
  1311   000BC8  6F88               	movwf	136,b	;volatile
  1312                           
  1313                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b100;
  1314   000BCA  50BD               	movf	189,w,c	;volatile
  1315   000BCC  0B8F               	andlw	-113
  1316   000BCE  0940               	iorlw	64
  1317   000BD0  6EBD               	movwf	189,c	;volatile
  1318                           
  1319                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  1320   000BD2  0EE0               	movlw	-32
  1321   000BD4  16BE               	andwf	190,f,c	;volatile
  1322                           
  1323                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  1324   000BD6  50BF               	movf	191,w,c	;volatile
  1325   000BD8  0BF0               	andlw	-16
  1326   000BDA  0901               	iorlw	1
  1327   000BDC  6EBF               	movwf	191,c	;volatile
  1328                           
  1329                           ;dc_motor.c: 33:     T2PR=99;
  1330   000BDE  0E63               	movlw	99
  1331   000BE0  6EBC               	movwf	188,c	;volatile
  1332   000BE2                     
  1333                           ; BSR set to: 14
  1334                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  1335   000BE2  8EBD               	bsf	189,7,c	;volatile
  1336                           
  1337                           ;dc_motor.c: 38:     CCPR1H=0;
  1338   000BE4  0E00               	movlw	0
  1339   000BE6  6EAA               	movwf	170,c	;volatile
  1340                           
  1341                           ;dc_motor.c: 39:     CCPR2H=0;
  1342   000BE8  0E00               	movlw	0
  1343   000BEA  6EA6               	movwf	166,c	;volatile
  1344                           
  1345                           ;dc_motor.c: 40:     CCPR3H=0;
  1346   000BEC  0E00               	movlw	0
  1347   000BEE  010F               	movlb	15	; () banked
  1348   000BF0  6F25               	movwf	37,b	;volatile
  1349                           
  1350                           ;dc_motor.c: 41:     CCPR4H=0;
  1351   000BF2  0E00               	movlw	0
  1352   000BF4  6F21               	movwf	33,b	;volatile
  1353                           
  1354                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  1355   000BF6  0EFC               	movlw	-4
  1356   000BF8  16AD               	andwf	173,f,c	;volatile
  1357                           
  1358                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  1359   000BFA  0EF3               	movlw	-13
  1360   000BFC  16AD               	andwf	173,f,c	;volatile
  1361                           
  1362                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  1363   000BFE  0ECF               	movlw	-49
  1364   000C00  16AD               	andwf	173,f,c	;volatile
  1365                           
  1366                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  1367   000C02  0E3F               	movlw	-193
  1368   000C04  16AD               	andwf	173,f,c	;volatile
  1369   000C06                     
  1370                           ; BSR set to: 15
  1371                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  1372   000C06  88AB               	bsf	171,4,c	;volatile
  1373                           
  1374                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  1375   000C08  50AB               	movf	171,w,c	;volatile
  1376   000C0A  0BF0               	andlw	-16
  1377   000C0C  090C               	iorlw	12
  1378   000C0E  6EAB               	movwf	171,c	;volatile
  1379   000C10                     
  1380                           ; BSR set to: 15
  1381                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  1382   000C10  8EAB               	bsf	171,7,c	;volatile
  1383   000C12                     
  1384                           ; BSR set to: 15
  1385                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  1386   000C12  88A7               	bsf	167,4,c	;volatile
  1387                           
  1388                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  1389   000C14  50A7               	movf	167,w,c	;volatile
  1390   000C16  0BF0               	andlw	-16
  1391   000C18  090C               	iorlw	12
  1392   000C1A  6EA7               	movwf	167,c	;volatile
  1393   000C1C                     
  1394                           ; BSR set to: 15
  1395                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  1396   000C1C  8EA7               	bsf	167,7,c	;volatile
  1397   000C1E                     
  1398                           ; BSR set to: 15
  1399                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  1400   000C1E  8926               	bsf	38,4,b	;volatile
  1401                           
  1402                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  1403   000C20  5126               	movf	38,w,b	;volatile
  1404   000C22  0BF0               	andlw	-16
  1405   000C24  090C               	iorlw	12
  1406   000C26  6F26               	movwf	38,b	;volatile
  1407   000C28                     
  1408                           ; BSR set to: 15
  1409                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  1410   000C28  8F26               	bsf	38,7,b	;volatile
  1411   000C2A                     
  1412                           ; BSR set to: 15
  1413                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  1414   000C2A  8922               	bsf	34,4,b	;volatile
  1415                           
  1416                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  1417   000C2C  5122               	movf	34,w,b	;volatile
  1418   000C2E  0BF0               	andlw	-16
  1419   000C30  090C               	iorlw	12
  1420   000C32  6F22               	movwf	34,b	;volatile
  1421   000C34                     
  1422                           ; BSR set to: 15
  1423                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  1424   000C34  8F22               	bsf	34,7,b	;volatile
  1425   000C36                     
  1426                           ; BSR set to: 15
  1427   000C36  0012               	return		;funcret
  1428   000C38                     __end_of_initDCmotorsPWM:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _get_wall_presence *****************
  1432 ;; Defined at:
  1433 ;;		line 242 in file "color.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  clear2          2   17[COMRAM] unsigned int 
  1438 ;;  clear1          2   15[COMRAM] unsigned int 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  2   11[COMRAM] unsigned int 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1449 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;Total ram usage:        8 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 5
  1455 ;; This function calls:
  1456 ;;		___wmul
  1457 ;;		_color_read_Clear
  1458 ;;		_set_led_color
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text5
  1465   000B0C                     __ptext5:
  1466                           	callstack 0
  1467   000B0C                     _get_wall_presence:
  1468                           	callstack 25
  1469   000B0C                     
  1470                           ;color.c: 243:     set_led_color(0b000);
  1471   000B0C  0E00               	movlw	0
  1472   000B0E  6E02               	movwf	(set_led_color@color+1)^0,c
  1473   000B10  0E00               	movlw	0
  1474   000B12  6E01               	movwf	set_led_color@color^0,c
  1475   000B14  ECCA  F007         	call	_set_led_color	;wreg free
  1476   000B18                     
  1477                           ;color.c: 244:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1478   000B18  0E12               	movlw	18
  1479   000B1A  6E0F               	movwf	(??_get_wall_presence+1)^0,c
  1480   000B1C  0EDC               	movlw	220
  1481   000B1E  6E0E               	movwf	??_get_wall_presence^0,c
  1482   000B20  0E60               	movlw	96
  1483   000B22                     u2087:
  1484   000B22  2EE8               	decfsz	wreg,f,c
  1485   000B24  D7FE               	bra	u2087
  1486   000B26  2E0E               	decfsz	??_get_wall_presence^0,f,c
  1487   000B28  D7FC               	bra	u2087
  1488   000B2A  2E0F               	decfsz	(??_get_wall_presence+1)^0,f,c
  1489   000B2C  D7FA               	bra	u2087
  1490   000B2E                     
  1491                           ;color.c: 245:     unsigned int clear1 = color_read_Clear();
  1492   000B2E  EC7A  F007         	call	_color_read_Clear	;wreg free
  1493   000B32  C005  F010         	movff	?_color_read_Clear,get_wall_presence@clear1
  1494   000B36  C006  F011         	movff	?_color_read_Clear+1,get_wall_presence@clear1+1
  1495   000B3A                     
  1496                           ;color.c: 246:     set_led_color(0b111);
  1497   000B3A  0E00               	movlw	0
  1498   000B3C  6E02               	movwf	(set_led_color@color+1)^0,c
  1499   000B3E  0E07               	movlw	7
  1500   000B40  6E01               	movwf	set_led_color@color^0,c
  1501   000B42  ECCA  F007         	call	_set_led_color	;wreg free
  1502   000B46                     
  1503                           ;color.c: 247:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1504   000B46  0E12               	movlw	18
  1505   000B48  6E0F               	movwf	(??_get_wall_presence+1)^0,c
  1506   000B4A  0EDC               	movlw	220
  1507   000B4C  6E0E               	movwf	??_get_wall_presence^0,c
  1508   000B4E  0E60               	movlw	96
  1509   000B50                     u2097:
  1510   000B50  2EE8               	decfsz	wreg,f,c
  1511   000B52  D7FE               	bra	u2097
  1512   000B54  2E0E               	decfsz	??_get_wall_presence^0,f,c
  1513   000B56  D7FC               	bra	u2097
  1514   000B58  2E0F               	decfsz	(??_get_wall_presence+1)^0,f,c
  1515   000B5A  D7FA               	bra	u2097
  1516                           
  1517                           ;color.c: 248:     unsigned int clear2 = color_read_Clear();
  1518   000B5C  EC7A  F007         	call	_color_read_Clear	;wreg free
  1519   000B60  C005  F012         	movff	?_color_read_Clear,get_wall_presence@clear2
  1520   000B64  C006  F013         	movff	?_color_read_Clear+1,get_wall_presence@clear2+1
  1521   000B68                     
  1522                           ;color.c: 249:     set_led_color(0b000);
  1523   000B68  0E00               	movlw	0
  1524   000B6A  6E02               	movwf	(set_led_color@color+1)^0,c
  1525   000B6C  0E00               	movlw	0
  1526   000B6E  6E01               	movwf	set_led_color@color^0,c
  1527   000B70  ECCA  F007         	call	_set_led_color	;wreg free
  1528   000B74                     
  1529                           ;color.c: 250:     return clear2 >= clear1*wall_coef;
  1530   000B74  C010  F001         	movff	get_wall_presence@clear1,___wmul@multiplier
  1531   000B78  C011  F002         	movff	get_wall_presence@clear1+1,___wmul@multiplier+1
  1532   000B7C  C059  F003         	movff	_wall_coef,___wmul@multiplicand
  1533   000B80  C05A  F004         	movff	_wall_coef+1,___wmul@multiplicand+1
  1534   000B84  EC4F  F008         	call	___wmul	;wreg free
  1535   000B88  5001               	movf	?___wmul^0,w,c
  1536   000B8A  5C12               	subwf	get_wall_presence@clear2^0,w,c
  1537   000B8C  5002               	movf	(?___wmul+1)^0,w,c
  1538   000B8E  5813               	subwfb	(get_wall_presence@clear2+1)^0,w,c
  1539   000B90  B0D8               	btfsc	status,0,c
  1540   000B92  EFCD  F005         	goto	u1491
  1541   000B96  EFD0  F005         	goto	u1490
  1542   000B9A                     u1491:
  1543   000B9A  0E01               	movlw	1
  1544   000B9C  EFD1  F005         	goto	u1500
  1545   000BA0                     u1490:
  1546   000BA0  0E00               	movlw	0
  1547   000BA2                     u1500:
  1548   000BA2  6E0C               	movwf	?_get_wall_presence^0,c
  1549   000BA4  6A0D               	clrf	(?_get_wall_presence+1)^0,c
  1550   000BA6  0012               	return		;funcret
  1551   000BA8                     __end_of_get_wall_presence:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _get_color_code *****************
  1555 ;; Defined at:
  1556 ;;		line 176 in file "color.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  value           2   28[BANK0 ] unsigned int 
  1561 ;;  i               2   30[BANK0 ] unsigned int 
  1562 ;;  NormalizedRG   12   32[BANK0 ] struct RGB_val
  1563 ;;  min_index       2   26[BANK0 ] unsigned int 
  1564 ;;  min_value       2   24[BANK0 ] unsigned int 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  2   52[COMRAM] unsigned int 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1575 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;      Totals:         4      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;Total ram usage:       48 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 5
  1581 ;; This function calls:
  1582 ;;		___lldiv
  1583 ;;		___lmul
  1584 ;;		___wmul
  1585 ;;		_color_read_Blue
  1586 ;;		_color_read_Green
  1587 ;;		_color_read_Red
  1588 ;;		_get_color_distance
  1589 ;;		_set_led_color
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text6
  1596   000032                     __ptext6:
  1597                           	callstack 0
  1598   000032                     _get_color_code:
  1599                           	callstack 25
  1600   000032                     
  1601                           ;color.c: 179:     set_led_color(0b100);
  1602   000032  0E00               	movlw	0
  1603   000034  6E02               	movwf	(set_led_color@color+1)^0,c
  1604   000036  0E04               	movlw	4
  1605   000038  6E01               	movwf	set_led_color@color^0,c
  1606   00003A  ECCA  F007         	call	_set_led_color	;wreg free
  1607   00003E                     
  1608                           ;color.c: 180:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1609   00003E  0E12               	movlw	18
  1610   000040  6E38               	movwf	(??_get_color_code+1)^0,c
  1611   000042  0EDC               	movlw	220
  1612   000044  6E37               	movwf	??_get_color_code^0,c
  1613   000046  0E60               	movlw	96
  1614   000048                     u2107:
  1615   000048  2EE8               	decfsz	wreg,f,c
  1616   00004A  D7FE               	bra	u2107
  1617   00004C  2E37               	decfsz	??_get_color_code^0,f,c
  1618   00004E  D7FC               	bra	u2107
  1619   000050  2E38               	decfsz	(??_get_color_code+1)^0,f,c
  1620   000052  D7FA               	bra	u2107
  1621   000054                     
  1622                           ;color.c: 181:     RGB.R = color_read_Red();
  1623   000054  EC2A  F007         	call	_color_read_Red	;wreg free
  1624   000058  C005  F0EE         	movff	?_color_read_Red,_RGB
  1625   00005C  C006  F0EF         	movff	?_color_read_Red+1,_RGB+1
  1626   000060  0100               	movlb	0	; () banked
  1627   000062  6BF0               	clrf	(_RGB+2)& (0+255),b
  1628   000064  6BF1               	clrf	(_RGB+3)& (0+255),b
  1629   000066                     
  1630                           ; BSR set to: 0
  1631                           ;color.c: 182:     set_led_color(0b010);
  1632   000066  0E00               	movlw	0
  1633   000068  6E02               	movwf	(set_led_color@color+1)^0,c
  1634   00006A  0E02               	movlw	2
  1635   00006C  6E01               	movwf	set_led_color@color^0,c
  1636   00006E  ECCA  F007         	call	_set_led_color	;wreg free
  1637   000072                     
  1638                           ;color.c: 183:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1639   000072  0E12               	movlw	18
  1640   000074  6E38               	movwf	(??_get_color_code+1)^0,c
  1641   000076  0EDC               	movlw	220
  1642   000078  6E37               	movwf	??_get_color_code^0,c
  1643   00007A  0E60               	movlw	96
  1644   00007C                     u2117:
  1645   00007C  2EE8               	decfsz	wreg,f,c
  1646   00007E  D7FE               	bra	u2117
  1647   000080  2E37               	decfsz	??_get_color_code^0,f,c
  1648   000082  D7FC               	bra	u2117
  1649   000084  2E38               	decfsz	(??_get_color_code+1)^0,f,c
  1650   000086  D7FA               	bra	u2117
  1651                           
  1652                           ;color.c: 184:     RGB.G = color_read_Green();
  1653   000088  EC52  F007         	call	_color_read_Green	;wreg free
  1654   00008C  C005  F0F2         	movff	?_color_read_Green,_RGB+4
  1655   000090  C006  F0F3         	movff	?_color_read_Green+1,_RGB+5
  1656   000094  0100               	movlb	0	; () banked
  1657   000096  6BF4               	clrf	(_RGB+6)& (0+255),b
  1658   000098  6BF5               	clrf	(_RGB+7)& (0+255),b
  1659   00009A                     
  1660                           ; BSR set to: 0
  1661                           ;color.c: 185:     set_led_color(0b001);
  1662   00009A  0E00               	movlw	0
  1663   00009C  6E02               	movwf	(set_led_color@color+1)^0,c
  1664   00009E  0E01               	movlw	1
  1665   0000A0  6E01               	movwf	set_led_color@color^0,c
  1666   0000A2  ECCA  F007         	call	_set_led_color	;wreg free
  1667   0000A6                     
  1668                           ;color.c: 186:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1669   0000A6  0E12               	movlw	18
  1670   0000A8  6E38               	movwf	(??_get_color_code+1)^0,c
  1671   0000AA  0EDC               	movlw	220
  1672   0000AC  6E37               	movwf	??_get_color_code^0,c
  1673   0000AE  0E60               	movlw	96
  1674   0000B0                     u2127:
  1675   0000B0  2EE8               	decfsz	wreg,f,c
  1676   0000B2  D7FE               	bra	u2127
  1677   0000B4  2E37               	decfsz	??_get_color_code^0,f,c
  1678   0000B6  D7FC               	bra	u2127
  1679   0000B8  2E38               	decfsz	(??_get_color_code+1)^0,f,c
  1680   0000BA  D7FA               	bra	u2127
  1681   0000BC                     
  1682                           ;color.c: 187:     RGB.B = color_read_Blue();
  1683   0000BC  ECA2  F007         	call	_color_read_Blue	;wreg free
  1684   0000C0  C005  F0F6         	movff	?_color_read_Blue,_RGB+8
  1685   0000C4  C006  F0F7         	movff	?_color_read_Blue+1,_RGB+9
  1686   0000C8  0100               	movlb	0	; () banked
  1687   0000CA  6BF8               	clrf	(_RGB+10)& (0+255),b
  1688   0000CC  6BF9               	clrf	(_RGB+11)& (0+255),b
  1689   0000CE                     
  1690                           ; BSR set to: 0
  1691                           ;color.c: 188:     set_led_color(0b000);
  1692   0000CE  0E00               	movlw	0
  1693   0000D0  6E02               	movwf	(set_led_color@color+1)^0,c
  1694   0000D2  0E00               	movlw	0
  1695   0000D4  6E01               	movwf	set_led_color@color^0,c
  1696   0000D6  ECCA  F007         	call	_set_led_color	;wreg free
  1697   0000DA                     
  1698                           ;color.c: 190:     struct RGB_val NormalizedRGB;;color.c: 191:     NormalizedRGB.R = RGB
      +                          .R >= Black_setup.R ? (RGB.R - Black_setup.R)*100/(White_setup.R - Black_setup.R) : 0;
  1699   0000DA  504D               	movf	_Black_setup^0,w,c
  1700   0000DC  0100               	movlb	0	; () banked
  1701   0000DE  5DEE               	subwf	_RGB& (0+255),w,b
  1702   0000E0  504E               	movf	(_Black_setup+1)^0,w,c
  1703   0000E2  59EF               	subwfb	(_RGB+1)& (0+255),w,b
  1704   0000E4  504F               	movf	(_Black_setup+2)^0,w,c
  1705   0000E6  59F0               	subwfb	(_RGB+2)& (0+255),w,b
  1706   0000E8  5050               	movf	(_Black_setup+3)^0,w,c
  1707   0000EA  59F1               	subwfb	(_RGB+3)& (0+255),w,b
  1708   0000EC  B0D8               	btfsc	status,0,c
  1709   0000EE  EF7B  F000         	goto	u1391
  1710   0000F2  EF7D  F000         	goto	u1390
  1711   0000F6                     u1391:
  1712   0000F6  EF87  F000         	goto	l2315
  1713   0000FA                     u1390:
  1714   0000FA                     
  1715                           ; BSR set to: 0
  1716   0000FA  0E00               	movlw	0
  1717   0000FC  6FCE               	movwf	_get_color_code$458& (0+255),b
  1718   0000FE  0E00               	movlw	0
  1719   000100  6FCF               	movwf	(_get_color_code$458+1)& (0+255),b
  1720   000102  0E00               	movlw	0
  1721   000104  6FD0               	movwf	(_get_color_code$458+2)& (0+255),b
  1722   000106  0E00               	movlw	0
  1723   000108  6FD1               	movwf	(_get_color_code$458+3)& (0+255),b
  1724   00010A  EFBC  F000         	goto	l2317
  1725   00010E                     l2315:
  1726                           
  1727                           ; BSR set to: 0
  1728   00010E  504D               	movf	_Black_setup^0,w,c
  1729   000110  5DEE               	subwf	_RGB& (0+255),w,b
  1730   000112  6E01               	movwf	___lmul@multiplier^0,c
  1731   000114  504E               	movf	(_Black_setup+1)^0,w,c
  1732   000116  59EF               	subwfb	(_RGB+1)& (0+255),w,b
  1733   000118  6E02               	movwf	(___lmul@multiplier+1)^0,c
  1734   00011A  504F               	movf	(_Black_setup+2)^0,w,c
  1735   00011C  59F0               	subwfb	(_RGB+2)& (0+255),w,b
  1736   00011E  6E03               	movwf	(___lmul@multiplier+2)^0,c
  1737   000120  5050               	movf	(_Black_setup+3)^0,w,c
  1738   000122  59F1               	subwfb	(_RGB+3)& (0+255),w,b
  1739   000124  6E04               	movwf	(___lmul@multiplier+3)^0,c
  1740   000126  0E64               	movlw	100
  1741   000128  6E05               	movwf	___lmul@multiplicand^0,c
  1742   00012A  0E00               	movlw	0
  1743   00012C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1744   00012E  0E00               	movlw	0
  1745   000130  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1746   000132  0E00               	movlw	0
  1747   000134  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1748   000136  EC9B  F006         	call	___lmul	;wreg free
  1749   00013A  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1750   00013E  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1751   000142  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1752   000146  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1753   00014A  504D               	movf	_Black_setup^0,w,c
  1754   00014C  0100               	movlb	0	; () banked
  1755   00014E  5D60               	subwf	_White_setup& (0+255),w,b
  1756   000150  6E11               	movwf	___lldiv@divisor^0,c
  1757   000152  504E               	movf	(_Black_setup+1)^0,w,c
  1758   000154  5961               	subwfb	(_White_setup+1)& (0+255),w,b
  1759   000156  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1760   000158  504F               	movf	(_Black_setup+2)^0,w,c
  1761   00015A  5962               	subwfb	(_White_setup+2)& (0+255),w,b
  1762   00015C  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1763   00015E  5050               	movf	(_Black_setup+3)^0,w,c
  1764   000160  5963               	subwfb	(_White_setup+3)& (0+255),w,b
  1765   000162  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1766   000164  EC34  F005         	call	___lldiv	;wreg free
  1767   000168  C00D  F0CE         	movff	?___lldiv,_get_color_code$458
  1768   00016C  C00E  F0CF         	movff	?___lldiv+1,_get_color_code$458+1
  1769   000170  C00F  F0D0         	movff	?___lldiv+2,_get_color_code$458+2
  1770   000174  C010  F0D1         	movff	?___lldiv+3,_get_color_code$458+3
  1771   000178                     l2317:
  1772   000178  C0CE  F0E2         	movff	_get_color_code$458,get_color_code@NormalizedRGB
  1773   00017C  C0CF  F0E3         	movff	_get_color_code$458+1,get_color_code@NormalizedRGB+1
  1774   000180  C0D0  F0E4         	movff	_get_color_code$458+2,get_color_code@NormalizedRGB+2
  1775   000184  C0D1  F0E5         	movff	_get_color_code$458+3,get_color_code@NormalizedRGB+3
  1776   000188                     
  1777                           ;color.c: 192:     NormalizedRGB.G = RGB.G >= Black_setup.G ? (RGB.G - Black_setup.G)*10
      +                          0/(White_setup.G - Black_setup.G) : 0;
  1778   000188  5051               	movf	(_Black_setup+4)^0,w,c
  1779   00018A  0100               	movlb	0	; () banked
  1780   00018C  5DF2               	subwf	(_RGB+4)& (0+255),w,b
  1781   00018E  5052               	movf	(_Black_setup+5)^0,w,c
  1782   000190  59F3               	subwfb	(_RGB+5)& (0+255),w,b
  1783   000192  5053               	movf	(_Black_setup+6)^0,w,c
  1784   000194  59F4               	subwfb	(_RGB+6)& (0+255),w,b
  1785   000196  5054               	movf	(_Black_setup+7)^0,w,c
  1786   000198  59F5               	subwfb	(_RGB+7)& (0+255),w,b
  1787   00019A  B0D8               	btfsc	status,0,c
  1788   00019C  EFD2  F000         	goto	u1401
  1789   0001A0  EFD4  F000         	goto	u1400
  1790   0001A4                     u1401:
  1791   0001A4  EFDE  F000         	goto	l2323
  1792   0001A8                     u1400:
  1793   0001A8                     
  1794                           ; BSR set to: 0
  1795   0001A8  0E00               	movlw	0
  1796   0001AA  6FD2               	movwf	_get_color_code$459& (0+255),b
  1797   0001AC  0E00               	movlw	0
  1798   0001AE  6FD3               	movwf	(_get_color_code$459+1)& (0+255),b
  1799   0001B0  0E00               	movlw	0
  1800   0001B2  6FD4               	movwf	(_get_color_code$459+2)& (0+255),b
  1801   0001B4  0E00               	movlw	0
  1802   0001B6  6FD5               	movwf	(_get_color_code$459+3)& (0+255),b
  1803   0001B8  EF13  F001         	goto	l2325
  1804   0001BC                     l2323:
  1805                           
  1806                           ; BSR set to: 0
  1807   0001BC  5051               	movf	(_Black_setup+4)^0,w,c
  1808   0001BE  5DF2               	subwf	(_RGB+4)& (0+255),w,b
  1809   0001C0  6E01               	movwf	___lmul@multiplier^0,c
  1810   0001C2  5052               	movf	(_Black_setup+5)^0,w,c
  1811   0001C4  59F3               	subwfb	(_RGB+5)& (0+255),w,b
  1812   0001C6  6E02               	movwf	(___lmul@multiplier+1)^0,c
  1813   0001C8  5053               	movf	(_Black_setup+6)^0,w,c
  1814   0001CA  59F4               	subwfb	(_RGB+6)& (0+255),w,b
  1815   0001CC  6E03               	movwf	(___lmul@multiplier+2)^0,c
  1816   0001CE  5054               	movf	(_Black_setup+7)^0,w,c
  1817   0001D0  59F5               	subwfb	(_RGB+7)& (0+255),w,b
  1818   0001D2  6E04               	movwf	(___lmul@multiplier+3)^0,c
  1819   0001D4  0E64               	movlw	100
  1820   0001D6  6E05               	movwf	___lmul@multiplicand^0,c
  1821   0001D8  0E00               	movlw	0
  1822   0001DA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1823   0001DC  0E00               	movlw	0
  1824   0001DE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1825   0001E0  0E00               	movlw	0
  1826   0001E2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1827   0001E4  EC9B  F006         	call	___lmul	;wreg free
  1828   0001E8  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1829   0001EC  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1830   0001F0  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1831   0001F4  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1832   0001F8  5051               	movf	(_Black_setup+4)^0,w,c
  1833   0001FA  0100               	movlb	0	; () banked
  1834   0001FC  5D64               	subwf	(_White_setup+4)& (0+255),w,b
  1835   0001FE  6E11               	movwf	___lldiv@divisor^0,c
  1836   000200  5052               	movf	(_Black_setup+5)^0,w,c
  1837   000202  5965               	subwfb	(_White_setup+5)& (0+255),w,b
  1838   000204  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1839   000206  5053               	movf	(_Black_setup+6)^0,w,c
  1840   000208  5966               	subwfb	(_White_setup+6)& (0+255),w,b
  1841   00020A  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1842   00020C  5054               	movf	(_Black_setup+7)^0,w,c
  1843   00020E  5967               	subwfb	(_White_setup+7)& (0+255),w,b
  1844   000210  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1845   000212  EC34  F005         	call	___lldiv	;wreg free
  1846   000216  C00D  F0D2         	movff	?___lldiv,_get_color_code$459
  1847   00021A  C00E  F0D3         	movff	?___lldiv+1,_get_color_code$459+1
  1848   00021E  C00F  F0D4         	movff	?___lldiv+2,_get_color_code$459+2
  1849   000222  C010  F0D5         	movff	?___lldiv+3,_get_color_code$459+3
  1850   000226                     l2325:
  1851   000226  C0D2  F0E6         	movff	_get_color_code$459,get_color_code@NormalizedRGB+4
  1852   00022A  C0D3  F0E7         	movff	_get_color_code$459+1,get_color_code@NormalizedRGB+5
  1853   00022E  C0D4  F0E8         	movff	_get_color_code$459+2,get_color_code@NormalizedRGB+6
  1854   000232  C0D5  F0E9         	movff	_get_color_code$459+3,get_color_code@NormalizedRGB+7
  1855   000236                     
  1856                           ;color.c: 193:     NormalizedRGB.B = RGB.B >= Black_setup.B ? (RGB.B - Black_setup.B)*10
      +                          0/(White_setup.B - Black_setup.B) : 0;
  1857   000236  5055               	movf	(_Black_setup+8)^0,w,c
  1858   000238  0100               	movlb	0	; () banked
  1859   00023A  5DF6               	subwf	(_RGB+8)& (0+255),w,b
  1860   00023C  5056               	movf	(_Black_setup+9)^0,w,c
  1861   00023E  59F7               	subwfb	(_RGB+9)& (0+255),w,b
  1862   000240  5057               	movf	(_Black_setup+10)^0,w,c
  1863   000242  59F8               	subwfb	(_RGB+10)& (0+255),w,b
  1864   000244  5058               	movf	(_Black_setup+11)^0,w,c
  1865   000246  59F9               	subwfb	(_RGB+11)& (0+255),w,b
  1866   000248  B0D8               	btfsc	status,0,c
  1867   00024A  EF29  F001         	goto	u1411
  1868   00024E  EF2B  F001         	goto	u1410
  1869   000252                     u1411:
  1870   000252  EF35  F001         	goto	l2331
  1871   000256                     u1410:
  1872   000256                     
  1873                           ; BSR set to: 0
  1874   000256  0E00               	movlw	0
  1875   000258  6FD6               	movwf	_get_color_code$460& (0+255),b
  1876   00025A  0E00               	movlw	0
  1877   00025C  6FD7               	movwf	(_get_color_code$460+1)& (0+255),b
  1878   00025E  0E00               	movlw	0
  1879   000260  6FD8               	movwf	(_get_color_code$460+2)& (0+255),b
  1880   000262  0E00               	movlw	0
  1881   000264  6FD9               	movwf	(_get_color_code$460+3)& (0+255),b
  1882   000266  EF6A  F001         	goto	l2333
  1883   00026A                     l2331:
  1884                           
  1885                           ; BSR set to: 0
  1886   00026A  5055               	movf	(_Black_setup+8)^0,w,c
  1887   00026C  5DF6               	subwf	(_RGB+8)& (0+255),w,b
  1888   00026E  6E01               	movwf	___lmul@multiplier^0,c
  1889   000270  5056               	movf	(_Black_setup+9)^0,w,c
  1890   000272  59F7               	subwfb	(_RGB+9)& (0+255),w,b
  1891   000274  6E02               	movwf	(___lmul@multiplier+1)^0,c
  1892   000276  5057               	movf	(_Black_setup+10)^0,w,c
  1893   000278  59F8               	subwfb	(_RGB+10)& (0+255),w,b
  1894   00027A  6E03               	movwf	(___lmul@multiplier+2)^0,c
  1895   00027C  5058               	movf	(_Black_setup+11)^0,w,c
  1896   00027E  59F9               	subwfb	(_RGB+11)& (0+255),w,b
  1897   000280  6E04               	movwf	(___lmul@multiplier+3)^0,c
  1898   000282  0E64               	movlw	100
  1899   000284  6E05               	movwf	___lmul@multiplicand^0,c
  1900   000286  0E00               	movlw	0
  1901   000288  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1902   00028A  0E00               	movlw	0
  1903   00028C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1904   00028E  0E00               	movlw	0
  1905   000290  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1906   000292  EC9B  F006         	call	___lmul	;wreg free
  1907   000296  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1908   00029A  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1909   00029E  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1910   0002A2  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1911   0002A6  5055               	movf	(_Black_setup+8)^0,w,c
  1912   0002A8  0100               	movlb	0	; () banked
  1913   0002AA  5D68               	subwf	(_White_setup+8)& (0+255),w,b
  1914   0002AC  6E11               	movwf	___lldiv@divisor^0,c
  1915   0002AE  5056               	movf	(_Black_setup+9)^0,w,c
  1916   0002B0  5969               	subwfb	(_White_setup+9)& (0+255),w,b
  1917   0002B2  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1918   0002B4  5057               	movf	(_Black_setup+10)^0,w,c
  1919   0002B6  596A               	subwfb	(_White_setup+10)& (0+255),w,b
  1920   0002B8  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1921   0002BA  5058               	movf	(_Black_setup+11)^0,w,c
  1922   0002BC  596B               	subwfb	(_White_setup+11)& (0+255),w,b
  1923   0002BE  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1924   0002C0  EC34  F005         	call	___lldiv	;wreg free
  1925   0002C4  C00D  F0D6         	movff	?___lldiv,_get_color_code$460
  1926   0002C8  C00E  F0D7         	movff	?___lldiv+1,_get_color_code$460+1
  1927   0002CC  C00F  F0D8         	movff	?___lldiv+2,_get_color_code$460+2
  1928   0002D0  C010  F0D9         	movff	?___lldiv+3,_get_color_code$460+3
  1929   0002D4                     l2333:
  1930   0002D4  C0D6  F0EA         	movff	_get_color_code$460,get_color_code@NormalizedRGB+8
  1931   0002D8  C0D7  F0EB         	movff	_get_color_code$460+1,get_color_code@NormalizedRGB+9
  1932   0002DC  C0D8  F0EC         	movff	_get_color_code$460+2,get_color_code@NormalizedRGB+10
  1933   0002E0  C0D9  F0ED         	movff	_get_color_code$460+3,get_color_code@NormalizedRGB+11
  1934   0002E4                     
  1935                           ;color.c: 195:     unsigned int min_value = get_color_distance(NormalizedRGB,Color_rules
      +                          [0]);
  1936   0002E4  EE20  F0E2         	lfsr	2,get_color_code@NormalizedRGB
  1937   0002E8  EE00  F007         	lfsr	0,get_color_distance@color1
  1938   0002EC  0E0B               	movlw	11
  1939   0002EE                     u1421:
  1940   0002EE  CFDB FFEB          	movff	plusw2,plusw0
  1941   0002F2  06E8               	decf	wreg,f,c
  1942   0002F4  E2FC               	bc	u1421
  1943   0002F6  EE21  F000         	lfsr	2,_Color_rules
  1944   0002FA  EE00  F013         	lfsr	0,get_color_distance@color2
  1945   0002FE  0E0B               	movlw	11
  1946   000300                     u1431:
  1947   000300  CFDB FFEB          	movff	plusw2,plusw0
  1948   000304  06E8               	decf	wreg,f,c
  1949   000306  E2FC               	bc	u1431
  1950   000308  EC9E  F002         	call	_get_color_distance	;wreg free
  1951   00030C  C007  F0DA         	movff	?_get_color_distance,get_color_code@min_value
  1952   000310  C008  F0DB         	movff	?_get_color_distance+1,get_color_code@min_value+1
  1953   000314                     
  1954                           ;color.c: 196:     unsigned int min_index = 0;
  1955   000314  0E00               	movlw	0
  1956   000316  0100               	movlb	0	; () banked
  1957   000318  6FDD               	movwf	(get_color_code@min_index+1)& (0+255),b
  1958   00031A  0E00               	movlw	0
  1959   00031C  6FDC               	movwf	get_color_code@min_index& (0+255),b
  1960   00031E                     
  1961                           ; BSR set to: 0
  1962                           ;color.c: 197:     for(unsigned int i = 1;i < 9; i++){
  1963   00031E  0E00               	movlw	0
  1964   000320  6FE1               	movwf	(get_color_code@i+1)& (0+255),b
  1965   000322  0E01               	movlw	1
  1966   000324  6FE0               	movwf	get_color_code@i& (0+255),b
  1967   000326                     l2345:
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;color.c: 198:         unsigned int value = get_color_distance(NormalizedRGB,Color_rules
      +                          [i]);
  1971   000326  C0E0  F001         	movff	get_color_code@i,___wmul@multiplier
  1972   00032A  C0E1  F002         	movff	get_color_code@i+1,___wmul@multiplier+1
  1973   00032E  0E00               	movlw	0
  1974   000330  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1975   000332  0E0C               	movlw	12
  1976   000334  6E03               	movwf	___wmul@multiplicand^0,c
  1977   000336  EC4F  F008         	call	___wmul	;wreg free
  1978   00033A  0E00               	movlw	low _Color_rules
  1979   00033C  2401               	addwf	?___wmul^0,w,c
  1980   00033E  6ED9               	movwf	fsr2l,c
  1981   000340  0E01               	movlw	high _Color_rules
  1982   000342  2002               	addwfc	(?___wmul+1)^0,w,c
  1983   000344  6EDA               	movwf	fsr2h,c
  1984   000346  EE10  F0C2         	lfsr	1,_get_color_code$2464
  1985   00034A  0E0B               	movlw	11
  1986   00034C                     u1441:
  1987   00034C  CFDB FFE3          	movff	plusw2,plusw1
  1988   000350  06E8               	decf	wreg,f,c
  1989   000352  E2FC               	bc	u1441
  1990   000354                     
  1991                           ;color.c: 198:         unsigned int value = get_color_distance(NormalizedRGB,Color_rules
      +                          [i]);
  1992   000354  EE20  F0E2         	lfsr	2,get_color_code@NormalizedRGB
  1993   000358  EE00  F007         	lfsr	0,get_color_distance@color1
  1994   00035C  0E0B               	movlw	11
  1995   00035E                     u1451:
  1996   00035E  CFDB FFEB          	movff	plusw2,plusw0
  1997   000362  06E8               	decf	wreg,f,c
  1998   000364  E2FC               	bc	u1451
  1999   000366  EE20  F0C2         	lfsr	2,_get_color_code$2464
  2000   00036A  EE00  F013         	lfsr	0,get_color_distance@color2
  2001   00036E  0E0B               	movlw	11
  2002   000370                     u1461:
  2003   000370  CFDB FFEB          	movff	plusw2,plusw0
  2004   000374  06E8               	decf	wreg,f,c
  2005   000376  E2FC               	bc	u1461
  2006   000378  EC9E  F002         	call	_get_color_distance	;wreg free
  2007   00037C  C007  F0DE         	movff	?_get_color_distance,get_color_code@value
  2008   000380  C008  F0DF         	movff	?_get_color_distance+1,get_color_code@value+1
  2009   000384                     
  2010                           ;color.c: 199:         if(value < min_value){
  2011   000384  0100               	movlb	0	; () banked
  2012   000386  51DA               	movf	get_color_code@min_value& (0+255),w,b
  2013   000388  5DDE               	subwf	get_color_code@value& (0+255),w,b
  2014   00038A  51DB               	movf	(get_color_code@min_value+1)& (0+255),w,b
  2015   00038C  59DF               	subwfb	(get_color_code@value+1)& (0+255),w,b
  2016   00038E  B0D8               	btfsc	status,0,c
  2017   000390  EFCC  F001         	goto	u1471
  2018   000394  EFCE  F001         	goto	u1470
  2019   000398                     u1471:
  2020   000398  EFD6  F001         	goto	l2353
  2021   00039C                     u1470:
  2022   00039C                     
  2023                           ; BSR set to: 0
  2024                           ;color.c: 200:             min_index = i;
  2025   00039C  C0E0  F0DC         	movff	get_color_code@i,get_color_code@min_index
  2026   0003A0  C0E1  F0DD         	movff	get_color_code@i+1,get_color_code@min_index+1
  2027                           
  2028                           ;color.c: 201:             min_value = value;
  2029   0003A4  C0DE  F0DA         	movff	get_color_code@value,get_color_code@min_value
  2030   0003A8  C0DF  F0DB         	movff	get_color_code@value+1,get_color_code@min_value+1
  2031   0003AC                     l2353:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;color.c: 203:     }
  2035   0003AC  4BE0               	infsnz	get_color_code@i& (0+255),f,b
  2036   0003AE  2BE1               	incf	(get_color_code@i+1)& (0+255),f,b
  2037   0003B0                     
  2038                           ; BSR set to: 0
  2039   0003B0  51E1               	movf	(get_color_code@i+1)& (0+255),w,b
  2040   0003B2  E109               	bnz	u1480
  2041   0003B4  0E09               	movlw	9
  2042   0003B6  5DE0               	subwf	get_color_code@i& (0+255),w,b
  2043   0003B8  A0D8               	btfss	status,0,c
  2044   0003BA  EFE1  F001         	goto	u1481
  2045   0003BE  EFE3  F001         	goto	u1480
  2046   0003C2                     u1481:
  2047   0003C2  EF93  F001         	goto	l2345
  2048   0003C6                     u1480:
  2049   0003C6                     
  2050                           ; BSR set to: 0
  2051                           ;color.c: 204:     return min_index;
  2052   0003C6  C0DC  F035         	movff	get_color_code@min_index,?_get_color_code
  2053   0003CA  C0DD  F036         	movff	get_color_code@min_index+1,?_get_color_code+1
  2054   0003CE                     
  2055                           ; BSR set to: 0
  2056   0003CE  0012               	return		;funcret
  2057   0003D0                     __end_of_get_color_code:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _get_color_distance *****************
  2061 ;; Defined at:
  2062 ;;		line 146 in file "color.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  color1         12    6[COMRAM] struct RGB_val
  2065 ;;  color2         12   18[COMRAM] struct RGB_val
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  B_offset        2   50[COMRAM] unsigned int 
  2068 ;;  G_offset        2   48[COMRAM] unsigned int 
  2069 ;;  R_offset        2   46[COMRAM] unsigned int 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  2    6[COMRAM] unsigned int 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2079 ;;      Params:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Totals:        46       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;Total ram usage:       46 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 3
  2086 ;; This function calls:
  2087 ;;		___wmul
  2088 ;; This function is called by:
  2089 ;;		_get_color_code
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text7
  2094   00053C                     __ptext7:
  2095                           	callstack 0
  2096   00053C                     _get_color_distance:
  2097                           	callstack 26
  2098   00053C                     
  2099                           ;color.c: 147:     unsigned int R_offset = color1.R >= color2.R ? color1.R - color2.R : 
      +                          color2.R - color1.R;
  2100   00053C  5013               	movf	get_color_distance@color2^0,w,c
  2101   00053E  5C07               	subwf	get_color_distance@color1^0,w,c
  2102   000540  5014               	movf	(get_color_distance@color2+1)^0,w,c
  2103   000542  5808               	subwfb	(get_color_distance@color1+1)^0,w,c
  2104   000544  5015               	movf	(get_color_distance@color2+2)^0,w,c
  2105   000546  5809               	subwfb	(get_color_distance@color1+2)^0,w,c
  2106   000548  5016               	movf	(get_color_distance@color2+3)^0,w,c
  2107   00054A  580A               	subwfb	(get_color_distance@color1+3)^0,w,c
  2108   00054C  B0D8               	btfsc	status,0,c
  2109   00054E  EFAB  F002         	goto	u1151
  2110   000552  EFAD  F002         	goto	u1150
  2111   000556                     u1151:
  2112   000556  EFBB  F002         	goto	l2175
  2113   00055A                     u1150:
  2114   00055A  5007               	movf	get_color_distance@color1^0,w,c
  2115   00055C  5C13               	subwf	get_color_distance@color2^0,w,c
  2116   00055E  6E23               	movwf	_get_color_distance$417^0,c
  2117   000560  5008               	movf	(get_color_distance@color1+1)^0,w,c
  2118   000562  5814               	subwfb	(get_color_distance@color2+1)^0,w,c
  2119   000564  6E24               	movwf	(_get_color_distance$417+1)^0,c
  2120   000566  5009               	movf	(get_color_distance@color1+2)^0,w,c
  2121   000568  5815               	subwfb	(get_color_distance@color2+2)^0,w,c
  2122   00056A  6E25               	movwf	(_get_color_distance$417+2)^0,c
  2123   00056C  500A               	movf	(get_color_distance@color1+3)^0,w,c
  2124   00056E  5816               	subwfb	(get_color_distance@color2+3)^0,w,c
  2125   000570  6E26               	movwf	(_get_color_distance$417+3)^0,c
  2126   000572  EFC7  F002         	goto	l2177
  2127   000576                     l2175:
  2128   000576  5013               	movf	get_color_distance@color2^0,w,c
  2129   000578  5C07               	subwf	get_color_distance@color1^0,w,c
  2130   00057A  6E23               	movwf	_get_color_distance$417^0,c
  2131   00057C  5014               	movf	(get_color_distance@color2+1)^0,w,c
  2132   00057E  5808               	subwfb	(get_color_distance@color1+1)^0,w,c
  2133   000580  6E24               	movwf	(_get_color_distance$417+1)^0,c
  2134   000582  5015               	movf	(get_color_distance@color2+2)^0,w,c
  2135   000584  5809               	subwfb	(get_color_distance@color1+2)^0,w,c
  2136   000586  6E25               	movwf	(_get_color_distance$417+2)^0,c
  2137   000588  5016               	movf	(get_color_distance@color2+3)^0,w,c
  2138   00058A  580A               	subwfb	(get_color_distance@color1+3)^0,w,c
  2139   00058C  6E26               	movwf	(_get_color_distance$417+3)^0,c
  2140   00058E                     l2177:
  2141   00058E  C023  F02F         	movff	_get_color_distance$417,get_color_distance@R_offset
  2142   000592  C024  F030         	movff	_get_color_distance$417+1,get_color_distance@R_offset+1
  2143                           
  2144                           ;color.c: 148:     unsigned int G_offset = color1.G >= color2.G ? color1.G - color2.G : 
      +                          color2.G - color1.G;
  2145   000596  5017               	movf	(get_color_distance@color2+4)^0,w,c
  2146   000598  5C0B               	subwf	(get_color_distance@color1+4)^0,w,c
  2147   00059A  5018               	movf	(get_color_distance@color2+5)^0,w,c
  2148   00059C  580C               	subwfb	(get_color_distance@color1+5)^0,w,c
  2149   00059E  5019               	movf	(get_color_distance@color2+6)^0,w,c
  2150   0005A0  580D               	subwfb	(get_color_distance@color1+6)^0,w,c
  2151   0005A2  501A               	movf	(get_color_distance@color2+7)^0,w,c
  2152   0005A4  580E               	subwfb	(get_color_distance@color1+7)^0,w,c
  2153   0005A6  B0D8               	btfsc	status,0,c
  2154   0005A8  EFD8  F002         	goto	u1161
  2155   0005AC  EFDA  F002         	goto	u1160
  2156   0005B0                     u1161:
  2157   0005B0  EFE8  F002         	goto	l2181
  2158   0005B4                     u1160:
  2159   0005B4  500B               	movf	(get_color_distance@color1+4)^0,w,c
  2160   0005B6  5C17               	subwf	(get_color_distance@color2+4)^0,w,c
  2161   0005B8  6E27               	movwf	_get_color_distance$419^0,c
  2162   0005BA  500C               	movf	(get_color_distance@color1+5)^0,w,c
  2163   0005BC  5818               	subwfb	(get_color_distance@color2+5)^0,w,c
  2164   0005BE  6E28               	movwf	(_get_color_distance$419+1)^0,c
  2165   0005C0  500D               	movf	(get_color_distance@color1+6)^0,w,c
  2166   0005C2  5819               	subwfb	(get_color_distance@color2+6)^0,w,c
  2167   0005C4  6E29               	movwf	(_get_color_distance$419+2)^0,c
  2168   0005C6  500E               	movf	(get_color_distance@color1+7)^0,w,c
  2169   0005C8  581A               	subwfb	(get_color_distance@color2+7)^0,w,c
  2170   0005CA  6E2A               	movwf	(_get_color_distance$419+3)^0,c
  2171   0005CC  EFF4  F002         	goto	l2183
  2172   0005D0                     l2181:
  2173   0005D0  5017               	movf	(get_color_distance@color2+4)^0,w,c
  2174   0005D2  5C0B               	subwf	(get_color_distance@color1+4)^0,w,c
  2175   0005D4  6E27               	movwf	_get_color_distance$419^0,c
  2176   0005D6  5018               	movf	(get_color_distance@color2+5)^0,w,c
  2177   0005D8  580C               	subwfb	(get_color_distance@color1+5)^0,w,c
  2178   0005DA  6E28               	movwf	(_get_color_distance$419+1)^0,c
  2179   0005DC  5019               	movf	(get_color_distance@color2+6)^0,w,c
  2180   0005DE  580D               	subwfb	(get_color_distance@color1+6)^0,w,c
  2181   0005E0  6E29               	movwf	(_get_color_distance$419+2)^0,c
  2182   0005E2  501A               	movf	(get_color_distance@color2+7)^0,w,c
  2183   0005E4  580E               	subwfb	(get_color_distance@color1+7)^0,w,c
  2184   0005E6  6E2A               	movwf	(_get_color_distance$419+3)^0,c
  2185   0005E8                     l2183:
  2186   0005E8  C027  F031         	movff	_get_color_distance$419,get_color_distance@G_offset
  2187   0005EC  C028  F032         	movff	_get_color_distance$419+1,get_color_distance@G_offset+1
  2188                           
  2189                           ;color.c: 149:     unsigned int B_offset = color1.B >= color2.B ? color1.B - color2.B : 
      +                          color2.B - color1.B;
  2190   0005F0  501B               	movf	(get_color_distance@color2+8)^0,w,c
  2191   0005F2  5C0F               	subwf	(get_color_distance@color1+8)^0,w,c
  2192   0005F4  501C               	movf	(get_color_distance@color2+9)^0,w,c
  2193   0005F6  5810               	subwfb	(get_color_distance@color1+9)^0,w,c
  2194   0005F8  501D               	movf	(get_color_distance@color2+10)^0,w,c
  2195   0005FA  5811               	subwfb	(get_color_distance@color1+10)^0,w,c
  2196   0005FC  501E               	movf	(get_color_distance@color2+11)^0,w,c
  2197   0005FE  5812               	subwfb	(get_color_distance@color1+11)^0,w,c
  2198   000600  B0D8               	btfsc	status,0,c
  2199   000602  EF05  F003         	goto	u1171
  2200   000606  EF07  F003         	goto	u1170
  2201   00060A                     u1171:
  2202   00060A  EF15  F003         	goto	l2187
  2203   00060E                     u1170:
  2204   00060E  500F               	movf	(get_color_distance@color1+8)^0,w,c
  2205   000610  5C1B               	subwf	(get_color_distance@color2+8)^0,w,c
  2206   000612  6E2B               	movwf	_get_color_distance$421^0,c
  2207   000614  5010               	movf	(get_color_distance@color1+9)^0,w,c
  2208   000616  581C               	subwfb	(get_color_distance@color2+9)^0,w,c
  2209   000618  6E2C               	movwf	(_get_color_distance$421+1)^0,c
  2210   00061A  5011               	movf	(get_color_distance@color1+10)^0,w,c
  2211   00061C  581D               	subwfb	(get_color_distance@color2+10)^0,w,c
  2212   00061E  6E2D               	movwf	(_get_color_distance$421+2)^0,c
  2213   000620  5012               	movf	(get_color_distance@color1+11)^0,w,c
  2214   000622  581E               	subwfb	(get_color_distance@color2+11)^0,w,c
  2215   000624  6E2E               	movwf	(_get_color_distance$421+3)^0,c
  2216   000626  EF21  F003         	goto	l2189
  2217   00062A                     l2187:
  2218   00062A  501B               	movf	(get_color_distance@color2+8)^0,w,c
  2219   00062C  5C0F               	subwf	(get_color_distance@color1+8)^0,w,c
  2220   00062E  6E2B               	movwf	_get_color_distance$421^0,c
  2221   000630  501C               	movf	(get_color_distance@color2+9)^0,w,c
  2222   000632  5810               	subwfb	(get_color_distance@color1+9)^0,w,c
  2223   000634  6E2C               	movwf	(_get_color_distance$421+1)^0,c
  2224   000636  501D               	movf	(get_color_distance@color2+10)^0,w,c
  2225   000638  5811               	subwfb	(get_color_distance@color1+10)^0,w,c
  2226   00063A  6E2D               	movwf	(_get_color_distance$421+2)^0,c
  2227   00063C  501E               	movf	(get_color_distance@color2+11)^0,w,c
  2228   00063E  5812               	subwfb	(get_color_distance@color1+11)^0,w,c
  2229   000640  6E2E               	movwf	(_get_color_distance$421+3)^0,c
  2230   000642                     l2189:
  2231   000642  C02B  F033         	movff	_get_color_distance$421,get_color_distance@B_offset
  2232   000646  C02C  F034         	movff	_get_color_distance$421+1,get_color_distance@B_offset+1
  2233   00064A                     
  2234                           ;color.c: 151:     return R_offset*R_offset + G_offset*G_offset + B_offset*B_offset;
  2235   00064A  C02F  F001         	movff	get_color_distance@R_offset,___wmul@multiplier
  2236   00064E  C030  F002         	movff	get_color_distance@R_offset+1,___wmul@multiplier+1
  2237   000652  C02F  F003         	movff	get_color_distance@R_offset,___wmul@multiplicand
  2238   000656  C030  F004         	movff	get_color_distance@R_offset+1,___wmul@multiplicand+1
  2239   00065A  EC4F  F008         	call	___wmul	;wreg free
  2240   00065E  C001  F01F         	movff	?___wmul,??_get_color_distance
  2241   000662  C002  F020         	movff	?___wmul+1,??_get_color_distance+1
  2242   000666  C031  F001         	movff	get_color_distance@G_offset,___wmul@multiplier
  2243   00066A  C032  F002         	movff	get_color_distance@G_offset+1,___wmul@multiplier+1
  2244   00066E  C031  F003         	movff	get_color_distance@G_offset,___wmul@multiplicand
  2245   000672  C032  F004         	movff	get_color_distance@G_offset+1,___wmul@multiplicand+1
  2246   000676  EC4F  F008         	call	___wmul	;wreg free
  2247   00067A  5001               	movf	?___wmul^0,w,c
  2248   00067C  241F               	addwf	??_get_color_distance^0,w,c
  2249   00067E  6E21               	movwf	(??_get_color_distance+2)^0,c
  2250   000680  5002               	movf	(?___wmul+1)^0,w,c
  2251   000682  2020               	addwfc	(??_get_color_distance+1)^0,w,c
  2252   000684  6E22               	movwf	(??_get_color_distance+3)^0,c
  2253   000686  C033  F001         	movff	get_color_distance@B_offset,___wmul@multiplier
  2254   00068A  C034  F002         	movff	get_color_distance@B_offset+1,___wmul@multiplier+1
  2255   00068E  C033  F003         	movff	get_color_distance@B_offset,___wmul@multiplicand
  2256   000692  C034  F004         	movff	get_color_distance@B_offset+1,___wmul@multiplicand+1
  2257   000696  EC4F  F008         	call	___wmul	;wreg free
  2258   00069A  5001               	movf	?___wmul^0,w,c
  2259   00069C  2421               	addwf	(??_get_color_distance+2)^0,w,c
  2260   00069E  6E07               	movwf	?_get_color_distance^0,c
  2261   0006A0  5002               	movf	(?___wmul+1)^0,w,c
  2262   0006A2  2022               	addwfc	(??_get_color_distance+3)^0,w,c
  2263   0006A4  6E08               	movwf	(?_get_color_distance+1)^0,c
  2264   0006A6  0012               	return		;funcret
  2265   0006A8                     __end_of_get_color_distance:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function ___wmul *****************
  2269 ;; Defined at:
  2270 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  multiplier      2    0[COMRAM] unsigned int 
  2273 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  product         2    4[COMRAM] unsigned int 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  2    0[COMRAM] unsigned int 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, prodl, prodh
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2288 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2289 ;;Total ram usage:        6 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 2
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_get_color_distance
  2296 ;;		_get_color_code
  2297 ;;		_get_wall_presence
  2298 ;;		_setMotorPWM
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text8
  2303   00109E                     __ptext8:
  2304                           	callstack 0
  2305   00109E                     ___wmul:
  2306                           	callstack 26
  2307   00109E  5001               	movf	___wmul@multiplier^0,w,c
  2308   0010A0  0203               	mulwf	___wmul@multiplicand^0,c
  2309   0010A2  CFF3 F005          	movff	prodl,___wmul@product
  2310   0010A6  CFF4 F006          	movff	prodh,___wmul@product+1
  2311   0010AA  5001               	movf	___wmul@multiplier^0,w,c
  2312   0010AC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2313   0010AE  50F3               	movf	243,w,c
  2314   0010B0  2606               	addwf	(___wmul@product+1)^0,f,c
  2315   0010B2  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2316   0010B4  0203               	mulwf	___wmul@multiplicand^0,c
  2317   0010B6  50F3               	movf	243,w,c
  2318   0010B8  2606               	addwf	(___wmul@product+1)^0,f,c
  2319   0010BA  C005  F001         	movff	___wmul@product,?___wmul
  2320   0010BE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2321   0010C2  0012               	return		;funcret
  2322   0010C4                     __end_of___wmul:
  2323                           	callstack 0
  2324                           
  2325 ;; *************** function ___lmul *****************
  2326 ;; Defined at:
  2327 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  multiplier      4    0[COMRAM] unsigned long 
  2330 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  product         4    8[COMRAM] unsigned long 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  4    0[COMRAM] unsigned long 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2342 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;Total ram usage:       12 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 2
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_get_color_code
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text9
  2357   000D36                     __ptext9:
  2358                           	callstack 0
  2359   000D36                     ___lmul:
  2360                           	callstack 27
  2361   000D36  0E00               	movlw	0
  2362   000D38  6E09               	movwf	___lmul@product^0,c
  2363   000D3A  0E00               	movlw	0
  2364   000D3C  6E0A               	movwf	(___lmul@product+1)^0,c
  2365   000D3E  0E00               	movlw	0
  2366   000D40  6E0B               	movwf	(___lmul@product+2)^0,c
  2367   000D42  0E00               	movlw	0
  2368   000D44  6E0C               	movwf	(___lmul@product+3)^0,c
  2369   000D46                     l2213:
  2370   000D46  A001               	btfss	___lmul@multiplier^0,0,c
  2371   000D48  EFA8  F006         	goto	u1201
  2372   000D4C  EFAA  F006         	goto	u1200
  2373   000D50                     u1201:
  2374   000D50  EFB2  F006         	goto	l2217
  2375   000D54                     u1200:
  2376   000D54  5005               	movf	___lmul@multiplicand^0,w,c
  2377   000D56  2609               	addwf	___lmul@product^0,f,c
  2378   000D58  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  2379   000D5A  220A               	addwfc	(___lmul@product+1)^0,f,c
  2380   000D5C  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  2381   000D5E  220B               	addwfc	(___lmul@product+2)^0,f,c
  2382   000D60  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  2383   000D62  220C               	addwfc	(___lmul@product+3)^0,f,c
  2384   000D64                     l2217:
  2385   000D64  90D8               	bcf	status,0,c
  2386   000D66  3605               	rlcf	___lmul@multiplicand^0,f,c
  2387   000D68  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2388   000D6A  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2389   000D6C  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2390   000D6E  90D8               	bcf	status,0,c
  2391   000D70  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  2392   000D72  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  2393   000D74  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  2394   000D76  3201               	rrcf	___lmul@multiplier^0,f,c
  2395   000D78  5001               	movf	___lmul@multiplier^0,w,c
  2396   000D7A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  2397   000D7C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  2398   000D7E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  2399   000D80  A4D8               	btfss	status,2,c
  2400   000D82  EFC5  F006         	goto	u1211
  2401   000D86  EFC7  F006         	goto	u1210
  2402   000D8A                     u1211:
  2403   000D8A  EFA3  F006         	goto	l2213
  2404   000D8E                     u1210:
  2405   000D8E  C009  F001         	movff	___lmul@product,?___lmul
  2406   000D92  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  2407   000D96  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  2408   000D9A  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  2409   000D9E  0012               	return		;funcret
  2410   000DA0                     __end_of___lmul:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function ___lldiv *****************
  2414 ;; Defined at:
  2415 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  dividend        4   12[COMRAM] unsigned long 
  2418 ;;  divisor         4   16[COMRAM] unsigned long 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  quotient        4   20[COMRAM] unsigned long 
  2421 ;;  counter         1   24[COMRAM] unsigned char 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  4   12[COMRAM] unsigned long 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2431 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2432 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2434 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2435 ;;Total ram usage:       13 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 2
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_get_color_code
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text10
  2446   000A68                     __ptext10:
  2447                           	callstack 0
  2448   000A68                     ___lldiv:
  2449                           	callstack 27
  2450   000A68  0E00               	movlw	0
  2451   000A6A  6E15               	movwf	___lldiv@quotient^0,c
  2452   000A6C  0E00               	movlw	0
  2453   000A6E  6E16               	movwf	(___lldiv@quotient+1)^0,c
  2454   000A70  0E00               	movlw	0
  2455   000A72  6E17               	movwf	(___lldiv@quotient+2)^0,c
  2456   000A74  0E00               	movlw	0
  2457   000A76  6E18               	movwf	(___lldiv@quotient+3)^0,c
  2458   000A78  5011               	movf	___lldiv@divisor^0,w,c
  2459   000A7A  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  2460   000A7C  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  2461   000A7E  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  2462   000A80  B4D8               	btfsc	status,2,c
  2463   000A82  EF45  F005         	goto	u1221
  2464   000A86  EF47  F005         	goto	u1220
  2465   000A8A                     u1221:
  2466   000A8A  EF7D  F005         	goto	l433
  2467   000A8E                     u1220:
  2468   000A8E  0E01               	movlw	1
  2469   000A90  6E19               	movwf	___lldiv@counter^0,c
  2470   000A92  EF51  F005         	goto	l2229
  2471   000A96                     l2227:
  2472   000A96  90D8               	bcf	status,0,c
  2473   000A98  3611               	rlcf	___lldiv@divisor^0,f,c
  2474   000A9A  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  2475   000A9C  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  2476   000A9E  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  2477   000AA0  2A19               	incf	___lldiv@counter^0,f,c
  2478   000AA2                     l2229:
  2479   000AA2  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  2480   000AA4  EF56  F005         	goto	u1231
  2481   000AA8  EF58  F005         	goto	u1230
  2482   000AAC                     u1231:
  2483   000AAC  EF4B  F005         	goto	l2227
  2484   000AB0                     u1230:
  2485   000AB0                     l2231:
  2486   000AB0  90D8               	bcf	status,0,c
  2487   000AB2  3615               	rlcf	___lldiv@quotient^0,f,c
  2488   000AB4  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  2489   000AB6  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  2490   000AB8  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  2491   000ABA  5011               	movf	___lldiv@divisor^0,w,c
  2492   000ABC  5C0D               	subwf	___lldiv@dividend^0,w,c
  2493   000ABE  5012               	movf	(___lldiv@divisor+1)^0,w,c
  2494   000AC0  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  2495   000AC2  5013               	movf	(___lldiv@divisor+2)^0,w,c
  2496   000AC4  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  2497   000AC6  5014               	movf	(___lldiv@divisor+3)^0,w,c
  2498   000AC8  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  2499   000ACA  A0D8               	btfss	status,0,c
  2500   000ACC  EF6A  F005         	goto	u1241
  2501   000AD0  EF6C  F005         	goto	u1240
  2502   000AD4                     u1241:
  2503   000AD4  EF75  F005         	goto	l2239
  2504   000AD8                     u1240:
  2505   000AD8  5011               	movf	___lldiv@divisor^0,w,c
  2506   000ADA  5E0D               	subwf	___lldiv@dividend^0,f,c
  2507   000ADC  5012               	movf	(___lldiv@divisor+1)^0,w,c
  2508   000ADE  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  2509   000AE0  5013               	movf	(___lldiv@divisor+2)^0,w,c
  2510   000AE2  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  2511   000AE4  5014               	movf	(___lldiv@divisor+3)^0,w,c
  2512   000AE6  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  2513   000AE8  8015               	bsf	___lldiv@quotient^0,0,c
  2514   000AEA                     l2239:
  2515   000AEA  90D8               	bcf	status,0,c
  2516   000AEC  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  2517   000AEE  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  2518   000AF0  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  2519   000AF2  3211               	rrcf	___lldiv@divisor^0,f,c
  2520   000AF4  2E19               	decfsz	___lldiv@counter^0,f,c
  2521   000AF6  EF58  F005         	goto	l2231
  2522   000AFA                     l433:
  2523   000AFA  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  2524   000AFE  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  2525   000B02  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  2526   000B06  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  2527   000B0A  0012               	return		;funcret
  2528   000B0C                     __end_of___lldiv:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function _color_click_init *****************
  2532 ;; Defined at:
  2533 ;;		line 30 in file "color.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;		None
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2549 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2551 ;;Total ram usage:        1 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 6
  2554 ;; This function calls:
  2555 ;;		_I2C_2_Master_Init
  2556 ;;		_calibrate_black
  2557 ;;		_calibrate_white
  2558 ;;		_color_writetoaddr
  2559 ;; This function is called by:
  2560 ;;		_main
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text11
  2565   0006A8                     __ptext11:
  2566                           	callstack 0
  2567   0006A8                     _color_click_init:
  2568                           	callstack 24
  2569   0006A8                     
  2570                           ;color.c: 33:     I2C_2_Master_Init();
  2571   0006A8  EC26  F008         	call	_I2C_2_Master_Init	;wreg free
  2572   0006AC                     
  2573                           ;color.c: 36:   color_writetoaddr(0x00, 0x01);
  2574   0006AC  0E01               	movlw	1
  2575   0006AE  6E03               	movwf	color_writetoaddr@value^0,c
  2576   0006B0  0E00               	movlw	0
  2577   0006B2  EC62  F008         	call	_color_writetoaddr
  2578   0006B6                     
  2579                           ;color.c: 37:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2580   0006B6  0E3F               	movlw	63
  2581   0006B8  6E14               	movwf	??_color_click_init^0,c
  2582   0006BA  0E55               	movlw	85
  2583   0006BC                     u2137:
  2584   0006BC  2EE8               	decfsz	wreg,f,c
  2585   0006BE  D7FE               	bra	u2137
  2586   0006C0  2E14               	decfsz	??_color_click_init^0,f,c
  2587   0006C2  D7FC               	bra	u2137
  2588   0006C4  F000               	nop	
  2589   0006C6                     
  2590                           ;color.c: 40:  color_writetoaddr(0x00, 0x03);
  2591   0006C6  0E03               	movlw	3
  2592   0006C8  6E03               	movwf	color_writetoaddr@value^0,c
  2593   0006CA  0E00               	movlw	0
  2594   0006CC  EC62  F008         	call	_color_writetoaddr
  2595   0006D0                     
  2596                           ;color.c: 43:  color_writetoaddr(0x01, 0xD5);
  2597   0006D0  0ED5               	movlw	213
  2598   0006D2  6E03               	movwf	color_writetoaddr@value^0,c
  2599   0006D4  0E01               	movlw	1
  2600   0006D6  EC62  F008         	call	_color_writetoaddr
  2601   0006DA                     
  2602                           ;color.c: 45:     TRISFbits.TRISF7 = 0;
  2603   0006DA  9E86               	bcf	134,7,c	;volatile
  2604   0006DC                     
  2605                           ;color.c: 46:     TRISGbits.TRISG1 = 0;
  2606   0006DC  9287               	bcf	135,1,c	;volatile
  2607   0006DE                     
  2608                           ;color.c: 47:     TRISAbits.TRISA4 = 0;
  2609   0006DE  9881               	bcf	129,4,c	;volatile
  2610   0006E0                     
  2611                           ;color.c: 49:     Color_rules[0] = Red_rule;
  2612   0006E0  EE20  F0B4         	lfsr	2,_Red_rule
  2613   0006E4  EE11  F000         	lfsr	1,_Color_rules
  2614   0006E8  0E0B               	movlw	11
  2615   0006EA                     u1251:
  2616   0006EA  CFDB FFE3          	movff	plusw2,plusw1
  2617   0006EE  06E8               	decf	wreg,f,c
  2618   0006F0  E2FC               	bc	u1251
  2619   0006F2                     
  2620                           ;color.c: 50:     Color_rules[1] = Green_rule;
  2621   0006F2  EE20  F0A8         	lfsr	2,_Green_rule
  2622   0006F6  EE11  F00C         	lfsr	1,_Color_rules+12
  2623   0006FA  0E0B               	movlw	11
  2624   0006FC                     u1261:
  2625   0006FC  CFDB FFE3          	movff	plusw2,plusw1
  2626   000700  06E8               	decf	wreg,f,c
  2627   000702  E2FC               	bc	u1261
  2628   000704                     
  2629                           ;color.c: 51:     Color_rules[2] = Blue_rule;
  2630   000704  EE20  F09C         	lfsr	2,_Blue_rule
  2631   000708  EE11  F018         	lfsr	1,_Color_rules+24
  2632   00070C  0E0B               	movlw	11
  2633   00070E                     u1271:
  2634   00070E  CFDB FFE3          	movff	plusw2,plusw1
  2635   000712  06E8               	decf	wreg,f,c
  2636   000714  E2FC               	bc	u1271
  2637   000716                     
  2638                           ;color.c: 52:     Color_rules[3] = Yellow_rule;
  2639   000716  EE20  F090         	lfsr	2,_Yellow_rule
  2640   00071A  EE11  F024         	lfsr	1,_Color_rules+36
  2641   00071E  0E0B               	movlw	11
  2642   000720                     u1281:
  2643   000720  CFDB FFE3          	movff	plusw2,plusw1
  2644   000724  06E8               	decf	wreg,f,c
  2645   000726  E2FC               	bc	u1281
  2646   000728                     
  2647                           ;color.c: 53:     Color_rules[4] = Pink_rule;
  2648   000728  EE20  F084         	lfsr	2,_Pink_rule
  2649   00072C  EE11  F030         	lfsr	1,_Color_rules+48
  2650   000730  0E0B               	movlw	11
  2651   000732                     u1291:
  2652   000732  CFDB FFE3          	movff	plusw2,plusw1
  2653   000736  06E8               	decf	wreg,f,c
  2654   000738  E2FC               	bc	u1291
  2655   00073A                     
  2656                           ;color.c: 54:     Color_rules[5] = Orange_rule;
  2657   00073A  EE20  F078         	lfsr	2,_Orange_rule
  2658   00073E  EE11  F03C         	lfsr	1,_Color_rules+60
  2659   000742  0E0B               	movlw	11
  2660   000744                     u1301:
  2661   000744  CFDB FFE3          	movff	plusw2,plusw1
  2662   000748  06E8               	decf	wreg,f,c
  2663   00074A  E2FC               	bc	u1301
  2664   00074C                     
  2665                           ;color.c: 55:     Color_rules[6] = Lightblue_rule;
  2666   00074C  EE20  F06C         	lfsr	2,_Lightblue_rule
  2667   000750  EE11  F048         	lfsr	1,_Color_rules+72
  2668   000754  0E0B               	movlw	11
  2669   000756                     u1311:
  2670   000756  CFDB FFE3          	movff	plusw2,plusw1
  2671   00075A  06E8               	decf	wreg,f,c
  2672   00075C  E2FC               	bc	u1311
  2673   00075E                     
  2674                           ;color.c: 56:     Color_rules[7] = White_rule;
  2675   00075E  EE21  F0DC         	lfsr	2,_White_rule
  2676   000762  EE11  F054         	lfsr	1,_Color_rules+84
  2677   000766  0E0B               	movlw	11
  2678   000768                     u1321:
  2679   000768  CFDB FFE3          	movff	plusw2,plusw1
  2680   00076C  06E8               	decf	wreg,f,c
  2681   00076E  E2FC               	bc	u1321
  2682   000770                     
  2683                           ;color.c: 57:     Color_rules[8] = Black_rule;
  2684   000770  EE21  F0D0         	lfsr	2,_Black_rule
  2685   000774  EE11  F060         	lfsr	1,_Color_rules+96
  2686   000778  0E0B               	movlw	11
  2687   00077A                     u1331:
  2688   00077A  CFDB FFE3          	movff	plusw2,plusw1
  2689   00077E  06E8               	decf	wreg,f,c
  2690   000780  E2FC               	bc	u1331
  2691   000782                     
  2692                           ;color.c: 66:     TRISFbits.TRISF3=1;
  2693   000782  8686               	bsf	134,3,c	;volatile
  2694   000784                     
  2695                           ;color.c: 67:     ANSELFbits.ANSELF3=0;
  2696   000784  010E               	movlb	14	; () banked
  2697   000786  97B4               	bcf	180,3,b	;volatile
  2698   000788                     
  2699                           ; BSR set to: 14
  2700                           ;color.c: 68:     TRISFbits.TRISF2=1;
  2701   000788  8486               	bsf	134,2,c	;volatile
  2702   00078A                     
  2703                           ; BSR set to: 14
  2704                           ;color.c: 69:     ANSELFbits.ANSELF2=0;
  2705   00078A  95B4               	bcf	180,2,b	;volatile
  2706   00078C                     l67:
  2707   00078C  A68E               	btfss	142,3,c	;volatile
  2708   00078E  EFCB  F003         	goto	u1341
  2709   000792  EFCD  F003         	goto	u1340
  2710   000796                     u1341:
  2711   000796  EFD4  F003         	goto	l71
  2712   00079A                     u1340:
  2713   00079A  B48E               	btfsc	142,2,c	;volatile
  2714   00079C  EFD2  F003         	goto	u1351
  2715   0007A0  EFD4  F003         	goto	u1350
  2716   0007A4                     u1351:
  2717   0007A4  EFC6  F003         	goto	l67
  2718   0007A8                     u1350:
  2719   0007A8                     l71:
  2720                           
  2721                           ;color.c: 72:     if(!PORTFbits.RF2){
  2722   0007A8  B48E               	btfsc	142,2,c	;volatile
  2723   0007AA  EFD9  F003         	goto	u1361
  2724   0007AE  EFDB  F003         	goto	u1360
  2725   0007B2                     u1361:
  2726   0007B2  EFDD  F003         	goto	l2289
  2727   0007B6                     u1360:
  2728   0007B6  EFEF  F003         	goto	l73
  2729   0007BA                     l2289:
  2730                           
  2731                           ;color.c: 75:     calibrate_white();
  2732   0007BA  ECDF  F004         	call	_calibrate_white	;wreg free
  2733   0007BE                     l74:
  2734   0007BE  B68E               	btfsc	142,3,c	;volatile
  2735   0007C0  EFE4  F003         	goto	u1371
  2736   0007C4  EFE6  F003         	goto	u1370
  2737   0007C8                     u1371:
  2738   0007C8  EFDF  F003         	goto	l74
  2739   0007CC                     u1370:
  2740   0007CC                     
  2741                           ;color.c: 77:     calibrate_black();
  2742   0007CC  ECF0  F003         	call	_calibrate_black	;wreg free
  2743   0007D0                     l77:
  2744   0007D0  B68E               	btfsc	142,3,c	;volatile
  2745   0007D2  EFED  F003         	goto	u1381
  2746   0007D6  EFEF  F003         	goto	u1380
  2747   0007DA                     u1381:
  2748   0007DA  EFE8  F003         	goto	l77
  2749   0007DE                     u1380:
  2750   0007DE                     l73:
  2751   0007DE  0012               	return		;funcret
  2752   0007E0                     __end_of_color_click_init:
  2753                           	callstack 0
  2754                           
  2755 ;; *************** function _color_writetoaddr *****************
  2756 ;; Defined at:
  2757 ;;		line 82 in file "color.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  address         1    wreg     unsigned char 
  2760 ;;  value           1    2[COMRAM] unsigned char 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  address         1    3[COMRAM] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, status,2, status,0, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2772 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2776 ;;Total ram usage:        2 bytes
  2777 ;; Hardware stack levels used: 1
  2778 ;; Hardware stack levels required when called: 4
  2779 ;; This function calls:
  2780 ;;		_I2C_2_Master_Start
  2781 ;;		_I2C_2_Master_Stop
  2782 ;;		_I2C_2_Master_Write
  2783 ;; This function is called by:
  2784 ;;		_color_click_init
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text12
  2789   0010C4                     __ptext12:
  2790                           	callstack 0
  2791   0010C4                     _color_writetoaddr:
  2792                           	callstack 25
  2793                           
  2794                           ;incstack = 0
  2795                           ;color_writetoaddr@address stored from wreg
  2796   0010C4  6E04               	movwf	color_writetoaddr@address^0,c
  2797   0010C6                     
  2798                           ;color.c: 83:     I2C_2_Master_Start();
  2799   0010C6  ECA0  F008         	call	_I2C_2_Master_Start	;wreg free
  2800                           
  2801                           ;color.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2802   0010CA  0E52               	movlw	82
  2803   0010CC  EC8F  F008         	call	_I2C_2_Master_Write
  2804                           
  2805                           ;color.c: 85:     I2C_2_Master_Write(0x80 | address);
  2806   0010D0  5004               	movf	color_writetoaddr@address^0,w,c
  2807   0010D2  0980               	iorlw	128
  2808   0010D4  EC8F  F008         	call	_I2C_2_Master_Write
  2809                           
  2810                           ;color.c: 86:     I2C_2_Master_Write(value);
  2811   0010D8  5003               	movf	color_writetoaddr@value^0,w,c
  2812   0010DA  EC8F  F008         	call	_I2C_2_Master_Write
  2813                           
  2814                           ;color.c: 87:     I2C_2_Master_Stop();
  2815   0010DE  EC9B  F008         	call	_I2C_2_Master_Stop	;wreg free
  2816   0010E2  0012               	return		;funcret
  2817   0010E4                     __end_of_color_writetoaddr:
  2818                           	callstack 0
  2819                           
  2820 ;; *************** function _calibrate_white *****************
  2821 ;; Defined at:
  2822 ;;		line 229 in file "color.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2840 ;;Total ram usage:        2 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 5
  2843 ;; This function calls:
  2844 ;;		_color_read_Blue
  2845 ;;		_color_read_Green
  2846 ;;		_color_read_Red
  2847 ;;		_set_led_color
  2848 ;; This function is called by:
  2849 ;;		_color_click_init
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text13
  2854   0009BE                     __ptext13:
  2855                           	callstack 0
  2856   0009BE                     _calibrate_white:
  2857                           	callstack 24
  2858   0009BE                     
  2859                           ;color.c: 230:     set_led_color(0b100);
  2860   0009BE  0E00               	movlw	0
  2861   0009C0  6E02               	movwf	(set_led_color@color+1)^0,c
  2862   0009C2  0E04               	movlw	4
  2863   0009C4  6E01               	movwf	set_led_color@color^0,c
  2864   0009C6  ECCA  F007         	call	_set_led_color	;wreg free
  2865   0009CA                     
  2866                           ;color.c: 231:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  2867   0009CA  0E12               	movlw	18
  2868   0009CC  6E0D               	movwf	(??_calibrate_white+1)^0,c
  2869   0009CE  0EDC               	movlw	220
  2870   0009D0  6E0C               	movwf	??_calibrate_white^0,c
  2871   0009D2  0E60               	movlw	96
  2872   0009D4                     u2147:
  2873   0009D4  2EE8               	decfsz	wreg,f,c
  2874   0009D6  D7FE               	bra	u2147
  2875   0009D8  2E0C               	decfsz	??_calibrate_white^0,f,c
  2876   0009DA  D7FC               	bra	u2147
  2877   0009DC  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  2878   0009DE  D7FA               	bra	u2147
  2879   0009E0                     
  2880                           ;color.c: 232:     White_setup.R = color_read_Red();
  2881   0009E0  EC2A  F007         	call	_color_read_Red	;wreg free
  2882   0009E4  C005  F060         	movff	?_color_read_Red,_White_setup
  2883   0009E8  C006  F061         	movff	?_color_read_Red+1,_White_setup+1
  2884   0009EC  0100               	movlb	0	; () banked
  2885   0009EE  6B62               	clrf	(_White_setup+2)& (0+255),b
  2886   0009F0  6B63               	clrf	(_White_setup+3)& (0+255),b
  2887   0009F2                     
  2888                           ; BSR set to: 0
  2889                           ;color.c: 233:     set_led_color(0b010);
  2890   0009F2  0E00               	movlw	0
  2891   0009F4  6E02               	movwf	(set_led_color@color+1)^0,c
  2892   0009F6  0E02               	movlw	2
  2893   0009F8  6E01               	movwf	set_led_color@color^0,c
  2894   0009FA  ECCA  F007         	call	_set_led_color	;wreg free
  2895   0009FE                     
  2896                           ;color.c: 234:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  2897   0009FE  0E12               	movlw	18
  2898   000A00  6E0D               	movwf	(??_calibrate_white+1)^0,c
  2899   000A02  0EDC               	movlw	220
  2900   000A04  6E0C               	movwf	??_calibrate_white^0,c
  2901   000A06  0E60               	movlw	96
  2902   000A08                     u2157:
  2903   000A08  2EE8               	decfsz	wreg,f,c
  2904   000A0A  D7FE               	bra	u2157
  2905   000A0C  2E0C               	decfsz	??_calibrate_white^0,f,c
  2906   000A0E  D7FC               	bra	u2157
  2907   000A10  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  2908   000A12  D7FA               	bra	u2157
  2909                           
  2910                           ;color.c: 235:     White_setup.G = color_read_Green();
  2911   000A14  EC52  F007         	call	_color_read_Green	;wreg free
  2912   000A18  C005  F064         	movff	?_color_read_Green,_White_setup+4
  2913   000A1C  C006  F065         	movff	?_color_read_Green+1,_White_setup+5
  2914   000A20  0100               	movlb	0	; () banked
  2915   000A22  6B66               	clrf	(_White_setup+6)& (0+255),b
  2916   000A24  6B67               	clrf	(_White_setup+7)& (0+255),b
  2917   000A26                     
  2918                           ; BSR set to: 0
  2919                           ;color.c: 236:     set_led_color(0b001);
  2920   000A26  0E00               	movlw	0
  2921   000A28  6E02               	movwf	(set_led_color@color+1)^0,c
  2922   000A2A  0E01               	movlw	1
  2923   000A2C  6E01               	movwf	set_led_color@color^0,c
  2924   000A2E  ECCA  F007         	call	_set_led_color	;wreg free
  2925   000A32                     
  2926                           ;color.c: 237:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  2927   000A32  0E12               	movlw	18
  2928   000A34  6E0D               	movwf	(??_calibrate_white+1)^0,c
  2929   000A36  0EDC               	movlw	220
  2930   000A38  6E0C               	movwf	??_calibrate_white^0,c
  2931   000A3A  0E60               	movlw	96
  2932   000A3C                     u2167:
  2933   000A3C  2EE8               	decfsz	wreg,f,c
  2934   000A3E  D7FE               	bra	u2167
  2935   000A40  2E0C               	decfsz	??_calibrate_white^0,f,c
  2936   000A42  D7FC               	bra	u2167
  2937   000A44  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  2938   000A46  D7FA               	bra	u2167
  2939   000A48                     
  2940                           ;color.c: 238:     White_setup.B = color_read_Blue();
  2941   000A48  ECA2  F007         	call	_color_read_Blue	;wreg free
  2942   000A4C  C005  F068         	movff	?_color_read_Blue,_White_setup+8
  2943   000A50  C006  F069         	movff	?_color_read_Blue+1,_White_setup+9
  2944   000A54  0100               	movlb	0	; () banked
  2945   000A56  6B6A               	clrf	(_White_setup+10)& (0+255),b
  2946   000A58  6B6B               	clrf	(_White_setup+11)& (0+255),b
  2947   000A5A                     
  2948                           ; BSR set to: 0
  2949                           ;color.c: 239:     set_led_color(0b000);
  2950   000A5A  0E00               	movlw	0
  2951   000A5C  6E02               	movwf	(set_led_color@color+1)^0,c
  2952   000A5E  0E00               	movlw	0
  2953   000A60  6E01               	movwf	set_led_color@color^0,c
  2954   000A62  ECCA  F007         	call	_set_led_color	;wreg free
  2955   000A66  0012               	return		;funcret
  2956   000A68                     __end_of_calibrate_white:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _calibrate_black *****************
  2960 ;; Defined at:
  2961 ;;		line 209 in file "color.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  clear2          2   17[COMRAM] unsigned int 
  2966 ;;  clear1          2   15[COMRAM] unsigned int 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;Total ram usage:        6 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 5
  2983 ;; This function calls:
  2984 ;;		___lwdiv
  2985 ;;		_color_read_Blue
  2986 ;;		_color_read_Clear
  2987 ;;		_color_read_Green
  2988 ;;		_color_read_Red
  2989 ;;		_set_led_color
  2990 ;; This function is called by:
  2991 ;;		_color_click_init
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text14
  2996   0007E0                     __ptext14:
  2997                           	callstack 0
  2998   0007E0                     _calibrate_black:
  2999                           	callstack 24
  3000   0007E0                     
  3001                           ;color.c: 210:     set_led_color(0b100);
  3002   0007E0  0E00               	movlw	0
  3003   0007E2  6E02               	movwf	(set_led_color@color+1)^0,c
  3004   0007E4  0E04               	movlw	4
  3005   0007E6  6E01               	movwf	set_led_color@color^0,c
  3006   0007E8  ECCA  F007         	call	_set_led_color	;wreg free
  3007   0007EC                     
  3008                           ;color.c: 211:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3009   0007EC  0E12               	movlw	18
  3010   0007EE  6E0F               	movwf	(??_calibrate_black+1)^0,c
  3011   0007F0  0EDC               	movlw	220
  3012   0007F2  6E0E               	movwf	??_calibrate_black^0,c
  3013   0007F4  0E60               	movlw	96
  3014   0007F6                     u2177:
  3015   0007F6  2EE8               	decfsz	wreg,f,c
  3016   0007F8  D7FE               	bra	u2177
  3017   0007FA  2E0E               	decfsz	??_calibrate_black^0,f,c
  3018   0007FC  D7FC               	bra	u2177
  3019   0007FE  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  3020   000800  D7FA               	bra	u2177
  3021   000802                     
  3022                           ;color.c: 212:     Black_setup.R = color_read_Red();
  3023   000802  EC2A  F007         	call	_color_read_Red	;wreg free
  3024   000806  C005  F04D         	movff	?_color_read_Red,_Black_setup
  3025   00080A  C006  F04E         	movff	?_color_read_Red+1,_Black_setup+1
  3026   00080E  6A4F               	clrf	(_Black_setup+2)^0,c
  3027   000810  6A50               	clrf	(_Black_setup+3)^0,c
  3028   000812                     
  3029                           ;color.c: 213:     set_led_color(0b010);
  3030   000812  0E00               	movlw	0
  3031   000814  6E02               	movwf	(set_led_color@color+1)^0,c
  3032   000816  0E02               	movlw	2
  3033   000818  6E01               	movwf	set_led_color@color^0,c
  3034   00081A  ECCA  F007         	call	_set_led_color	;wreg free
  3035   00081E                     
  3036                           ;color.c: 214:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3037   00081E  0E12               	movlw	18
  3038   000820  6E0F               	movwf	(??_calibrate_black+1)^0,c
  3039   000822  0EDC               	movlw	220
  3040   000824  6E0E               	movwf	??_calibrate_black^0,c
  3041   000826  0E60               	movlw	96
  3042   000828                     u2187:
  3043   000828  2EE8               	decfsz	wreg,f,c
  3044   00082A  D7FE               	bra	u2187
  3045   00082C  2E0E               	decfsz	??_calibrate_black^0,f,c
  3046   00082E  D7FC               	bra	u2187
  3047   000830  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  3048   000832  D7FA               	bra	u2187
  3049                           
  3050                           ;color.c: 215:     Black_setup.G = color_read_Green();
  3051   000834  EC52  F007         	call	_color_read_Green	;wreg free
  3052   000838  C005  F051         	movff	?_color_read_Green,_Black_setup+4
  3053   00083C  C006  F052         	movff	?_color_read_Green+1,_Black_setup+5
  3054   000840  6A53               	clrf	(_Black_setup+6)^0,c
  3055   000842  6A54               	clrf	(_Black_setup+7)^0,c
  3056   000844                     
  3057                           ;color.c: 216:     set_led_color(0b001);
  3058   000844  0E00               	movlw	0
  3059   000846  6E02               	movwf	(set_led_color@color+1)^0,c
  3060   000848  0E01               	movlw	1
  3061   00084A  6E01               	movwf	set_led_color@color^0,c
  3062   00084C  ECCA  F007         	call	_set_led_color	;wreg free
  3063   000850                     
  3064                           ;color.c: 217:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3065   000850  0E12               	movlw	18
  3066   000852  6E0F               	movwf	(??_calibrate_black+1)^0,c
  3067   000854  0EDC               	movlw	220
  3068   000856  6E0E               	movwf	??_calibrate_black^0,c
  3069   000858  0E60               	movlw	96
  3070   00085A                     u2197:
  3071   00085A  2EE8               	decfsz	wreg,f,c
  3072   00085C  D7FE               	bra	u2197
  3073   00085E  2E0E               	decfsz	??_calibrate_black^0,f,c
  3074   000860  D7FC               	bra	u2197
  3075   000862  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  3076   000864  D7FA               	bra	u2197
  3077   000866                     
  3078                           ;color.c: 218:     Black_setup.B = color_read_Blue();
  3079   000866  ECA2  F007         	call	_color_read_Blue	;wreg free
  3080   00086A  C005  F055         	movff	?_color_read_Blue,_Black_setup+8
  3081   00086E  C006  F056         	movff	?_color_read_Blue+1,_Black_setup+9
  3082   000872  6A57               	clrf	(_Black_setup+10)^0,c
  3083   000874  6A58               	clrf	(_Black_setup+11)^0,c
  3084   000876                     
  3085                           ;color.c: 219:     set_led_color(0b000);
  3086   000876  0E00               	movlw	0
  3087   000878  6E02               	movwf	(set_led_color@color+1)^0,c
  3088   00087A  0E00               	movlw	0
  3089   00087C  6E01               	movwf	set_led_color@color^0,c
  3090   00087E  ECCA  F007         	call	_set_led_color	;wreg free
  3091                           
  3092                           ;color.c: 220:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3093   000882  0E12               	movlw	18
  3094   000884  6E0F               	movwf	(??_calibrate_black+1)^0,c
  3095   000886  0EDC               	movlw	220
  3096   000888  6E0E               	movwf	??_calibrate_black^0,c
  3097   00088A  0E60               	movlw	96
  3098   00088C                     u2207:
  3099   00088C  2EE8               	decfsz	wreg,f,c
  3100   00088E  D7FE               	bra	u2207
  3101   000890  2E0E               	decfsz	??_calibrate_black^0,f,c
  3102   000892  D7FC               	bra	u2207
  3103   000894  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  3104   000896  D7FA               	bra	u2207
  3105   000898                     
  3106                           ;color.c: 221:     unsigned int clear1 = color_read_Clear();
  3107   000898  EC7A  F007         	call	_color_read_Clear	;wreg free
  3108   00089C  C005  F010         	movff	?_color_read_Clear,calibrate_black@clear1
  3109   0008A0  C006  F011         	movff	?_color_read_Clear+1,calibrate_black@clear1+1
  3110   0008A4                     
  3111                           ;color.c: 222:     set_led_color(0b111);
  3112   0008A4  0E00               	movlw	0
  3113   0008A6  6E02               	movwf	(set_led_color@color+1)^0,c
  3114   0008A8  0E07               	movlw	7
  3115   0008AA  6E01               	movwf	set_led_color@color^0,c
  3116   0008AC  ECCA  F007         	call	_set_led_color	;wreg free
  3117   0008B0                     
  3118                           ;color.c: 223:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  3119   0008B0  0E12               	movlw	18
  3120   0008B2  6E0F               	movwf	(??_calibrate_black+1)^0,c
  3121   0008B4  0EDC               	movlw	220
  3122   0008B6  6E0E               	movwf	??_calibrate_black^0,c
  3123   0008B8  0E60               	movlw	96
  3124   0008BA                     u2217:
  3125   0008BA  2EE8               	decfsz	wreg,f,c
  3126   0008BC  D7FE               	bra	u2217
  3127   0008BE  2E0E               	decfsz	??_calibrate_black^0,f,c
  3128   0008C0  D7FC               	bra	u2217
  3129   0008C2  2E0F               	decfsz	(??_calibrate_black+1)^0,f,c
  3130   0008C4  D7FA               	bra	u2217
  3131   0008C6                     
  3132                           ;color.c: 224:     unsigned int clear2 = color_read_Clear();
  3133   0008C6  EC7A  F007         	call	_color_read_Clear	;wreg free
  3134   0008CA  C005  F012         	movff	?_color_read_Clear,calibrate_black@clear2
  3135   0008CE  C006  F013         	movff	?_color_read_Clear+1,calibrate_black@clear2+1
  3136                           
  3137                           ;color.c: 225:     set_led_color(0b000);
  3138   0008D2  0E00               	movlw	0
  3139   0008D4  6E02               	movwf	(set_led_color@color+1)^0,c
  3140   0008D6  0E00               	movlw	0
  3141   0008D8  6E01               	movwf	set_led_color@color^0,c
  3142   0008DA  ECCA  F007         	call	_set_led_color	;wreg free
  3143   0008DE                     
  3144                           ;color.c: 226:     wall_coef = clear2/clear1/2;
  3145   0008DE  C012  F007         	movff	calibrate_black@clear2,___lwdiv@dividend
  3146   0008E2  C013  F008         	movff	calibrate_black@clear2+1,___lwdiv@dividend+1
  3147   0008E6  C010  F009         	movff	calibrate_black@clear1,___lwdiv@divisor
  3148   0008EA  C011  F00A         	movff	calibrate_black@clear1+1,___lwdiv@divisor+1
  3149   0008EE  EC61  F006         	call	___lwdiv	;wreg free
  3150   0008F2  90D8               	bcf	status,0,c
  3151   0008F4  3008               	rrcf	(?___lwdiv+1)^0,w,c
  3152   0008F6  6E0E               	movwf	??_calibrate_black^0,c
  3153   0008F8  3007               	rrcf	?___lwdiv^0,w,c
  3154   0008FA  6E59               	movwf	_wall_coef^0,c
  3155   0008FC  C00E  F05A         	movff	??_calibrate_black,_wall_coef+1
  3156   000900  0012               	return		;funcret
  3157   000902                     __end_of_calibrate_black:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _set_led_color *****************
  3161 ;; Defined at:
  3162 ;;		line 154 in file "color.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  color           2    0[COMRAM] unsigned int 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		None
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3180 ;;Total ram usage:        2 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 2
  3183 ;; This function calls:
  3184 ;;		Nothing
  3185 ;; This function is called by:
  3186 ;;		_get_color_code
  3187 ;;		_calibrate_black
  3188 ;;		_calibrate_white
  3189 ;;		_get_wall_presence
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text15
  3194   000F94                     __ptext15:
  3195                           	callstack 0
  3196   000F94                     _set_led_color:
  3197                           	callstack 27
  3198   000F94                     
  3199                           ;color.c: 158:     if(color & 0b100){
  3200   000F94  A401               	btfss	set_led_color@color^0,2,c
  3201   000F96  EFCF  F007         	goto	u1091
  3202   000F9A  EFD1  F007         	goto	u1090
  3203   000F9E                     u1091:
  3204   000F9E  EFD4  F007         	goto	l112
  3205   000FA2                     u1090:
  3206   000FA2                     
  3207                           ;color.c: 159:         LATGbits.LATG1 = 1;
  3208   000FA2  827F               	bsf	127,1,c	;volatile
  3209                           
  3210                           ;color.c: 160:     }else{
  3211   000FA4  EFD5  F007         	goto	l113
  3212   000FA8                     l112:
  3213                           
  3214                           ;color.c: 161:         LATGbits.LATG1 = 0;
  3215   000FA8  927F               	bcf	127,1,c	;volatile
  3216   000FAA                     l113:
  3217                           
  3218                           ;color.c: 163:     if(color & 0b010){
  3219   000FAA  A201               	btfss	set_led_color@color^0,1,c
  3220   000FAC  EFDA  F007         	goto	u1101
  3221   000FB0  EFDC  F007         	goto	u1100
  3222   000FB4                     u1101:
  3223   000FB4  EFDF  F007         	goto	l114
  3224   000FB8                     u1100:
  3225   000FB8                     
  3226                           ;color.c: 164:         LATAbits.LATA4 = 1;
  3227   000FB8  8879               	bsf	121,4,c	;volatile
  3228                           
  3229                           ;color.c: 165:     }else{
  3230   000FBA  EFE0  F007         	goto	l115
  3231   000FBE                     l114:
  3232                           
  3233                           ;color.c: 166:         LATAbits.LATA4 = 0;
  3234   000FBE  9879               	bcf	121,4,c	;volatile
  3235   000FC0                     l115:
  3236                           
  3237                           ;color.c: 168:     if(color & 0b001){
  3238   000FC0  A001               	btfss	set_led_color@color^0,0,c
  3239   000FC2  EFE5  F007         	goto	u1111
  3240   000FC6  EFE7  F007         	goto	u1110
  3241   000FCA                     u1111:
  3242   000FCA  EFEA  F007         	goto	l116
  3243   000FCE                     u1110:
  3244   000FCE                     
  3245                           ;color.c: 169:         LATFbits.LATF7 = 1;
  3246   000FCE  8E7E               	bsf	126,7,c	;volatile
  3247                           
  3248                           ;color.c: 170:     }else{
  3249   000FD0  EFEB  F007         	goto	l118
  3250   000FD4                     l116:
  3251                           
  3252                           ;color.c: 171:         LATFbits.LATF7 = 0;
  3253   000FD4  9E7E               	bcf	126,7,c	;volatile
  3254   000FD6                     l118:
  3255   000FD6  0012               	return		;funcret
  3256   000FD8                     __end_of_set_led_color:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function _color_read_Red *****************
  3260 ;; Defined at:
  3261 ;;		line 90 in file "color.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  tmp             2    9[COMRAM] unsigned int 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  2    4[COMRAM] unsigned int 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;Total ram usage:        7 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 4
  3282 ;; This function calls:
  3283 ;;		_I2C_2_Master_Read
  3284 ;;		_I2C_2_Master_RepStart
  3285 ;;		_I2C_2_Master_Start
  3286 ;;		_I2C_2_Master_Stop
  3287 ;;		_I2C_2_Master_Write
  3288 ;; This function is called by:
  3289 ;;		_get_color_code
  3290 ;;		_calibrate_black
  3291 ;;		_calibrate_white
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text16
  3296   000E54                     __ptext16:
  3297                           	callstack 0
  3298   000E54                     _color_read_Red:
  3299                           	callstack 25
  3300   000E54                     
  3301                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3302   000E54  ECA0  F008         	call	_I2C_2_Master_Start	;wreg free
  3303                           
  3304                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3305   000E58  0E52               	movlw	82
  3306   000E5A  EC8F  F008         	call	_I2C_2_Master_Write
  3307                           
  3308                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x16);
  3309   000E5E  0EB6               	movlw	182
  3310   000E60  EC8F  F008         	call	_I2C_2_Master_Write
  3311                           
  3312                           ;color.c: 96:  I2C_2_Master_RepStart();
  3313   000E64  ECA5  F008         	call	_I2C_2_Master_RepStart	;wreg free
  3314                           
  3315                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3316   000E68  0E53               	movlw	83
  3317   000E6A  EC8F  F008         	call	_I2C_2_Master_Write
  3318                           
  3319                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3320   000E6E  0E01               	movlw	1
  3321   000E70  ECEC  F007         	call	_I2C_2_Master_Read
  3322   000E74  6E07               	movwf	??_color_read_Red^0,c
  3323   000E76  5007               	movf	??_color_read_Red^0,w,c
  3324   000E78  6E0A               	movwf	color_read_Red@tmp^0,c
  3325   000E7A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3326                           
  3327                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3328   000E7C  0E00               	movlw	0
  3329   000E7E  ECEC  F007         	call	_I2C_2_Master_Read
  3330   000E82  6E07               	movwf	??_color_read_Red^0,c
  3331   000E84  5007               	movf	??_color_read_Red^0,w,c
  3332   000E86  6E09               	movwf	(??_color_read_Red+2)^0,c
  3333   000E88  6A08               	clrf	(??_color_read_Red+1)^0,c
  3334   000E8A  500A               	movf	color_read_Red@tmp^0,w,c
  3335   000E8C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3336   000E8E  6E0A               	movwf	color_read_Red@tmp^0,c
  3337   000E90  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3338   000E92  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3339   000E94  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3340                           
  3341                           ;color.c: 100:  I2C_2_Master_Stop();
  3342   000E96  EC9B  F008         	call	_I2C_2_Master_Stop	;wreg free
  3343   000E9A                     
  3344                           ;color.c: 101:  return tmp;
  3345   000E9A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3346   000E9E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3347   000EA2  0012               	return		;funcret
  3348   000EA4                     __end_of_color_read_Red:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function _color_read_Green *****************
  3352 ;; Defined at:
  3353 ;;		line 118 in file "color.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  tmp             2    9[COMRAM] unsigned int 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  2    4[COMRAM] unsigned int 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;Total ram usage:        7 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 4
  3374 ;; This function calls:
  3375 ;;		_I2C_2_Master_Read
  3376 ;;		_I2C_2_Master_RepStart
  3377 ;;		_I2C_2_Master_Start
  3378 ;;		_I2C_2_Master_Stop
  3379 ;;		_I2C_2_Master_Write
  3380 ;; This function is called by:
  3381 ;;		_get_color_code
  3382 ;;		_calibrate_black
  3383 ;;		_calibrate_white
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text17
  3388   000EA4                     __ptext17:
  3389                           	callstack 0
  3390   000EA4                     _color_read_Green:
  3391                           	callstack 25
  3392   000EA4                     
  3393                           ;color.c: 120:  unsigned int tmp;;color.c: 121:  I2C_2_Master_Start();
  3394   000EA4  ECA0  F008         	call	_I2C_2_Master_Start	;wreg free
  3395                           
  3396                           ;color.c: 122:  I2C_2_Master_Write(0x52 | 0x00);
  3397   000EA8  0E52               	movlw	82
  3398   000EAA  EC8F  F008         	call	_I2C_2_Master_Write
  3399                           
  3400                           ;color.c: 123:  I2C_2_Master_Write(0xA0 | 0x18);
  3401   000EAE  0EB8               	movlw	184
  3402   000EB0  EC8F  F008         	call	_I2C_2_Master_Write
  3403                           
  3404                           ;color.c: 124:  I2C_2_Master_RepStart();
  3405   000EB4  ECA5  F008         	call	_I2C_2_Master_RepStart	;wreg free
  3406                           
  3407                           ;color.c: 125:  I2C_2_Master_Write(0x52 | 0x01);
  3408   000EB8  0E53               	movlw	83
  3409   000EBA  EC8F  F008         	call	_I2C_2_Master_Write
  3410                           
  3411                           ;color.c: 126:  tmp=I2C_2_Master_Read(1);
  3412   000EBE  0E01               	movlw	1
  3413   000EC0  ECEC  F007         	call	_I2C_2_Master_Read
  3414   000EC4  6E07               	movwf	??_color_read_Green^0,c
  3415   000EC6  5007               	movf	??_color_read_Green^0,w,c
  3416   000EC8  6E0A               	movwf	color_read_Green@tmp^0,c
  3417   000ECA  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3418                           
  3419                           ;color.c: 127:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3420   000ECC  0E00               	movlw	0
  3421   000ECE  ECEC  F007         	call	_I2C_2_Master_Read
  3422   000ED2  6E07               	movwf	??_color_read_Green^0,c
  3423   000ED4  5007               	movf	??_color_read_Green^0,w,c
  3424   000ED6  6E09               	movwf	(??_color_read_Green+2)^0,c
  3425   000ED8  6A08               	clrf	(??_color_read_Green+1)^0,c
  3426   000EDA  500A               	movf	color_read_Green@tmp^0,w,c
  3427   000EDC  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3428   000EDE  6E0A               	movwf	color_read_Green@tmp^0,c
  3429   000EE0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3430   000EE2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3431   000EE4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3432                           
  3433                           ;color.c: 128:  I2C_2_Master_Stop();
  3434   000EE6  EC9B  F008         	call	_I2C_2_Master_Stop	;wreg free
  3435   000EEA                     
  3436                           ;color.c: 129:  return tmp;
  3437   000EEA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3438   000EEE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3439   000EF2  0012               	return		;funcret
  3440   000EF4                     __end_of_color_read_Green:
  3441                           	callstack 0
  3442                           
  3443 ;; *************** function _color_read_Clear *****************
  3444 ;; Defined at:
  3445 ;;		line 132 in file "color.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  tmp             2    9[COMRAM] unsigned int 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  2    4[COMRAM] unsigned int 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3460 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3461 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3462 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3463 ;;Total ram usage:        7 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 4
  3466 ;; This function calls:
  3467 ;;		_I2C_2_Master_Read
  3468 ;;		_I2C_2_Master_RepStart
  3469 ;;		_I2C_2_Master_Start
  3470 ;;		_I2C_2_Master_Stop
  3471 ;;		_I2C_2_Master_Write
  3472 ;; This function is called by:
  3473 ;;		_calibrate_black
  3474 ;;		_get_wall_presence
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text18
  3479   000EF4                     __ptext18:
  3480                           	callstack 0
  3481   000EF4                     _color_read_Clear:
  3482                           	callstack 25
  3483   000EF4                     
  3484                           ;color.c: 134:  unsigned int tmp;;color.c: 135:  I2C_2_Master_Start();
  3485   000EF4  ECA0  F008         	call	_I2C_2_Master_Start	;wreg free
  3486                           
  3487                           ;color.c: 136:  I2C_2_Master_Write(0x52 | 0x00);
  3488   000EF8  0E52               	movlw	82
  3489   000EFA  EC8F  F008         	call	_I2C_2_Master_Write
  3490                           
  3491                           ;color.c: 137:  I2C_2_Master_Write(0xA0 | 0x14);
  3492   000EFE  0EB4               	movlw	180
  3493   000F00  EC8F  F008         	call	_I2C_2_Master_Write
  3494                           
  3495                           ;color.c: 138:  I2C_2_Master_RepStart();
  3496   000F04  ECA5  F008         	call	_I2C_2_Master_RepStart	;wreg free
  3497                           
  3498                           ;color.c: 139:  I2C_2_Master_Write(0x52 | 0x01);
  3499   000F08  0E53               	movlw	83
  3500   000F0A  EC8F  F008         	call	_I2C_2_Master_Write
  3501                           
  3502                           ;color.c: 140:  tmp=I2C_2_Master_Read(1);
  3503   000F0E  0E01               	movlw	1
  3504   000F10  ECEC  F007         	call	_I2C_2_Master_Read
  3505   000F14  6E07               	movwf	??_color_read_Clear^0,c
  3506   000F16  5007               	movf	??_color_read_Clear^0,w,c
  3507   000F18  6E0A               	movwf	color_read_Clear@tmp^0,c
  3508   000F1A  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3509                           
  3510                           ;color.c: 141:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3511   000F1C  0E00               	movlw	0
  3512   000F1E  ECEC  F007         	call	_I2C_2_Master_Read
  3513   000F22  6E07               	movwf	??_color_read_Clear^0,c
  3514   000F24  5007               	movf	??_color_read_Clear^0,w,c
  3515   000F26  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3516   000F28  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3517   000F2A  500A               	movf	color_read_Clear@tmp^0,w,c
  3518   000F2C  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3519   000F2E  6E0A               	movwf	color_read_Clear@tmp^0,c
  3520   000F30  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3521   000F32  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3522   000F34  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3523                           
  3524                           ;color.c: 142:  I2C_2_Master_Stop();
  3525   000F36  EC9B  F008         	call	_I2C_2_Master_Stop	;wreg free
  3526   000F3A                     
  3527                           ;color.c: 143:  return tmp;
  3528   000F3A  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3529   000F3E  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3530   000F42  0012               	return		;funcret
  3531   000F44                     __end_of_color_read_Clear:
  3532                           	callstack 0
  3533                           
  3534 ;; *************** function _color_read_Blue *****************
  3535 ;; Defined at:
  3536 ;;		line 104 in file "color.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  tmp             2    9[COMRAM] unsigned int 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2    4[COMRAM] unsigned int 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;Total ram usage:        7 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 4
  3557 ;; This function calls:
  3558 ;;		_I2C_2_Master_Read
  3559 ;;		_I2C_2_Master_RepStart
  3560 ;;		_I2C_2_Master_Start
  3561 ;;		_I2C_2_Master_Stop
  3562 ;;		_I2C_2_Master_Write
  3563 ;; This function is called by:
  3564 ;;		_get_color_code
  3565 ;;		_calibrate_black
  3566 ;;		_calibrate_white
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text19
  3571   000F44                     __ptext19:
  3572                           	callstack 0
  3573   000F44                     _color_read_Blue:
  3574                           	callstack 25
  3575   000F44                     
  3576                           ;color.c: 106:  unsigned int tmp;;color.c: 107:  I2C_2_Master_Start();
  3577   000F44  ECA0  F008         	call	_I2C_2_Master_Start	;wreg free
  3578                           
  3579                           ;color.c: 108:  I2C_2_Master_Write(0x52 | 0x00);
  3580   000F48  0E52               	movlw	82
  3581   000F4A  EC8F  F008         	call	_I2C_2_Master_Write
  3582                           
  3583                           ;color.c: 109:  I2C_2_Master_Write(0xA0 | 0x1A);
  3584   000F4E  0EBA               	movlw	186
  3585   000F50  EC8F  F008         	call	_I2C_2_Master_Write
  3586                           
  3587                           ;color.c: 110:  I2C_2_Master_RepStart();
  3588   000F54  ECA5  F008         	call	_I2C_2_Master_RepStart	;wreg free
  3589                           
  3590                           ;color.c: 111:  I2C_2_Master_Write(0x52 | 0x01);
  3591   000F58  0E53               	movlw	83
  3592   000F5A  EC8F  F008         	call	_I2C_2_Master_Write
  3593                           
  3594                           ;color.c: 112:  tmp=I2C_2_Master_Read(1);
  3595   000F5E  0E01               	movlw	1
  3596   000F60  ECEC  F007         	call	_I2C_2_Master_Read
  3597   000F64  6E07               	movwf	??_color_read_Blue^0,c
  3598   000F66  5007               	movf	??_color_read_Blue^0,w,c
  3599   000F68  6E0A               	movwf	color_read_Blue@tmp^0,c
  3600   000F6A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3601                           
  3602                           ;color.c: 113:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3603   000F6C  0E00               	movlw	0
  3604   000F6E  ECEC  F007         	call	_I2C_2_Master_Read
  3605   000F72  6E07               	movwf	??_color_read_Blue^0,c
  3606   000F74  5007               	movf	??_color_read_Blue^0,w,c
  3607   000F76  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3608   000F78  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3609   000F7A  500A               	movf	color_read_Blue@tmp^0,w,c
  3610   000F7C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3611   000F7E  6E0A               	movwf	color_read_Blue@tmp^0,c
  3612   000F80  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3613   000F82  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3614   000F84  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3615                           
  3616                           ;color.c: 114:  I2C_2_Master_Stop();
  3617   000F86  EC9B  F008         	call	_I2C_2_Master_Stop	;wreg free
  3618   000F8A                     
  3619                           ;color.c: 115:  return tmp;
  3620   000F8A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3621   000F8E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3622   000F92  0012               	return		;funcret
  3623   000F94                     __end_of_color_read_Blue:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _I2C_2_Master_Write *****************
  3627 ;; Defined at:
  3628 ;;		line 45 in file "i2c.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  data_byte       1    wreg     unsigned char 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  data_byte       1    1[COMRAM] unsigned char 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3646 ;;Total ram usage:        1 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; Hardware stack levels required when called: 3
  3649 ;; This function calls:
  3650 ;;		_I2C_2_Master_Idle
  3651 ;; This function is called by:
  3652 ;;		_color_writetoaddr
  3653 ;;		_color_read_Red
  3654 ;;		_color_read_Blue
  3655 ;;		_color_read_Green
  3656 ;;		_color_read_Clear
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text20
  3661   00111E                     __ptext20:
  3662                           	callstack 0
  3663   00111E                     _I2C_2_Master_Write:
  3664                           	callstack 25
  3665                           
  3666                           ;incstack = 0
  3667                           ;I2C_2_Master_Write@data_byte stored from wreg
  3668   00111E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3669   001120                     
  3670                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3671   001120  EC3B  F008         	call	_I2C_2_Master_Idle	;wreg free
  3672   001124                     
  3673                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3674   001124  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3675   001128  0012               	return		;funcret
  3676   00112A                     __end_of_I2C_2_Master_Write:
  3677                           	callstack 0
  3678                           
  3679 ;; *************** function _I2C_2_Master_Stop *****************
  3680 ;; Defined at:
  3681 ;;		line 39 in file "i2c.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg, status,2, status,0, cstack
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;Total ram usage:        0 bytes
  3700 ;; Hardware stack levels used: 1
  3701 ;; Hardware stack levels required when called: 3
  3702 ;; This function calls:
  3703 ;;		_I2C_2_Master_Idle
  3704 ;; This function is called by:
  3705 ;;		_color_writetoaddr
  3706 ;;		_color_read_Red
  3707 ;;		_color_read_Blue
  3708 ;;		_color_read_Green
  3709 ;;		_color_read_Clear
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text21
  3714   001136                     __ptext21:
  3715                           	callstack 0
  3716   001136                     _I2C_2_Master_Stop:
  3717                           	callstack 25
  3718   001136                     
  3719                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3720   001136  EC3B  F008         	call	_I2C_2_Master_Idle	;wreg free
  3721   00113A                     
  3722                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3723   00113A  010E               	movlb	14	; () banked
  3724   00113C  85DA               	bsf	218,2,b	;volatile
  3725   00113E                     
  3726                           ; BSR set to: 14
  3727   00113E  0012               	return		;funcret
  3728   001140                     __end_of_I2C_2_Master_Stop:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _I2C_2_Master_Start *****************
  3732 ;; Defined at:
  3733 ;;		line 27 in file "i2c.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 3
  3754 ;; This function calls:
  3755 ;;		_I2C_2_Master_Idle
  3756 ;; This function is called by:
  3757 ;;		_color_writetoaddr
  3758 ;;		_color_read_Red
  3759 ;;		_color_read_Blue
  3760 ;;		_color_read_Green
  3761 ;;		_color_read_Clear
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text22
  3766   001140                     __ptext22:
  3767                           	callstack 0
  3768   001140                     _I2C_2_Master_Start:
  3769                           	callstack 25
  3770   001140                     
  3771                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3772   001140  EC3B  F008         	call	_I2C_2_Master_Idle	;wreg free
  3773   001144                     
  3774                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3775   001144  010E               	movlb	14	; () banked
  3776   001146  81DA               	bsf	218,0,b	;volatile
  3777   001148                     
  3778                           ; BSR set to: 14
  3779   001148  0012               	return		;funcret
  3780   00114A                     __end_of_I2C_2_Master_Start:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function _I2C_2_Master_RepStart *****************
  3784 ;; Defined at:
  3785 ;;		line 33 in file "i2c.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0, cstack
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; Hardware stack levels required when called: 3
  3806 ;; This function calls:
  3807 ;;		_I2C_2_Master_Idle
  3808 ;; This function is called by:
  3809 ;;		_color_read_Red
  3810 ;;		_color_read_Blue
  3811 ;;		_color_read_Green
  3812 ;;		_color_read_Clear
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text23
  3817   00114A                     __ptext23:
  3818                           	callstack 0
  3819   00114A                     _I2C_2_Master_RepStart:
  3820                           	callstack 25
  3821   00114A                     
  3822                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3823   00114A  EC3B  F008         	call	_I2C_2_Master_Idle	;wreg free
  3824   00114E                     
  3825                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3826   00114E  010E               	movlb	14	; () banked
  3827   001150  83DA               	bsf	218,1,b	;volatile
  3828   001152                     
  3829                           ; BSR set to: 14
  3830   001152  0012               	return		;funcret
  3831   001154                     __end_of_I2C_2_Master_RepStart:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _I2C_2_Master_Read *****************
  3835 ;; Defined at:
  3836 ;;		line 51 in file "i2c.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  ack             1    wreg     unsigned char 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  ack             1    2[COMRAM] unsigned char 
  3841 ;;  tmp             1    3[COMRAM] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      unsigned char 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3855 ;;Total ram usage:        3 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; Hardware stack levels required when called: 3
  3858 ;; This function calls:
  3859 ;;		_I2C_2_Master_Idle
  3860 ;; This function is called by:
  3861 ;;		_color_read_Red
  3862 ;;		_color_read_Blue
  3863 ;;		_color_read_Green
  3864 ;;		_color_read_Clear
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text24
  3869   000FD8                     __ptext24:
  3870                           	callstack 0
  3871   000FD8                     _I2C_2_Master_Read:
  3872                           	callstack 25
  3873                           
  3874                           ; BSR set to: 14
  3875                           ;incstack = 0
  3876                           ;I2C_2_Master_Read@ack stored from wreg
  3877   000FD8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3878   000FDA                     
  3879                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3880   000FDA  EC3B  F008         	call	_I2C_2_Master_Idle	;wreg free
  3881   000FDE                     
  3882                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3883   000FDE  010E               	movlb	14	; () banked
  3884   000FE0  87DA               	bsf	218,3,b	;volatile
  3885                           
  3886                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3887   000FE2  EC3B  F008         	call	_I2C_2_Master_Idle	;wreg free
  3888   000FE6                     
  3889                           ;i2c.c: 57:   tmp = SSP2BUF;
  3890   000FE6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3891                           
  3892                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3893   000FEA  EC3B  F008         	call	_I2C_2_Master_Idle	;wreg free
  3894   000FEE                     
  3895                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3896   000FEE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3897   000FF0  B4D8               	btfsc	status,2,c
  3898   000FF2  EFFD  F007         	goto	u1071
  3899   000FF6  EF01  F008         	goto	u1070
  3900   000FFA                     u1071:
  3901   000FFA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3902   000FFC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3903   000FFE  EF02  F008         	goto	u1088
  3904   001002                     u1070:
  3905   001002  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3906   001004                     u1088:
  3907   001004  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3908   001006  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3909   001008  010E               	movlb	14	; () banked
  3910   00100A  51DA               	movf	218,w,b	;volatile
  3911   00100C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3912   00100E  0BDF               	andlw	-33
  3913   001010  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3914   001012  6FDA               	movwf	218,b	;volatile
  3915   001014                     
  3916                           ; BSR set to: 14
  3917                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3918   001014  89DA               	bsf	218,4,b	;volatile
  3919   001016                     
  3920                           ; BSR set to: 14
  3921                           ;i2c.c: 61:   return tmp;
  3922   001016  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3923   001018                     
  3924                           ; BSR set to: 14
  3925   001018  0012               	return		;funcret
  3926   00101A                     __end_of_I2C_2_Master_Read:
  3927                           	callstack 0
  3928                           
  3929 ;; *************** function _I2C_2_Master_Idle *****************
  3930 ;; Defined at:
  3931 ;;		line 22 in file "i2c.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;		None
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;Total ram usage:        1 bytes
  3950 ;; Hardware stack levels used: 1
  3951 ;; Hardware stack levels required when called: 2
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_I2C_2_Master_Start
  3956 ;;		_I2C_2_Master_RepStart
  3957 ;;		_I2C_2_Master_Stop
  3958 ;;		_I2C_2_Master_Write
  3959 ;;		_I2C_2_Master_Read
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text25
  3964   001076                     __ptext25:
  3965                           	callstack 0
  3966   001076                     _I2C_2_Master_Idle:
  3967                           	callstack 25
  3968   001076                     l314:
  3969   001076  010E               	movlb	14	; () banked
  3970   001078  B5D8               	btfsc	216,2,b	;volatile
  3971   00107A  EF41  F008         	goto	u1051
  3972   00107E  EF43  F008         	goto	u1050
  3973   001082                     u1051:
  3974   001082  EF3B  F008         	goto	l314
  3975   001086                     u1050:
  3976   001086                     
  3977                           ; BSR set to: 14
  3978   001086  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3979   00108A  0E1F               	movlw	31
  3980   00108C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3981   00108E  A4D8               	btfss	status,2,c
  3982   001090  EF4C  F008         	goto	u1061
  3983   001094  EF4E  F008         	goto	u1060
  3984   001098                     u1061:
  3985   001098  EF3B  F008         	goto	l314
  3986   00109C                     u1060:
  3987   00109C                     
  3988                           ; BSR set to: 14
  3989   00109C  0012               	return		;funcret
  3990   00109E                     __end_of_I2C_2_Master_Idle:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function ___lwdiv *****************
  3994 ;; Defined at:
  3995 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  dividend        2    6[COMRAM] unsigned int 
  3998 ;;  divisor         2    8[COMRAM] unsigned int 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  quotient        2   10[COMRAM] unsigned int 
  4001 ;;  counter         1   12[COMRAM] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  2    6[COMRAM] unsigned int 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;Total ram usage:        7 bytes
  4016 ;; Hardware stack levels used: 1
  4017 ;; Hardware stack levels required when called: 2
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_calibrate_black
  4022 ;;		_setMotorPWM
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text26
  4027   000CC2                     __ptext26:
  4028                           	callstack 0
  4029   000CC2                     ___lwdiv:
  4030                           	callstack 26
  4031   000CC2  0E00               	movlw	0
  4032   000CC4  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  4033   000CC6  0E00               	movlw	0
  4034   000CC8  6E0B               	movwf	___lwdiv@quotient^0,c
  4035   000CCA  5009               	movf	___lwdiv@divisor^0,w,c
  4036   000CCC  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4037   000CCE  B4D8               	btfsc	status,2,c
  4038   000CD0  EF6C  F006         	goto	u1121
  4039   000CD4  EF6E  F006         	goto	u1120
  4040   000CD8                     u1121:
  4041   000CD8  EF96  F006         	goto	l897
  4042   000CDC                     u1120:
  4043   000CDC  0E01               	movlw	1
  4044   000CDE  6E0D               	movwf	___lwdiv@counter^0,c
  4045   000CE0  EF76  F006         	goto	l2097
  4046   000CE4                     l2095:
  4047   000CE4  90D8               	bcf	status,0,c
  4048   000CE6  3609               	rlcf	___lwdiv@divisor^0,f,c
  4049   000CE8  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4050   000CEA  2A0D               	incf	___lwdiv@counter^0,f,c
  4051   000CEC                     l2097:
  4052   000CEC  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  4053   000CEE  EF7B  F006         	goto	u1131
  4054   000CF2  EF7D  F006         	goto	u1130
  4055   000CF6                     u1131:
  4056   000CF6  EF72  F006         	goto	l2095
  4057   000CFA                     u1130:
  4058   000CFA                     l2099:
  4059   000CFA  90D8               	bcf	status,0,c
  4060   000CFC  360B               	rlcf	___lwdiv@quotient^0,f,c
  4061   000CFE  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4062   000D00  5009               	movf	___lwdiv@divisor^0,w,c
  4063   000D02  5C07               	subwf	___lwdiv@dividend^0,w,c
  4064   000D04  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4065   000D06  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4066   000D08  A0D8               	btfss	status,0,c
  4067   000D0A  EF89  F006         	goto	u1141
  4068   000D0E  EF8B  F006         	goto	u1140
  4069   000D12                     u1141:
  4070   000D12  EF90  F006         	goto	l2107
  4071   000D16                     u1140:
  4072   000D16  5009               	movf	___lwdiv@divisor^0,w,c
  4073   000D18  5E07               	subwf	___lwdiv@dividend^0,f,c
  4074   000D1A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4075   000D1C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4076   000D1E  800B               	bsf	___lwdiv@quotient^0,0,c
  4077   000D20                     l2107:
  4078   000D20  90D8               	bcf	status,0,c
  4079   000D22  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4080   000D24  3209               	rrcf	___lwdiv@divisor^0,f,c
  4081   000D26  2E0D               	decfsz	___lwdiv@counter^0,f,c
  4082   000D28  EF7D  F006         	goto	l2099
  4083   000D2C                     l897:
  4084   000D2C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4085   000D30  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4086   000D34  0012               	return		;funcret
  4087   000D36                     __end_of___lwdiv:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function _I2C_2_Master_Init *****************
  4091 ;; Defined at:
  4092 ;;		line 4 in file "i2c.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, status,2
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4110 ;;Total ram usage:        0 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; Hardware stack levels required when called: 2
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_color_click_init
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text27
  4121   00104C                     __ptext27:
  4122                           	callstack 0
  4123   00104C                     _I2C_2_Master_Init:
  4124                           	callstack 27
  4125   00104C                     
  4126                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4127   00104C  010E               	movlb	14	; () banked
  4128   00104E  51D9               	movf	217,w,b	;volatile
  4129   001050  0BF0               	andlw	-16
  4130   001052  0908               	iorlw	8
  4131   001054  6FD9               	movwf	217,b	;volatile
  4132   001056                     
  4133                           ; BSR set to: 14
  4134                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4135   001056  8BD9               	bsf	217,5,b	;volatile
  4136                           
  4137                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4138   001058  0E9F               	movlw	159
  4139   00105A  6FD6               	movwf	214,b	;volatile
  4140   00105C                     
  4141                           ; BSR set to: 14
  4142                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4143   00105C  8A84               	bsf	132,5,c	;volatile
  4144   00105E                     
  4145                           ; BSR set to: 14
  4146                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4147   00105E  8C84               	bsf	132,6,c	;volatile
  4148   001060                     
  4149                           ; BSR set to: 14
  4150                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4151   001060  9BA7               	bcf	167,5,b	;volatile
  4152   001062                     
  4153                           ; BSR set to: 14
  4154                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4155   001062  9DA7               	bcf	167,6,b	;volatile
  4156                           
  4157                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4158   001064  0E1D               	movlw	29
  4159   001066  6F1D               	movwf	29,b	;volatile
  4160                           
  4161                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4162   001068  0E1E               	movlw	30
  4163   00106A  6F1C               	movwf	28,b	;volatile
  4164                           
  4165                           ;i2c.c: 18:   RD5PPS=0x1C;
  4166   00106C  0E1C               	movlw	28
  4167   00106E  6F6F               	movwf	111,b	;volatile
  4168                           
  4169                           ;i2c.c: 19:   RD6PPS=0x1B;
  4170   001070  0E1B               	movlw	27
  4171   001072  6F70               	movwf	112,b	;volatile
  4172   001074                     
  4173                           ; BSR set to: 14
  4174   001074  0012               	return		;funcret
  4175   001076                     __end_of_I2C_2_Master_Init:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _Timer0_init *****************
  4179 ;; Defined at:
  4180 ;;		line 7 in file "timers.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 2
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_main
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text28
  4209   0010E4                     __ptext28:
  4210                           	callstack 0
  4211   0010E4                     _Timer0_init:
  4212                           	callstack 28
  4213   0010E4                     
  4214                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4215   0010E4  50D6               	movf	214,w,c	;volatile
  4216   0010E6  0B1F               	andlw	-225
  4217   0010E8  0940               	iorlw	64
  4218   0010EA  6ED6               	movwf	214,c	;volatile
  4219   0010EC                     
  4220                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4221   0010EC  88D6               	bsf	214,4,c	;volatile
  4222                           
  4223                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4224   0010EE  50D6               	movf	214,w,c	;volatile
  4225   0010F0  0BF0               	andlw	-16
  4226   0010F2  0908               	iorlw	8
  4227   0010F4  6ED6               	movwf	214,c	;volatile
  4228                           
  4229                           ;timers.c: 13:     TMR0H=0b11100111;
  4230   0010F6  0EE7               	movlw	231
  4231   0010F8  6ED4               	movwf	212,c	;volatile
  4232                           
  4233                           ;timers.c: 14:     TMR0L=0b10010101;
  4234   0010FA  0E95               	movlw	149
  4235   0010FC  6ED3               	movwf	211,c	;volatile
  4236   0010FE                     
  4237                           ;timers.c: 15:     T0CON0bits.T016BIT=1;
  4238   0010FE  88D5               	bsf	213,4,c	;volatile
  4239   001100                     
  4240                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  4241   001100  8ED5               	bsf	213,7,c	;volatile
  4242   001102  0012               	return		;funcret
  4243   001104                     __end_of_Timer0_init:
  4244                           	callstack 0
  4245                           
  4246 ;; *************** function _Interrupts_init *****************
  4247 ;; Defined at:
  4248 ;;		line 10 in file "interrupts.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		None
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 2
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_main
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text29
  4277   00112A                     __ptext29:
  4278                           	callstack 0
  4279   00112A                     _Interrupts_init:
  4280                           	callstack 28
  4281   00112A                     
  4282                           ;interrupts.c: 12:     INTCONbits.PEIE = 1;
  4283   00112A  8CF2               	bsf	242,6,c	;volatile
  4284                           
  4285                           ;interrupts.c: 13:     PIE0bits.TMR0IE = 1;
  4286   00112C  010E               	movlb	14	; () banked
  4287   00112E  8B29               	bsf	41,5,b	;volatile
  4288                           
  4289                           ;interrupts.c: 14:     PIE2bits.C1IE = 1;
  4290   001130  812B               	bsf	43,0,b	;volatile
  4291                           
  4292                           ;interrupts.c: 15:     INTCONbits.GIE = 1;
  4293   001132  8EF2               	bsf	242,7,c	;volatile
  4294   001134                     
  4295                           ; BSR set to: 14
  4296   001134  0012               	return		;funcret
  4297   001136                     __end_of_Interrupts_init:
  4298                           	callstack 0
  4299                           
  4300 ;; *************** function _HighISR *****************
  4301 ;; Defined at:
  4302 ;;		line 22 in file "interrupts.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2, status,0, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4320 ;;Total ram usage:        0 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; Hardware stack levels required when called: 1
  4323 ;; This function calls:
  4324 ;;		_increment_seconds
  4325 ;; This function is called by:
  4326 ;;		Interrupt level 2
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	intcode
  4331   000008                     __pintcode:
  4332                           	callstack 0
  4333   000008                     _HighISR:
  4334                           	callstack 24
  4335                           
  4336                           ; BSR set to: 14
  4337                           ;incstack = 0
  4338   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4339   00000A                     
  4340                           ;interrupts.c: 24:     if(PIR0bits.TMR0IF == 1){
  4341   00000A  010E               	movlb	14	; () banked
  4342   00000C  AB33               	btfss	51,5,b	;volatile
  4343   00000E  EF0B  F000         	goto	i2u67_41
  4344   000012  EF0D  F000         	goto	i2u67_40
  4345   000016                     i2u67_41:
  4346   000016  EF15  F000         	goto	i2l355
  4347   00001A                     i2u67_40:
  4348   00001A                     
  4349                           ; BSR set to: 14
  4350                           ;interrupts.c: 25:     increment_seconds();
  4351   00001A  ECAA  F008         	call	_increment_seconds	;wreg free
  4352   00001E                     
  4353                           ;interrupts.c: 27:     TMR0H=0b11100111;
  4354   00001E  0EE7               	movlw	231
  4355   000020  6ED4               	movwf	212,c	;volatile
  4356   000022                     
  4357                           ;interrupts.c: 28:     TMR0L=0b10010101;
  4358   000022  0E95               	movlw	149
  4359   000024  6ED3               	movwf	211,c	;volatile
  4360   000026                     
  4361                           ;interrupts.c: 30:     PIR0bits.TMR0IF = 0;
  4362   000026  010E               	movlb	14	; () banked
  4363   000028  9B33               	bcf	51,5,b	;volatile
  4364   00002A                     i2l355:
  4365                           
  4366                           ; BSR set to: 14
  4367   00002A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4368   00002C  0011               	retfie		f
  4369   00002E                     __end_of_HighISR:
  4370                           	callstack 0
  4371                           
  4372 ;; *************** function _increment_seconds *****************
  4373 ;; Defined at:
  4374 ;;		line 318 in file "dc_motor.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_HighISR
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text31
  4402   001154                     __ptext31:
  4403                           	callstack 0
  4404   001154                     _increment_seconds:
  4405                           	callstack 24
  4406   001154                     
  4407                           ;dc_motor.c: 320:     seconds += 1;
  4408   001154  4A5D               	infsnz	_seconds^0,f,c
  4409   001156  2A5E               	incf	(_seconds+1)^0,f,c
  4410   001158  0012               	return		;funcret
  4411   00115A                     __end_of_increment_seconds:
  4412                           	callstack 0
  4413   000000                     
  4414                           	psect	rparam
  4415   000000                     
  4416                           	psect	temp
  4417   00005F                     btemp:
  4418                           	callstack 0
  4419   00005F                     	ds	1
  4420   000000                     int$flags	set	btemp
  4421   000000                     wtemp8	set	btemp+1
  4422   000000                     ttemp5	set	btemp+1
  4423   000000                     ttemp6	set	btemp+4
  4424   000000                     ttemp7	set	btemp+8
  4425                           
  4426                           	psect	idloc
  4427                           
  4428                           ;Config register IDLOC0 @ 0x200000
  4429                           ;	unspecified, using default values
  4430   200000                     	org	2097152
  4431   200000  0FFF               	dw	4095
  4432                           
  4433                           ;Config register IDLOC1 @ 0x200002
  4434                           ;	unspecified, using default values
  4435   200002                     	org	2097154
  4436   200002  0FFF               	dw	4095
  4437                           
  4438                           ;Config register IDLOC2 @ 0x200004
  4439                           ;	unspecified, using default values
  4440   200004                     	org	2097156
  4441   200004  0FFF               	dw	4095
  4442                           
  4443                           ;Config register IDLOC3 @ 0x200006
  4444                           ;	unspecified, using default values
  4445   200006                     	org	2097158
  4446   200006  0FFF               	dw	4095
  4447                           
  4448                           ;Config register IDLOC4 @ 0x200008
  4449                           ;	unspecified, using default values
  4450   200008                     	org	2097160
  4451   200008  0FFF               	dw	4095
  4452                           
  4453                           ;Config register IDLOC5 @ 0x20000A
  4454                           ;	unspecified, using default values
  4455   20000A                     	org	2097162
  4456   20000A  0FFF               	dw	4095
  4457                           
  4458                           ;Config register IDLOC6 @ 0x20000C
  4459                           ;	unspecified, using default values
  4460   20000C                     	org	2097164
  4461   20000C  0FFF               	dw	4095
  4462                           
  4463                           ;Config register IDLOC7 @ 0x20000E
  4464                           ;	unspecified, using default values
  4465   20000E                     	org	2097166
  4466   20000E  0FFF               	dw	4095
  4467                           
  4468                           	psect	config
  4469                           
  4470                           ;Config register CONFIG1L @ 0x300000
  4471                           ;	External Oscillator mode Selection bits
  4472                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4473                           ;	Power-up default value for COSC bits
  4474                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4475   300000                     	org	3145728
  4476   300000  AA                 	db	170
  4477                           
  4478                           ;Config register CONFIG1H @ 0x300001
  4479                           ;	unspecified, using default values
  4480                           ;	Clock Out Enable bit
  4481                           ;	CLKOUTEN = 0x1, unprogrammed default
  4482                           ;	Clock Switch Enable bit
  4483                           ;	CSWEN = 0x1, unprogrammed default
  4484                           ;	Fail-Safe Clock Monitor Enable bit
  4485                           ;	FCMEN = 0x1, unprogrammed default
  4486   300001                     	org	3145729
  4487   300001  FF                 	db	255
  4488                           
  4489                           ;Config register CONFIG2L @ 0x300002
  4490                           ;	unspecified, using default values
  4491                           ;	Master Clear Enable bit
  4492                           ;	MCLRE = 0x1, unprogrammed default
  4493                           ;	Power-up Timer Enable bit
  4494                           ;	PWRTE = 0x1, unprogrammed default
  4495                           ;	Low-power BOR enable bit
  4496                           ;	LPBOREN = 0x1, unprogrammed default
  4497                           ;	Brown-out Reset Enable bits
  4498                           ;	BOREN = 0x3, unprogrammed default
  4499   300002                     	org	3145730
  4500   300002  FF                 	db	255
  4501                           
  4502                           ;Config register CONFIG2H @ 0x300003
  4503                           ;	unspecified, using default values
  4504                           ;	Brown Out Reset Voltage selection bits
  4505                           ;	BORV = 0x3, unprogrammed default
  4506                           ;	ZCD Disable bit
  4507                           ;	ZCD = 0x1, unprogrammed default
  4508                           ;	PPSLOCK bit One-Way Set Enable bit
  4509                           ;	PPS1WAY = 0x1, unprogrammed default
  4510                           ;	Stack Full/Underflow Reset Enable bit
  4511                           ;	STVREN = 0x1, unprogrammed default
  4512                           ;	Debugger Enable bit
  4513                           ;	DEBUG = 0x1, unprogrammed default
  4514                           ;	Extended Instruction Set Enable bit
  4515                           ;	XINST = 0x1, unprogrammed default
  4516   300003                     	org	3145731
  4517   300003  FF                 	db	255
  4518                           
  4519                           ;Config register CONFIG3L @ 0x300004
  4520                           ;	WDT Period Select bits
  4521                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4522                           ;	WDT operating mode
  4523                           ;	WDTE = OFF, WDT Disabled
  4524   300004                     	org	3145732
  4525   300004  9F                 	db	159
  4526                           
  4527                           ;Config register CONFIG3H @ 0x300005
  4528                           ;	unspecified, using default values
  4529                           ;	WDT Window Select bits
  4530                           ;	WDTCWS = 0x7, unprogrammed default
  4531                           ;	WDT input clock selector
  4532                           ;	WDTCCS = 0x7, unprogrammed default
  4533   300005                     	org	3145733
  4534   300005  FF                 	db	255
  4535                           
  4536                           ;Config register CONFIG4L @ 0x300006
  4537                           ;	unspecified, using default values
  4538                           ;	Write Protection Block 0
  4539                           ;	WRT0 = 0x1, unprogrammed default
  4540                           ;	Write Protection Block 1
  4541                           ;	WRT1 = 0x1, unprogrammed default
  4542                           ;	Write Protection Block 2
  4543                           ;	WRT2 = 0x1, unprogrammed default
  4544                           ;	Write Protection Block 3
  4545                           ;	WRT3 = 0x1, unprogrammed default
  4546                           ;	Write Protection Block 3
  4547                           ;	WRT4 = 0x1, unprogrammed default
  4548                           ;	Write Protection Block 3
  4549                           ;	WRT5 = 0x1, unprogrammed default
  4550                           ;	Write Protection Block 3
  4551                           ;	WRT6 = 0x1, unprogrammed default
  4552                           ;	Write Protection Block 3
  4553                           ;	WRT7 = 0x1, unprogrammed default
  4554   300006                     	org	3145734
  4555   300006  FF                 	db	255
  4556                           
  4557                           ;Config register CONFIG4H @ 0x300007
  4558                           ;	unspecified, using default values
  4559                           ;	Configuration Register Write Protection bit
  4560                           ;	WRTC = 0x1, unprogrammed default
  4561                           ;	Boot Block Write Protection bit
  4562                           ;	WRTB = 0x1, unprogrammed default
  4563                           ;	Data EEPROM Write Protection bit
  4564                           ;	WRTD = 0x1, unprogrammed default
  4565                           ;	Scanner Enable bit
  4566                           ;	SCANE = 0x1, unprogrammed default
  4567                           ;	Low Voltage Programming Enable bit
  4568                           ;	LVP = 0x1, unprogrammed default
  4569   300007                     	org	3145735
  4570   300007  FF                 	db	255
  4571                           
  4572                           ;Config register CONFIG5L @ 0x300008
  4573                           ;	unspecified, using default values
  4574                           ;	UserNVM Program Memory Code Protection bit
  4575                           ;	CP = 0x1, unprogrammed default
  4576                           ;	DataNVM Memory Code Protection bit
  4577                           ;	CPD = 0x1, unprogrammed default
  4578   300008                     	org	3145736
  4579   300008  FF                 	db	255
  4580                           
  4581                           ;Config register CONFIG5H @ 0x300009
  4582                           ;	unspecified, using default values
  4583   300009                     	org	3145737
  4584   300009  FF                 	db	255
  4585                           
  4586                           ;Config register CONFIG6L @ 0x30000A
  4587                           ;	unspecified, using default values
  4588                           ;	Table Read Protection Block 0
  4589                           ;	EBTR0 = 0x1, unprogrammed default
  4590                           ;	Table Read Protection Block 1
  4591                           ;	EBTR1 = 0x1, unprogrammed default
  4592                           ;	Table Read Protection Block 2
  4593                           ;	EBTR2 = 0x1, unprogrammed default
  4594                           ;	Table Read Protection Block 3
  4595                           ;	EBTR3 = 0x1, unprogrammed default
  4596                           ;	Table Read Protection Block 4
  4597                           ;	EBTR4 = 0x1, unprogrammed default
  4598                           ;	Table Read Protection Block 5
  4599                           ;	EBTR5 = 0x1, unprogrammed default
  4600                           ;	Table Read Protection Block 6
  4601                           ;	EBTR6 = 0x1, unprogrammed default
  4602                           ;	Table Read Protection Block 7
  4603                           ;	EBTR7 = 0x1, unprogrammed default
  4604   30000A                     	org	3145738
  4605   30000A  FF                 	db	255
  4606                           
  4607                           ;Config register CONFIG6H @ 0x30000B
  4608                           ;	unspecified, using default values
  4609                           ;	Boot Block Table Read Protection bit
  4610                           ;	EBTRB = 0x1, unprogrammed default
  4611   30000B                     	org	3145739
  4612   30000B  FF                 	db	255
  4613                           tosu	equ	0xFFF
  4614                           tosh	equ	0xFFE
  4615                           tosl	equ	0xFFD
  4616                           stkptr	equ	0xFFC
  4617                           pclatu	equ	0xFFB
  4618                           pclath	equ	0xFFA
  4619                           pcl	equ	0xFF9
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           prodh	equ	0xFF4
  4625                           prodl	equ	0xFF3
  4626                           indf0	equ	0xFEF
  4627                           postinc0	equ	0xFEE
  4628                           postdec0	equ	0xFED
  4629                           preinc0	equ	0xFEC
  4630                           plusw0	equ	0xFEB
  4631                           fsr0h	equ	0xFEA
  4632                           fsr0l	equ	0xFE9
  4633                           wreg	equ	0xFE8
  4634                           indf1	equ	0xFE7
  4635                           postinc1	equ	0xFE6
  4636                           postdec1	equ	0xFE5
  4637                           preinc1	equ	0xFE4
  4638                           plusw1	equ	0xFE3
  4639                           fsr1h	equ	0xFE2
  4640                           fsr1l	equ	0xFE1
  4641                           bsr	equ	0xFE0
  4642                           indf2	equ	0xFDF
  4643                           postinc2	equ	0xFDE
  4644                           postdec2	equ	0xFDD
  4645                           preinc2	equ	0xFDC
  4646                           plusw2	equ	0xFDB
  4647                           fsr2h	equ	0xFDA
  4648                           fsr2l	equ	0xFD9
  4649                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        124
    BSS         236
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      94
    BANK0           160     44     154
    BANK1           256      0     232
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    Calibrate@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    Calibrate@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    Calibrate@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    Calibrate@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveForward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveForward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveForward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    moveForward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveForward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveForward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    moveBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    moveBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    moveBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    TimedfullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRightLong@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRightLong@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRightLong@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRightLong@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeftLong@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    S1015DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhllllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S1015DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhllllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(COMRAM[9]), main@motorL(COMRAM[9]), RobotMovement@motorR(COMRAM[9]), RobotMovement@motorL(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_get_color_code
    _stop->_setMotorPWM
    _moveForward->_setMotorPWM
    _setMotorPWM->___lwdiv
    _get_wall_presence->_color_read_Clear
    _get_color_code->_get_color_distance
    _get_color_distance->___wmul
    ___lldiv->___lmul
    _color_click_init->_calibrate_black
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _calibrate_black->___lwdiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_get_color_code

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   23229
                                             56 COMRAM    20    20      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                     _get_color_code
                  _get_wall_presence
                    _initDCmotorsPWM
                        _moveForward
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 4     0      4    4501
                                             19 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _moveForward                                          4     0      4    4697
                                             19 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    4261
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_wall_presence                                    8     6      2    2632
                                             11 COMRAM     8     6      2
                             ___wmul
                   _color_read_Clear
                      _set_led_color
 ---------------------------------------------------------------------------------
 (1) _get_color_code                                      48    46      2    6509
                                             52 COMRAM     4     2      2
                                              0 BANK0     44    44      0
                            ___lldiv
                             ___lmul
                             ___wmul
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                 _get_color_distance
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _get_color_distance                                  46    22     24    2034
                                              6 COMRAM    46    22     24
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1115
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    4357
                                             19 COMRAM     1     1      0
                  _I2C_2_Master_Init
                    _calibrate_black
                    _calibrate_white
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      2     2      0    1697
                                             11 COMRAM     2     2      0
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _calibrate_black                                      6     6      0    2366
                                             13 COMRAM     6     6      0
                            ___lwdiv
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _set_led_color                                        2     0      2    1358
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     510
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0       0
                  _increment_seconds
 ---------------------------------------------------------------------------------
 (7) _increment_seconds                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _calibrate_black
       ___lwdiv
         ___wmul (ARG)
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _set_led_color
     _calibrate_white
       _color_read_Blue
       _color_read_Green
       _color_read_Red
       _set_led_color
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _get_color_code
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___wmul
     _color_read_Blue
     _color_read_Green
     _color_read_Red
     _get_color_distance
       ___wmul
     _set_led_color
   _get_wall_presence
     ___wmul
     _color_read_Clear
     _set_led_color
   _initDCmotorsPWM
   _moveForward
     _setMotorPWM
       ___lwdiv
       ___wmul
   _stop
     _setMotorPWM

 _HighISR (ROOT)
   _increment_seconds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E8       7       90.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      5E       1      100.0%
BITBIGSFRllhllh     52      0       0      44        0.0%
BITBIGSFRllhlll     46      0       0      46        0.0%
BITBIGSFRlllllh     35      0       0      55        0.0%
BITBIGSFRllllll     2D      0       0      59        0.0%
BITBIGSFRllhlll     20      0       0      48        0.0%
BITBIGSFRlllhhh     1E      0       0      50        0.0%
BITBIGSFRhhhlhh     1B      0       0      33        0.0%
BITBIGSFRhhlll      17      0       0      38        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      51        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      49        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllllh      7      0       0      56        0.0%
BITBIGSFRhl          6      0       0      39        0.0%
BITBIGSFRllllhl      5      0       0      54        0.0%
BITBIGSFRllllhh      3      0       0      53        0.0%
BITBIGSFRllhlll      2      0       0      45        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      57        0.0%
BITBIGSFRllhlll      1      0       0      47        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      52        0.0%
BITBIGSFRllhlhh      1      0       0      42        0.0%
BITBIGSFRllhlhl      1      0       0      43        0.0%
BITBIGSFRllhh        1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E0      60        0.0%
DATA                 0      0     1E0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Dec 07 21:10:40 2022

               _color_read_Red 0E54                _color_read_Blue 0F44                             l71 07A8  
                           l73 07DE                             l82 10E2                             l74 07BE  
                           l91 0EF2                             l67 078C                             l85 0EA2  
                           l77 07D0                             l94 0F42                             l88 0F92  
          ___wmul@multiplicand 0003               _color_read_Clear 0EF4               ?_calibrate_black 0001  
             _color_read_Green 0EA4              ??_Interrupts_init 0001                            l112 0FA8  
                          l113 0FAA                            l114 0FBE                            l115 0FC0  
                          l211 053A                            l116 0FD4                            l204 0C36  
                          l141 0900                            l109 06A6                            l118 0FD6  
                          l214 104A                            l311 1074                            l320 1148  
                          l144 0A66                            l136 03C6                            l314 1076  
                          l138 03CE                            l403 1102                            l323 1152  
                          l147 0BA6                            l332 1018                            l317 109C  
                          l326 113E                            l406 10C2                            l440 0B0A  
                          l329 1128                            l433 0AFA                            l417 0D8E  
                          l257 0E52                            l418 0D9E                            l349 1134  
                          l904 0D34                            l897 0D2C                            _RGB 00EE  
             ?_calibrate_white 0001                            wreg 000FE8                           l2101 0D00  
                         l2021 1140                           l2111 104C                           l2103 0D16  
                         l2023 1144                           l2031 113A                           l2121 1062  
                         l2113 1056                           l2105 0D1E                           l2017 1076  
                         l2041 0FE6                           l2033 114A                           l2025 1120  
                         l2201 0454                           l2115 105C                           l2107 0D20  
                         l2019 1086                           l2043 0FEE                           l2035 114E  
                         l2027 1124                           l2051 0E54                           l2131 09F2  
                         l2123 10C6                           l2211 0D36                           l2203 0458  
                         l2117 105E                           l2109 0D26                           l2045 1014  
                         l2037 0FDA                           l2029 1136                           l2053 0E9A  
                         l2141 0A5A                           l2133 09FE                           l2125 09BE  
                         l2221 0A68                           l2213 0D46                           l2301 0072  
                         l2205 049A                           l2119 1060                           l2047 1016  
                         l2039 0FDE                           l2071 0F3A                           l2063 0EA4  
                         l2151 081E                           l2143 07E0                           l2135 0A26  
                         l2127 09CA                           l2231 0AB0                           l2223 0A78  
                         l2215 0D54                           l2311 00DA                           l2303 009A  
                         l2207 04B6                           l2057 0F44                           l2065 0EEA  
                         l2081 0FCE                           l2161 0898                           l2153 0844  
                         l2145 07EC                           l2137 0A32                           l2129 09E0  
                         l2241 0AF4                           l2233 0ABA                           l2225 0A8E  
                         l2217 0D64                           l2321 01A8                           l2313 00FA  
                         l2305 00A6                           l2209 04FA                           l2091 0CCA  
                         l2059 0F8A                           l2075 0F94                           l2163 08A4  
                         l2155 0850                           l2147 0802                           l2139 0A48  
                         l2251 06D0                           l2243 06A8                           l2235 0AD8  
                         l2227 0A96                           l2219 0D6E                           l2083 109E  
                         l2171 053C                           l2331 026A                           l2323 01BC  
                         l2315 010E                           l2307 00BC                           l2093 0CDC  
                         l2069 0EF4                           l2077 0FA2                           l2165 08B0  
                         l2157 0866                           l2149 0812                           l2261 06F2  
                         l2253 06DA                           l2245 06AC                           l2237 0AE8  
                         l2229 0AA2                           l2085 10BA                           l2181 05D0  
                         l2173 055A                           l2333 02D4                           l2325 0226  
                         l2317 0178                           l2309 00CE                           l2095 0CE4  
                         l2079 0FB8                           l2167 08C6                           l2159 0876  
                         l2271 074C                           l2263 0704                           l2255 06DC  
                         l2247 06B6                           l2239 0AEA                           l2191 064A  
                         l2183 05E8                           l2175 0576                           l2351 039C  
                         l2335 02E4                           l2327 0236                           l2319 0188  
                         l2097 0CEC                           l2089 0CC2                           l2169 08DE  
                         l2281 0788                           l2273 075E                           l2265 0716  
                         l2257 06DE                           l2249 06C6                           l2185 060E  
                         l2177 058E                           l2353 03AC                           l2345 0326  
                         l2337 0314                           l2329 0256                           l2361 0B2E  
                         l2099 0CFA                           l2291 07CC                           l2283 078A  
                         l2275 0770                           l2267 0728                           l2259 06E0  
                         l2187 062A                           l2179 05B4                           l2355 03B0  
                         l2347 0354                           l2339 031E                           l2363 0B3A  
                         l2195 03D0                           l2285 079A                           l2277 0782  
                         l2269 073A                           l2189 0642                           l2349 0384  
                         l2293 0032                           l2365 0B46                           l2357 0B0C  
                         l2381 0C10                           l2373 0BA8                           l2197 03EC  
                         l2701 0948                           l2279 0784                           l2295 003E  
                         l2367 0B68                           l2359 0B18                           l2391 0C2A  
                         l2383 0C12                           l2375 0BB8                           l2199 0440  
                         l2711 0968                           l2703 094C                           l2289 07BA  
                         l2297 0054                           l2369 0B74                           l2393 0C34  
                         l2385 0C1C                           l2377 0BE2                           l2713 097C  
                         l2705 0950                           l2299 0066                           l2387 0C1E  
                         l2379 0C06                           l2395 101A                           l2715 0992  
                         l2707 0958                           l2389 0C28                           l2581 0E2E  
                         l2397 1032                           l2717 09A6                           l2709 0960  
                         l2591 10EC                           l2583 0E3A                           l2399 103E  
                         l2719 09B2                           l2593 10FE                           l2585 0E46  
                         l2577 0E02                           l2681 0916                           l2673 0902  
                         l2587 112A                           l2595 1100                           l2579 0E22  
                         l2691 0928                           l2683 091A                           l2675 0906  
                         l2589 10E4                           l2693 092C                           l2685 091E  
                         l2677 090A                           l2695 0934                           l2687 0920  
                         l2679 0916                           l2697 093C                           l2689 0924  
                         l2699 0944                           u1100 0FB8                           u1101 0FB4  
                         u1110 0FCE                           u1111 0FCA                           u1120 0CDC  
                         u1200 0D54                           u1121 0CD8                           u1201 0D50  
                         u1130 0CFA                           u1050 1086                           u1210 0D8E  
                         u1131 0CF6                           u1051 1082                           u1211 0D8A  
                         u1140 0D16                           u1060 109C                           u1220 0A8E  
                         u1141 0D12                           u1061 1098                           u1301 0744  
                         u1221 0A8A                           u1070 1002                           u1230 0AB0  
                         u1150 055A                           u1071 0FFA                           u1311 0756  
                         u1231 0AAC                           u1151 0556                           u1240 0AD8  
                         u1160 05B4                           u1400 01A8                           u1321 0768  
                         u1241 0AD4                           u1161 05B0                           u1401 01A4  
                         u1090 0FA2                           u1170 060E                           u1410 0256  
                         u1091 0F9E                           u1331 077A                           u1251 06EA  
                         u1171 060A                           u1411 0252                           u2107 0048  
                         u1340 079A                           u1500 0BA2                           u1180 03EC  
                         u1341 0796                           u1261 06FC                           u1421 02EE  
                         u2117 007C                           u1181 03E8                           u1350 07A8  
                         u1190 04B6                           u2207 088C                           u1351 07A4  
                         u1271 070E                           u1431 0300                           u2127 00B0  
                         u1191 04B2                           u1088 1004                           u1360 07B6  
                         u2217 08BA                           u1361 07B2                           u1281 0720  
                         u2137 06BC                           u1441 034C                           u1370 07CC  
                         u2147 09D4                           u1371 07C8                           u1291 0732  
                         u1451 035E                           u1380 07DE                           u2157 0A08  
                         u1381 07DA                           u1461 0370                           u1470 039C  
                         u1390 00FA                           u1710 0992                           u2167 0A3C  
                         u1471 0398                           u1391 00F6                           u2087 0B22  
                         u1711 098E                           u1480 03C6                           u2177 07F6  
                         u1481 03C2                           u2097 0B50                           u1490 0BA0  
                         _T2PR 000FBC                     _Black_rule 01D0                           u2187 0828  
                         u1491 0B9A                           u2197 085A                           _main 0902  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 005F                           _stop 101A  
                         prodh 000FF4                           prodl 000FF3                           start 002E  
       __end_of_color_read_Red 0EA4                __end_of_HighISR 002E                   ___param_bank 000000  
           _get_color_code$460 00D6             _get_color_code$458 00CE             _get_color_code$459 00D2  
                        ?_main 0001                __end_of___lldiv 0B0C                          ?_stop 0014  
                  _Black_setup 004D                __end_of___lwdiv 0D36                          i2l355 002A  
                        i2l269 1158                          _TMR0H 000FD4                          _TMR0L 000FD3  
          ___lmul@multiplicand 0005     __end_of_I2C_2_Master_Start 114A     __end_of_I2C_2_Master_Write 112A  
           _get_color_distance 053C                          _index 005B                          tablat 000FF5  
                        plusw0 000FEB                          plusw1 000FE3                          plusw2 000FDB  
          ?_get_color_distance 0007                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 000FD8                          wtemp8 0060  
                   _Green_rule 00A8        __end_of_color_read_Blue 0F94          _I2C_2_Master_RepStart 114A  
              ?_color_read_Red 0005                __initialization 0C38                   __end_of_main 09BE  
                 __end_of_stop 104C           ??_get_color_distance 001F                         ??_main 0039  
                       ??_stop 0018                  __activetblptr 000000            _get_color_code$2464 00C2  
                 ?_setMotorPWM 000E                   ?_moveForward 0014                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       _RE2PPS 000E74                         _RD5PPS 000E6F                         _RC7PPS 000E69  
                       _RD6PPS 000E70                         _RE4PPS 000E76                         i2l1741 001E  
                       i2l1743 0022                         i2l1649 1154                         i2l1745 0026  
                       i2l1737 000A                         i2l1739 001A                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 07E0               ??_get_color_code 0037  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                         ___lmul 0D36  
     get_color_distance@color1 0007       get_color_distance@color2 0013                         ___wmul 109E  
                    ??___lldiv 0015                      ??___lwdiv 000B                    _Color_rules 0100  
                       clear_0 0C9E                         clear_1 0CAA                         isa$std 000001  
        calibrate_black@clear1 0010          calibrate_black@clear2 0012                   __pdataCOMRAM 004D  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
               _Lightblue_rule 006C                     _White_rule 01DC                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003          __end_of_set_led_color 0FD8  
                   __accesstop 0060        __end_of__initialization 0CB8       __end_of_color_read_Clear 0F44  
      get_wall_presence@clear1 0010        get_wall_presence@clear2 0012       __end_of_color_read_Green 0EF4  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0005  
              _Interrupts_init 112A                 __pcstackCOMRAM 0001                   __pidataBANK0 0DA0  
                 __pidataBANK1 1112            __end_of_Timer0_init 1104                     __pbssBANK0 00EE  
                   __pbssBANK1 0100              _color_writetoaddr 10C4                   _T2CLKCONbits 000FBF  
           ?_color_writetoaddr 0003                        ?___lmul 0001                        ?___wmul 0001  
               main@color_code 0039                 ___lmul@product 0009                get_color_code@i 00E0  
          ??_color_writetoaddr 0004        get_color_code@min_index 00DC                        i2u67_40 001A  
                      i2u67_41 0016                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
      get_color_code@min_value 00DA              _get_wall_presence 0B0C                    _Orange_rule 0078  
           ?_get_wall_presence 000C        __end_of_Interrupts_init 1136         color_writetoaddr@value 0003  
             ??_color_read_Red 0007                        _HighISR 0008      __end_of_color_writetoaddr 10E4  
           _I2C_2_Master_Start 1140             _I2C_2_Master_Write 111E                        __Hparam 0000  
          ??_get_wall_presence 000E                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 10E4                        ___lldiv 0A68            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 0CC2            ?_I2C_2_Master_Write 0001                        __pcinit 0C38  
                      __ramtop 0E00                        __ptext0 0902                        __ptext1 101A  
                      __ptext2 0E02                        __ptext3 03D0                        __ptext4 0BA8  
                      __ptext5 0B0C                        __ptext6 0032                        __ptext7 053C  
                      __ptext8 109E                        __ptext9 0D36                      _T2CONbits 000FBD  
                      _seconds 005D                      _T2HLTbits 000FBE      __end_of_get_wall_presence 0BA8  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 0CB8  
            ?_color_click_init 0001                ___lldiv@divisor 0011             ??_color_click_init 0014  
              ___lldiv@counter 0019                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                    _White_setup 0060  
              _initDCmotorsPWM 0BA8                     _timer_list 016C                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013                    _Yellow_rule 0090                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
     color_writetoaddr@address 0004     get_color_distance@B_offset 0033        ??_I2C_2_Master_RepStart 0002  
                moveForward@mL 0014                  moveForward@mR 0016               ?_Interrupts_init 0001  
                  _CCP1CONbits 000FAB     get_color_distance@G_offset 0031              _increment_seconds 1154  
            ?_color_read_Clear 0005                    _CCP2CONbits 000FA7              ??_calibrate_black 000E  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    _CCP4CONbits 000F22  
                   main@motorL 003B                     main@motorR 0044              ??_calibrate_white 000C  
           ?_increment_seconds 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
   get_color_distance@R_offset 002F                      _Blue_rule 009C            ??_increment_seconds 0001  
               __end_of___lmul 0DA0                 __end_of___wmul 10C4                  __pidataCOMRAM 1104  
          color_read_Clear@tmp 000A            start_initialization 0C38      __end_of_increment_seconds 115A  
                    _Pink_rule 0084            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 0C38  
                     ??___lmul 0009                       ??___wmul 0005                    __pdataBANK0 0060  
                  __pdataBANK1 01DC         _get_color_distance$421 002B         _get_color_distance$417 0023  
       _get_color_distance$419 0027                    __pbssCOMRAM 005B                  __pcstackBANK0 00C2  
          get_color_code@value 00DE                       ?_HighISR 0001               ___lwdiv@dividend 0007  
                 ?_Timer0_init 0001                      __pintcode 0008                       ?___lldiv 000D  
                     ?___lwdiv 0007           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
  get_color_code@NormalizedRGB 00E2              _I2C_2_Master_Idle 1076              _I2C_2_Master_Init 104C  
            _I2C_2_Master_Read 0FD8              _I2C_2_Master_Stop 1136             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
                ??_moveForward 0018             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
                _set_led_color 0F94            ??_I2C_2_Master_Stop 0002                       _LATCbits 000F7B  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _PIE0bits 000E29                       _PIE2bits 000E2B                       _PIR0bits 000E33  
             ?_initDCmotorsPWM 0001                      _wall_coef 0059                      _wait_time 00C0  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8             set_led_color@color 0001  
    __end_of_I2C_2_Master_Idle 109E      __end_of_I2C_2_Master_Init 1076      __end_of_I2C_2_Master_Read 101A  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 1140                   setMotorPWM@m 000E  
  I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007                _calibrate_black 07E0  
              _calibrate_white 09BE              ___lmul@multiplier 0001                      copy_data0 0C4C  
                    copy_data1 0C6C                      copy_data2 0C8C                 ?_set_led_color 0001  
__end_of_I2C_2_Master_RepStart 1154             color_read_Blue@tmp 000A            __end_of_setMotorPWM 053C  
          __end_of_moveForward 0E54                       _Red_rule 00B4                       __Hrparam 0000  
                     __Lrparam 0000     __end_of_get_color_distance 06A8                 _get_color_code 0032  
                   _ANSELDbits 000EA7                     _ANSELFbits 000EB4                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                ___lwdiv@divisor 0009                ___lwdiv@counter 000D  
                     __ptext10 0A68                       __ptext11 06A8                       __ptext20 111E  
                     __ptext12 10C4                       __ptext21 1136                       __ptext13 09BE  
                     __ptext22 1140                       __ptext14 07E0                       __ptext31 1154  
                     __ptext23 114A                       __ptext15 0F94                       __ptext24 0FD8  
                     __ptext16 0E54                       __ptext25 1076                       __ptext17 0EA4  
                     __ptext26 0CC2                       __ptext18 0EF4                       __ptext27 104C  
                     __ptext19 0F44                       __ptext28 10E4                       __ptext29 112A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                     int$flags 005F         __end_of_get_color_code 03D0        __end_of_calibrate_black 0902  
      __end_of_calibrate_white 0A68                     _INTCONbits 000FF2                    _setMotorPWM 03D0  
                  _moveForward 0E02                ??_set_led_color 0003                       intlevel2 0000  
             ___lldiv@dividend 000D                ?_get_color_code 0035               _color_click_init 06A8  
                   _SSP2DATPPS 000E1D               ___lldiv@quotient 0015                     _SSP2CLKPPS 000E1C  
