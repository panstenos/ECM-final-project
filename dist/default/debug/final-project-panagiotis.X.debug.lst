

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 30 18:21:57 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42   000000                     
    43                           ; Version 2.35
    44                           ; Generated 05/05/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F67K40 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000000                     
    79                           	psect	idataCOMRAM
    80   000A5E                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for _Black_setup
    84   000A5E  031A               	dw	794
    85   000A60  0000               	dw	0
    86   000A62  01B7               	dw	439
    87   000A64  0000               	dw	0
    88   000A66  0073               	dw	115
    89   000A68  0000               	dw	0
    90                           
    91                           ;initializer for _wait_time
    92   000A6A  01F4               	dw	500
    93                           
    94                           	psect	idataBANK0
    95   0006BC                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for _White_setup
    99   0006BC  20D0               	dw	8400
   100   0006BE  0000               	dw	0
   101   0006C0  15C3               	dw	5571
   102   0006C2  0000               	dw	0
   103   0006C4  05A8               	dw	1448
   104   0006C6  0000               	dw	0
   105                           
   106                           ;initializer for _White_rule
   107   0006C8  0064               	dw	100
   108   0006CA  0000               	dw	0
   109   0006CC  0064               	dw	100
   110   0006CE  0000               	dw	0
   111   0006D0  0064               	dw	100
   112   0006D2  0000               	dw	0
   113                           
   114                           ;initializer for _Lightblue_rule
   115   0006D4  0026               	dw	38
   116   0006D6  0000               	dw	0
   117   0006D8  0048               	dw	72
   118   0006DA  0000               	dw	0
   119   0006DC  0054               	dw	84
   120   0006DE  0000               	dw	0
   121                           
   122                           ;initializer for _Orange_rule
   123   0006E0  005C               	dw	92
   124   0006E2  0000               	dw	0
   125   0006E4  0027               	dw	39
   126   0006E6  0000               	dw	0
   127   0006E8  001C               	dw	28
   128   0006EA  0000               	dw	0
   129                           
   130                           ;initializer for _Pink_rule
   131   0006EC  004D               	dw	77
   132   0006EE  0000               	dw	0
   133   0006F0  003C               	dw	60
   134   0006F2  0000               	dw	0
   135   0006F4  0040               	dw	64
   136   0006F6  0000               	dw	0
   137                           
   138                           ;initializer for _Yellow_rule
   139   0006F8  005D               	dw	93
   140   0006FA  0000               	dw	0
   141   0006FC  004C               	dw	76
   142   0006FE  0000               	dw	0
   143   000700  0014               	dw	20
   144   000702  0000               	dw	0
   145                           
   146                           ;initializer for _Blue_rule
   147   000704  0003               	dw	3
   148   000706  0000               	dw	0
   149   000708  0009               	dw	9
   150   00070A  0000               	dw	0
   151   00070C  0024               	dw	36
   152   00070E  0000               	dw	0
   153                           
   154                           ;initializer for _Green_rule
   155   000710  0019               	dw	25
   156   000712  0000               	dw	0
   157   000714  0036               	dw	54
   158   000716  0000               	dw	0
   159   000718  0008               	dw	8
   160   00071A  0000               	dw	0
   161                           
   162                           ;initializer for _Red_rule
   163   00071C  0048               	dw	72
   164   00071E  0000               	dw	0
   165   000720  0002               	dw	2
   166   000722  0000               	dw	0
   167   000724  0002               	dw	2
   168   000726  0000               	dw	0
   169   000000                     _T0CON0bits	set	4053
   170   000000                     _T0CON1bits	set	4054
   171   000000                     _TRISDbits	set	3972
   172   000000                     _SSP2CON2bits	set	3802
   173   000000                     _SSP2CLKPPS	set	3612
   174   000000                     _SSP2DATPPS	set	3613
   175   000000                     _RC7PPS	set	3689
   176   000000                     _RE2PPS	set	3700
   177   000000                     _LATAbits	set	3961
   178   000000                     _LATGbits	set	3967
   179   000000                     _TRISAbits	set	3969
   180   000000                     _TRISFbits	set	3974
   181   000000                     _CCPR2H	set	4006
   182   000000                     _CCPR1H	set	4010
   183   000000                     _T2PR	set	4028
   184   000000                     _T2CONbits	set	4029
   185   000000                     _TRISGbits	set	3975
   186   000000                     _TRISCbits	set	3971
   187   000000                     _TRISEbits	set	3973
   188   000000                     _LATCbits	set	3963
   189   000000                     _LATEbits	set	3965
   190   000000                     _LATFbits	set	3966
   191   000000                     _RE4PPS	set	3702
   192   000000                     _RG6PPS	set	3720
   193   000000                     _RD5PPS	set	3695
   194   000000                     _ANSELDbits	set	3751
   195   000000                     _SSP2ADD	set	3798
   196   000000                     _SSP2CON1bits	set	3801
   197   000000                     _CCPR4H	set	3873
   198   000000                     _CCPR3H	set	3877
   199   000000                     _TMR0L	set	4051
   200   000000                     _TMR0H	set	4052
   201   000000                     _INTCONbits	set	4082
   202   000000                     _T2CLKCONbits	set	4031
   203   000000                     _T2HLTbits	set	4030
   204   000000                     _CCP1CONbits	set	4011
   205   000000                     _CCPTMRS0bits	set	4013
   206   000000                     _CCP2CONbits	set	4007
   207   000000                     _CCP3CONbits	set	3878
   208   000000                     _CCP4CONbits	set	3874
   209   000000                     _SSP2CON2	set	3802
   210   000000                     _SSP2STAT	set	3800
   211   000000                     _SSP2BUF	set	3797
   212   000000                     _PIE0bits	set	3625
   213   000000                     _RD6PPS	set	3696
   214   000000                     _PIE2bits	set	3627
   215   000000                     _PIR0bits	set	3635
   216                           
   217                           ; #config settings
   218                           
   219                           	psect	cinit
   220   000792                     __pcinit:
   221                           	callstack 0
   222   000792                     start_initialization:
   223                           	callstack 0
   224   000792                     __initialization:
   225                           	callstack 0
   226                           
   227                           ; Initialize objects allocated to BANK0 (108 bytes)
   228                           ; load TBLPTR registers with __pidataBANK0
   229   000792  0EBC               	movlw	low __pidataBANK0
   230   000794  6EF6               	movwf	tblptrl,c
   231   000796  0E06               	movlw	high __pidataBANK0
   232   000798  6EF7               	movwf	tblptrh,c
   233   00079A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   234   00079C  6EF8               	movwf	tblptru,c
   235   00079E  EE00  F060         	lfsr	0,__pdataBANK0
   236   0007A2  EE10 F06C          	lfsr	1,108
   237   0007A6                     copy_data0:
   238   0007A6  0009               	tblrd		*+
   239   0007A8  CFF5 FFEE          	movff	tablat,postinc0
   240   0007AC  50E5               	movf	postdec1,w,c
   241   0007AE  50E1               	movf	fsr1l,w,c
   242   0007B0  E1FA               	bnz	copy_data0
   243                           
   244                           ; Initialize objects allocated to COMRAM (14 bytes)
   245                           ; load TBLPTR registers with __pidataCOMRAM
   246   0007B2  0E5E               	movlw	low __pidataCOMRAM
   247   0007B4  6EF6               	movwf	tblptrl,c
   248   0007B6  0E0A               	movlw	high __pidataCOMRAM
   249   0007B8  6EF7               	movwf	tblptrh,c
   250   0007BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   251   0007BC  6EF8               	movwf	tblptru,c
   252   0007BE  EE00  F04B         	lfsr	0,__pdataCOMRAM
   253   0007C2  EE10 F00E          	lfsr	1,14
   254   0007C6                     copy_data1:
   255   0007C6  0009               	tblrd		*+
   256   0007C8  CFF5 FFEE          	movff	tablat,postinc0
   257   0007CC  50E5               	movf	postdec1,w,c
   258   0007CE  50E1               	movf	fsr1l,w,c
   259   0007D0  E1FA               	bnz	copy_data1
   260                           
   261                           ; Clear objects allocated to BANK1 (120 bytes)
   262   0007D2  EE01  F000         	lfsr	0,__pbssBANK1
   263   0007D6  0E78               	movlw	120
   264   0007D8                     clear_0:
   265   0007D8  6AEE               	clrf	postinc0,c
   266   0007DA  06E8               	decf	wreg,f,c
   267   0007DC  E1FD               	bnz	clear_0
   268                           
   269                           ; Clear objects allocated to COMRAM (14 bytes)
   270   0007DE  EE00  F03D         	lfsr	0,__pbssCOMRAM
   271   0007E2  0E0E               	movlw	14
   272   0007E4                     clear_1:
   273   0007E4  6AEE               	clrf	postinc0,c
   274   0007E6  06E8               	decf	wreg,f,c
   275   0007E8  E1FD               	bnz	clear_1
   276   0007EA                     end_of_initialization:
   277                           	callstack 0
   278   0007EA                     __end_of__initialization:
   279                           	callstack 0
   280   0007EA  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   281   0007EC  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   282   0007EE  0100               	movlb	0
   283   0007F0  EFB5  F004         	goto	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMRAM
   286   00003D                     __pbssCOMRAM:
   287                           	callstack 0
   288   00003D                     _RGB:
   289                           	callstack 0
   290   00003D                     	ds	12
   291   000049                     _seconds:
   292                           	callstack 0
   293   000049                     	ds	2
   294                           
   295                           	psect	dataCOMRAM
   296   00004B                     __pdataCOMRAM:
   297                           	callstack 0
   298   00004B                     _Black_setup:
   299                           	callstack 0
   300   00004B                     	ds	12
   301   000057                     _wait_time:
   302                           	callstack 0
   303   000057                     	ds	2
   304                           
   305                           	psect	dataBANK0
   306   000060                     __pdataBANK0:
   307                           	callstack 0
   308   000060                     _White_setup:
   309                           	callstack 0
   310   000060                     	ds	12
   311   00006C                     _White_rule:
   312                           	callstack 0
   313   00006C                     	ds	12
   314   000078                     _Lightblue_rule:
   315                           	callstack 0
   316   000078                     	ds	12
   317   000084                     _Orange_rule:
   318                           	callstack 0
   319   000084                     	ds	12
   320   000090                     _Pink_rule:
   321                           	callstack 0
   322   000090                     	ds	12
   323   00009C                     _Yellow_rule:
   324                           	callstack 0
   325   00009C                     	ds	12
   326   0000A8                     _Blue_rule:
   327                           	callstack 0
   328   0000A8                     	ds	12
   329   0000B4                     _Green_rule:
   330                           	callstack 0
   331   0000B4                     	ds	12
   332   0000C0                     _Red_rule:
   333                           	callstack 0
   334   0000C0                     	ds	12
   335                           
   336                           	psect	bssBANK1
   337   000100                     __pbssBANK1:
   338                           	callstack 0
   339   000100                     _Color_rules:
   340                           	callstack 0
   341   000100                     	ds	108
   342   00016C                     _Black_rule:
   343                           	callstack 0
   344   00016C                     	ds	12
   345                           
   346                           	psect	cstackBANK0
   347   0000CC                     __pcstackBANK0:
   348                           	callstack 0
   349   0000CC                     _get_color_code$2210:
   350                           	callstack 0
   351                           
   352                           ; 12 bytes @ 0x0
   353   0000CC                     	ds	12
   354   0000D8                     _get_color_code$382:
   355                           	callstack 0
   356                           
   357                           ; 4 bytes @ 0xC
   358   0000D8                     	ds	4
   359   0000DC                     _get_color_code$383:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x10
   363   0000DC                     	ds	4
   364   0000E0                     _get_color_code$384:
   365                           	callstack 0
   366                           
   367                           ; 4 bytes @ 0x14
   368   0000E0                     	ds	4
   369   0000E4                     get_color_code@min_value:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x18
   373   0000E4                     	ds	2
   374   0000E6                     get_color_code@min_index:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x1A
   378   0000E6                     	ds	2
   379   0000E8                     get_color_code@value:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x1C
   383   0000E8                     	ds	2
   384   0000EA                     get_color_code@i:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x1E
   388   0000EA                     	ds	2
   389   0000EC                     get_color_code@NormalizedRGB:
   390                           	callstack 0
   391                           
   392                           ; 12 bytes @ 0x20
   393   0000EC                     	ds	12
   394                           
   395                           	psect	cstackCOMRAM
   396   000001                     __pcstackCOMRAM:
   397                           	callstack 0
   398   000001                     ??_I2C_2_Master_Idle:
   399   000001                     ?___wmul:
   400                           	callstack 0
   401   000001                     ?___lmul:
   402                           	callstack 0
   403   000001                     set_led_color@color:
   404                           	callstack 0
   405   000001                     ___wmul@multiplier:
   406                           	callstack 0
   407   000001                     ___lmul@multiplier:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x0
   411   000001                     	ds	1
   412   000002                     ??_I2C_2_Master_Read:
   413   000002                     I2C_2_Master_Write@data_byte:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x1
   417   000002                     	ds	1
   418   000003                     color_writetoaddr@value:
   419                           	callstack 0
   420   000003                     I2C_2_Master_Read@ack:
   421                           	callstack 0
   422   000003                     ___wmul@multiplicand:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x2
   426   000003                     	ds	1
   427   000004                     color_writetoaddr@address:
   428                           	callstack 0
   429   000004                     I2C_2_Master_Read@tmp:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x3
   433   000004                     	ds	1
   434   000005                     ??_color_click_init:
   435   000005                     ?_color_read_Red:
   436                           	callstack 0
   437   000005                     ?_color_read_Blue:
   438                           	callstack 0
   439   000005                     ?_color_read_Green:
   440                           	callstack 0
   441   000005                     ___wmul@product:
   442                           	callstack 0
   443   000005                     ___lmul@multiplicand:
   444                           	callstack 0
   445                           
   446                           ; 4 bytes @ 0x4
   447   000005                     	ds	2
   448   000007                     ??_color_read_Red:
   449   000007                     ??_color_read_Blue:
   450   000007                     ??_color_read_Green:
   451   000007                     ?_get_color_distance:
   452                           	callstack 0
   453   000007                     get_color_distance@color1:
   454                           	callstack 0
   455                           
   456                           ; 12 bytes @ 0x6
   457   000007                     	ds	2
   458   000009                     ___lmul@product:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0x8
   462   000009                     	ds	1
   463   00000A                     color_read_Red@tmp:
   464                           	callstack 0
   465   00000A                     color_read_Blue@tmp:
   466                           	callstack 0
   467   00000A                     color_read_Green@tmp:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x9
   471   00000A                     	ds	3
   472   00000D                     ?___lldiv:
   473                           	callstack 0
   474   00000D                     ___lldiv@dividend:
   475                           	callstack 0
   476                           
   477                           ; 4 bytes @ 0xC
   478   00000D                     	ds	4
   479   000011                     ___lldiv@divisor:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x10
   483   000011                     	ds	2
   484   000013                     get_color_distance@color2:
   485                           	callstack 0
   486                           
   487                           ; 12 bytes @ 0x12
   488   000013                     	ds	2
   489   000015                     ___lldiv@quotient:
   490                           	callstack 0
   491                           
   492                           ; 4 bytes @ 0x14
   493   000015                     	ds	4
   494   000019                     ___lldiv@counter:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x18
   498   000019                     	ds	6
   499   00001F                     ??_get_color_distance:
   500                           
   501                           ; 1 bytes @ 0x1E
   502   00001F                     	ds	4
   503   000023                     _get_color_distance$341:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x22
   507   000023                     	ds	4
   508   000027                     _get_color_distance$343:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x26
   512   000027                     	ds	4
   513   00002B                     _get_color_distance$345:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x2A
   517   00002B                     	ds	4
   518   00002F                     get_color_distance@R_offset:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x2E
   522   00002F                     	ds	2
   523   000031                     get_color_distance@G_offset:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x30
   527   000031                     	ds	2
   528   000033                     get_color_distance@B_offset:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x32
   532   000033                     	ds	2
   533   000035                     ?_get_color_code:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x34
   537   000035                     	ds	2
   538   000037                     ??_get_color_code:
   539                           
   540                           ; 1 bytes @ 0x36
   541   000037                     	ds	2
   542   000039                     ??_main:
   543                           
   544                           ; 1 bytes @ 0x38
   545   000039                     	ds	2
   546   00003B                     main@color_code:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x3A
   550   00003B                     	ds	2
   551                           
   552 ;;
   553 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   554 ;;
   555 ;; *************** function _main *****************
   556 ;; Defined at:
   557 ;;		line 18 in file "main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  color_code      2   58[COMRAM] unsigned int 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   572 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   573 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   574 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   575 ;;Total ram usage:        4 bytes
   576 ;; Hardware stack levels required when called: 6
   577 ;; This function calls:
   578 ;;		_Interrupts_init
   579 ;;		_Timer0_init
   580 ;;		_color_click_init
   581 ;;		_get_color_code
   582 ;; This function is called by:
   583 ;;		Startup code after reset
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text0
   588   00096A                     __ptext0:
   589                           	callstack 0
   590   00096A                     _main:
   591                           	callstack 25
   592   00096A                     
   593                           ;main.c: 19:     Timer0_init();
   594   00096A  EC1F  F005         	call	_Timer0_init	;wreg free
   595   00096E                     
   596                           ;main.c: 20:     Interrupts_init();
   597   00096E  EC3C  F005         	call	_Interrupts_init	;wreg free
   598   000972                     
   599                           ;main.c: 21:     color_click_init();
   600   000972  EC9E  F002         	call	_color_click_init	;wreg free
   601   000976                     l1921:
   602                           
   603                           ;main.c: 43:         unsigned int color_code = get_color_code();
   604   000976  EC19  F000         	call	_get_color_code	;wreg free
   605   00097A  C035  F03B         	movff	?_get_color_code,main@color_code
   606   00097E  C036  F03C         	movff	?_get_color_code+1,main@color_code+1
   607   000982                     
   608                           ;main.c: 44:         color_code += 1;
   609   000982  4A3B               	infsnz	main@color_code^0,f,c
   610   000984  2A3C               	incf	(main@color_code+1)^0,f,c
   611   000986                     
   612                           ;main.c: 45:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   613   000986  0E52               	movlw	82
   614   000988  6E3A               	movwf	(??_main+1)^0,c
   615   00098A  0E2B               	movlw	43
   616   00098C  6E39               	movwf	??_main^0,c
   617   00098E  0E00               	movlw	0
   618   000990                     u1587:
   619   000990  2EE8               	decfsz	wreg,f,c
   620   000992  D7FE               	bra	u1587
   621   000994  2E39               	decfsz	??_main^0,f,c
   622   000996  D7FC               	bra	u1587
   623   000998  2E3A               	decfsz	(??_main+1)^0,f,c
   624   00099A  D7FA               	bra	u1587
   625   00099C  D000               	nop2	
   626   00099E  EFBB  F004         	goto	l1921
   627   0009A2  EF17  F000         	goto	start
   628   0009A6                     __end_of_main:
   629                           	callstack 0
   630                           
   631 ;; *************** function _get_color_code *****************
   632 ;; Defined at:
   633 ;;		line 152 in file "color.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  value           2   28[BANK0 ] unsigned int 
   638 ;;  i               2   30[BANK0 ] unsigned int 
   639 ;;  NormalizedRG   12   32[BANK0 ] struct RGB_val
   640 ;;  min_index       2   26[BANK0 ] unsigned int 
   641 ;;  min_value       2   24[BANK0 ] unsigned int 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  2   52[COMRAM] unsigned int 
   644 ;; Registers used:
   645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   652 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   654 ;;      Totals:         4      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   655 ;;Total ram usage:       48 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 5
   658 ;; This function calls:
   659 ;;		___lldiv
   660 ;;		___lmul
   661 ;;		___wmul
   662 ;;		_color_read_Blue
   663 ;;		_color_read_Green
   664 ;;		_color_read_Red
   665 ;;		_get_color_distance
   666 ;;		_set_led_color
   667 ;; This function is called by:
   668 ;;		_main
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text1
   673   000032                     __ptext1:
   674                           	callstack 0
   675   000032                     _get_color_code:
   676                           	callstack 25
   677   000032                     
   678                           ;color.c: 153:     set_led_color(0b100);
   679   000032  0E00               	movlw	0
   680   000034  6E02               	movwf	(set_led_color@color+1)^0,c
   681   000036  0E04               	movlw	4
   682   000038  6E01               	movwf	set_led_color@color^0,c
   683   00003A  EC72  F004         	call	_set_led_color	;wreg free
   684   00003E                     
   685                           ;color.c: 154:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   686   00003E  0E29               	movlw	41
   687   000040  6E38               	movwf	(??_get_color_code+1)^0,c
   688   000042  0E96               	movlw	150
   689   000044  6E37               	movwf	??_get_color_code^0,c
   690   000046  0E7F               	movlw	127
   691   000048                     u1597:
   692   000048  2EE8               	decfsz	wreg,f,c
   693   00004A  D7FE               	bra	u1597
   694   00004C  2E37               	decfsz	??_get_color_code^0,f,c
   695   00004E  D7FC               	bra	u1597
   696   000050  2E38               	decfsz	(??_get_color_code+1)^0,f,c
   697   000052  D7FA               	bra	u1597
   698   000054  F000               	nop	
   699   000056                     
   700                           ;color.c: 155:     RGB.R = color_read_Red();
   701   000056  ECFA  F003         	call	_color_read_Red	;wreg free
   702   00005A  C005  F03D         	movff	?_color_read_Red,_RGB
   703   00005E  C006  F03E         	movff	?_color_read_Red+1,_RGB+1
   704   000062  6A3F               	clrf	(_RGB+2)^0,c
   705   000064  6A40               	clrf	(_RGB+3)^0,c
   706   000066                     
   707                           ;color.c: 156:     set_led_color(0b010);
   708   000066  0E00               	movlw	0
   709   000068  6E02               	movwf	(set_led_color@color+1)^0,c
   710   00006A  0E02               	movlw	2
   711   00006C  6E01               	movwf	set_led_color@color^0,c
   712   00006E  EC72  F004         	call	_set_led_color	;wreg free
   713   000072                     
   714                           ;color.c: 157:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   715   000072  0E29               	movlw	41
   716   000074  6E38               	movwf	(??_get_color_code+1)^0,c
   717   000076  0E96               	movlw	150
   718   000078  6E37               	movwf	??_get_color_code^0,c
   719   00007A  0E7F               	movlw	127
   720   00007C                     u1607:
   721   00007C  2EE8               	decfsz	wreg,f,c
   722   00007E  D7FE               	bra	u1607
   723   000080  2E37               	decfsz	??_get_color_code^0,f,c
   724   000082  D7FC               	bra	u1607
   725   000084  2E38               	decfsz	(??_get_color_code+1)^0,f,c
   726   000086  D7FA               	bra	u1607
   727   000088  F000               	nop	
   728                           
   729                           ;color.c: 158:     RGB.G = color_read_Green();
   730   00008A  EC22  F004         	call	_color_read_Green	;wreg free
   731   00008E  C005  F041         	movff	?_color_read_Green,_RGB+4
   732   000092  C006  F042         	movff	?_color_read_Green+1,_RGB+5
   733   000096  6A43               	clrf	(_RGB+6)^0,c
   734   000098  6A44               	clrf	(_RGB+7)^0,c
   735   00009A                     
   736                           ;color.c: 159:     set_led_color(0b001);
   737   00009A  0E00               	movlw	0
   738   00009C  6E02               	movwf	(set_led_color@color+1)^0,c
   739   00009E  0E01               	movlw	1
   740   0000A0  6E01               	movwf	set_led_color@color^0,c
   741   0000A2  EC72  F004         	call	_set_led_color	;wreg free
   742   0000A6                     
   743                           ;color.c: 160:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   744   0000A6  0E29               	movlw	41
   745   0000A8  6E38               	movwf	(??_get_color_code+1)^0,c
   746   0000AA  0E96               	movlw	150
   747   0000AC  6E37               	movwf	??_get_color_code^0,c
   748   0000AE  0E7F               	movlw	127
   749   0000B0                     u1617:
   750   0000B0  2EE8               	decfsz	wreg,f,c
   751   0000B2  D7FE               	bra	u1617
   752   0000B4  2E37               	decfsz	??_get_color_code^0,f,c
   753   0000B6  D7FC               	bra	u1617
   754   0000B8  2E38               	decfsz	(??_get_color_code+1)^0,f,c
   755   0000BA  D7FA               	bra	u1617
   756   0000BC  F000               	nop	
   757   0000BE                     
   758                           ;color.c: 161:     RGB.B = color_read_Blue();
   759   0000BE  EC4A  F004         	call	_color_read_Blue	;wreg free
   760   0000C2  C005  F045         	movff	?_color_read_Blue,_RGB+8
   761   0000C6  C006  F046         	movff	?_color_read_Blue+1,_RGB+9
   762   0000CA  6A47               	clrf	(_RGB+10)^0,c
   763   0000CC  6A48               	clrf	(_RGB+11)^0,c
   764   0000CE                     
   765                           ;color.c: 162:     set_led_color(0b000);
   766   0000CE  0E00               	movlw	0
   767   0000D0  6E02               	movwf	(set_led_color@color+1)^0,c
   768   0000D2  0E00               	movlw	0
   769   0000D4  6E01               	movwf	set_led_color@color^0,c
   770   0000D6  EC72  F004         	call	_set_led_color	;wreg free
   771   0000DA                     
   772                           ;color.c: 164:     struct RGB_val NormalizedRGB;;color.c: 165:     NormalizedRGB.R = RGB
      +                          .R >= Black_setup.R ? (RGB.R - Black_setup.R)*100/(White_setup.R - Black_setup.R) : 0;
   773   0000DA  504B               	movf	_Black_setup^0,w,c
   774   0000DC  5C3D               	subwf	_RGB^0,w,c
   775   0000DE  504C               	movf	(_Black_setup+1)^0,w,c
   776   0000E0  583E               	subwfb	(_RGB+1)^0,w,c
   777   0000E2  504D               	movf	(_Black_setup+2)^0,w,c
   778   0000E4  583F               	subwfb	(_RGB+2)^0,w,c
   779   0000E6  504E               	movf	(_Black_setup+3)^0,w,c
   780   0000E8  5840               	subwfb	(_RGB+3)^0,w,c
   781   0000EA  B0D8               	btfsc	status,0,c
   782   0000EC  EF7A  F000         	goto	u1041
   783   0000F0  EF7C  F000         	goto	u1040
   784   0000F4                     u1041:
   785   0000F4  EF87  F000         	goto	l1779
   786   0000F8                     u1040:
   787   0000F8  0E00               	movlw	0
   788   0000FA  0100               	movlb	0	; () banked
   789   0000FC  6FD8               	movwf	_get_color_code$382& (0+255),b
   790   0000FE  0E00               	movlw	0
   791   000100  6FD9               	movwf	(_get_color_code$382+1)& (0+255),b
   792   000102  0E00               	movlw	0
   793   000104  6FDA               	movwf	(_get_color_code$382+2)& (0+255),b
   794   000106  0E00               	movlw	0
   795   000108  6FDB               	movwf	(_get_color_code$382+3)& (0+255),b
   796   00010A  EFBC  F000         	goto	l1781
   797   00010E                     l1779:
   798   00010E  504B               	movf	_Black_setup^0,w,c
   799   000110  5C3D               	subwf	_RGB^0,w,c
   800   000112  6E01               	movwf	___lmul@multiplier^0,c
   801   000114  504C               	movf	(_Black_setup+1)^0,w,c
   802   000116  583E               	subwfb	(_RGB+1)^0,w,c
   803   000118  6E02               	movwf	(___lmul@multiplier+1)^0,c
   804   00011A  504D               	movf	(_Black_setup+2)^0,w,c
   805   00011C  583F               	subwfb	(_RGB+2)^0,w,c
   806   00011E  6E03               	movwf	(___lmul@multiplier+2)^0,c
   807   000120  504E               	movf	(_Black_setup+3)^0,w,c
   808   000122  5840               	subwfb	(_RGB+3)^0,w,c
   809   000124  6E04               	movwf	(___lmul@multiplier+3)^0,c
   810   000126  0E64               	movlw	100
   811   000128  6E05               	movwf	___lmul@multiplicand^0,c
   812   00012A  0E00               	movlw	0
   813   00012C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   814   00012E  0E00               	movlw	0
   815   000130  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   816   000132  0E00               	movlw	0
   817   000134  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   818   000136  EC94  F003         	call	___lmul	;wreg free
   819   00013A  C001  F00D         	movff	?___lmul,___lldiv@dividend
   820   00013E  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
   821   000142  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
   822   000146  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
   823   00014A  504B               	movf	_Black_setup^0,w,c
   824   00014C  0100               	movlb	0	; () banked
   825   00014E  5D60               	subwf	_White_setup& (0+255),w,b
   826   000150  6E11               	movwf	___lldiv@divisor^0,c
   827   000152  504C               	movf	(_Black_setup+1)^0,w,c
   828   000154  5961               	subwfb	(_White_setup+1)& (0+255),w,b
   829   000156  6E12               	movwf	(___lldiv@divisor+1)^0,c
   830   000158  504D               	movf	(_Black_setup+2)^0,w,c
   831   00015A  5962               	subwfb	(_White_setup+2)& (0+255),w,b
   832   00015C  6E13               	movwf	(___lldiv@divisor+2)^0,c
   833   00015E  504E               	movf	(_Black_setup+3)^0,w,c
   834   000160  5963               	subwfb	(_White_setup+3)& (0+255),w,b
   835   000162  6E14               	movwf	(___lldiv@divisor+3)^0,c
   836   000164  EC0C  F003         	call	___lldiv	;wreg free
   837   000168  C00D  F0D8         	movff	?___lldiv,_get_color_code$382
   838   00016C  C00E  F0D9         	movff	?___lldiv+1,_get_color_code$382+1
   839   000170  C00F  F0DA         	movff	?___lldiv+2,_get_color_code$382+2
   840   000174  C010  F0DB         	movff	?___lldiv+3,_get_color_code$382+3
   841   000178                     l1781:
   842   000178  C0D8  F0EC         	movff	_get_color_code$382,get_color_code@NormalizedRGB
   843   00017C  C0D9  F0ED         	movff	_get_color_code$382+1,get_color_code@NormalizedRGB+1
   844   000180  C0DA  F0EE         	movff	_get_color_code$382+2,get_color_code@NormalizedRGB+2
   845   000184  C0DB  F0EF         	movff	_get_color_code$382+3,get_color_code@NormalizedRGB+3
   846   000188                     
   847                           ;color.c: 166:     NormalizedRGB.G = RGB.G >= Black_setup.G ? (RGB.G - Black_setup.G)*10
      +                          0/(White_setup.G - Black_setup.G) : 0;
   848   000188  504F               	movf	(_Black_setup+4)^0,w,c
   849   00018A  5C41               	subwf	(_RGB+4)^0,w,c
   850   00018C  5050               	movf	(_Black_setup+5)^0,w,c
   851   00018E  5842               	subwfb	(_RGB+5)^0,w,c
   852   000190  5051               	movf	(_Black_setup+6)^0,w,c
   853   000192  5843               	subwfb	(_RGB+6)^0,w,c
   854   000194  5052               	movf	(_Black_setup+7)^0,w,c
   855   000196  5844               	subwfb	(_RGB+7)^0,w,c
   856   000198  B0D8               	btfsc	status,0,c
   857   00019A  EFD1  F000         	goto	u1051
   858   00019E  EFD3  F000         	goto	u1050
   859   0001A2                     u1051:
   860   0001A2  EFDE  F000         	goto	l1787
   861   0001A6                     u1050:
   862   0001A6  0E00               	movlw	0
   863   0001A8  0100               	movlb	0	; () banked
   864   0001AA  6FDC               	movwf	_get_color_code$383& (0+255),b
   865   0001AC  0E00               	movlw	0
   866   0001AE  6FDD               	movwf	(_get_color_code$383+1)& (0+255),b
   867   0001B0  0E00               	movlw	0
   868   0001B2  6FDE               	movwf	(_get_color_code$383+2)& (0+255),b
   869   0001B4  0E00               	movlw	0
   870   0001B6  6FDF               	movwf	(_get_color_code$383+3)& (0+255),b
   871   0001B8  EF13  F001         	goto	l1789
   872   0001BC                     l1787:
   873   0001BC  504F               	movf	(_Black_setup+4)^0,w,c
   874   0001BE  5C41               	subwf	(_RGB+4)^0,w,c
   875   0001C0  6E01               	movwf	___lmul@multiplier^0,c
   876   0001C2  5050               	movf	(_Black_setup+5)^0,w,c
   877   0001C4  5842               	subwfb	(_RGB+5)^0,w,c
   878   0001C6  6E02               	movwf	(___lmul@multiplier+1)^0,c
   879   0001C8  5051               	movf	(_Black_setup+6)^0,w,c
   880   0001CA  5843               	subwfb	(_RGB+6)^0,w,c
   881   0001CC  6E03               	movwf	(___lmul@multiplier+2)^0,c
   882   0001CE  5052               	movf	(_Black_setup+7)^0,w,c
   883   0001D0  5844               	subwfb	(_RGB+7)^0,w,c
   884   0001D2  6E04               	movwf	(___lmul@multiplier+3)^0,c
   885   0001D4  0E64               	movlw	100
   886   0001D6  6E05               	movwf	___lmul@multiplicand^0,c
   887   0001D8  0E00               	movlw	0
   888   0001DA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   889   0001DC  0E00               	movlw	0
   890   0001DE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   891   0001E0  0E00               	movlw	0
   892   0001E2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   893   0001E4  EC94  F003         	call	___lmul	;wreg free
   894   0001E8  C001  F00D         	movff	?___lmul,___lldiv@dividend
   895   0001EC  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
   896   0001F0  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
   897   0001F4  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
   898   0001F8  504F               	movf	(_Black_setup+4)^0,w,c
   899   0001FA  0100               	movlb	0	; () banked
   900   0001FC  5D64               	subwf	(_White_setup+4)& (0+255),w,b
   901   0001FE  6E11               	movwf	___lldiv@divisor^0,c
   902   000200  5050               	movf	(_Black_setup+5)^0,w,c
   903   000202  5965               	subwfb	(_White_setup+5)& (0+255),w,b
   904   000204  6E12               	movwf	(___lldiv@divisor+1)^0,c
   905   000206  5051               	movf	(_Black_setup+6)^0,w,c
   906   000208  5966               	subwfb	(_White_setup+6)& (0+255),w,b
   907   00020A  6E13               	movwf	(___lldiv@divisor+2)^0,c
   908   00020C  5052               	movf	(_Black_setup+7)^0,w,c
   909   00020E  5967               	subwfb	(_White_setup+7)& (0+255),w,b
   910   000210  6E14               	movwf	(___lldiv@divisor+3)^0,c
   911   000212  EC0C  F003         	call	___lldiv	;wreg free
   912   000216  C00D  F0DC         	movff	?___lldiv,_get_color_code$383
   913   00021A  C00E  F0DD         	movff	?___lldiv+1,_get_color_code$383+1
   914   00021E  C00F  F0DE         	movff	?___lldiv+2,_get_color_code$383+2
   915   000222  C010  F0DF         	movff	?___lldiv+3,_get_color_code$383+3
   916   000226                     l1789:
   917   000226  C0DC  F0F0         	movff	_get_color_code$383,get_color_code@NormalizedRGB+4
   918   00022A  C0DD  F0F1         	movff	_get_color_code$383+1,get_color_code@NormalizedRGB+5
   919   00022E  C0DE  F0F2         	movff	_get_color_code$383+2,get_color_code@NormalizedRGB+6
   920   000232  C0DF  F0F3         	movff	_get_color_code$383+3,get_color_code@NormalizedRGB+7
   921   000236                     
   922                           ;color.c: 167:     NormalizedRGB.B = RGB.B >= Black_setup.B ? (RGB.B - Black_setup.B)*10
      +                          0/(White_setup.B - Black_setup.B) : 0;
   923   000236  5053               	movf	(_Black_setup+8)^0,w,c
   924   000238  5C45               	subwf	(_RGB+8)^0,w,c
   925   00023A  5054               	movf	(_Black_setup+9)^0,w,c
   926   00023C  5846               	subwfb	(_RGB+9)^0,w,c
   927   00023E  5055               	movf	(_Black_setup+10)^0,w,c
   928   000240  5847               	subwfb	(_RGB+10)^0,w,c
   929   000242  5056               	movf	(_Black_setup+11)^0,w,c
   930   000244  5848               	subwfb	(_RGB+11)^0,w,c
   931   000246  B0D8               	btfsc	status,0,c
   932   000248  EF28  F001         	goto	u1061
   933   00024C  EF2A  F001         	goto	u1060
   934   000250                     u1061:
   935   000250  EF35  F001         	goto	l1795
   936   000254                     u1060:
   937   000254  0E00               	movlw	0
   938   000256  0100               	movlb	0	; () banked
   939   000258  6FE0               	movwf	_get_color_code$384& (0+255),b
   940   00025A  0E00               	movlw	0
   941   00025C  6FE1               	movwf	(_get_color_code$384+1)& (0+255),b
   942   00025E  0E00               	movlw	0
   943   000260  6FE2               	movwf	(_get_color_code$384+2)& (0+255),b
   944   000262  0E00               	movlw	0
   945   000264  6FE3               	movwf	(_get_color_code$384+3)& (0+255),b
   946   000266  EF6A  F001         	goto	l1797
   947   00026A                     l1795:
   948   00026A  5053               	movf	(_Black_setup+8)^0,w,c
   949   00026C  5C45               	subwf	(_RGB+8)^0,w,c
   950   00026E  6E01               	movwf	___lmul@multiplier^0,c
   951   000270  5054               	movf	(_Black_setup+9)^0,w,c
   952   000272  5846               	subwfb	(_RGB+9)^0,w,c
   953   000274  6E02               	movwf	(___lmul@multiplier+1)^0,c
   954   000276  5055               	movf	(_Black_setup+10)^0,w,c
   955   000278  5847               	subwfb	(_RGB+10)^0,w,c
   956   00027A  6E03               	movwf	(___lmul@multiplier+2)^0,c
   957   00027C  5056               	movf	(_Black_setup+11)^0,w,c
   958   00027E  5848               	subwfb	(_RGB+11)^0,w,c
   959   000280  6E04               	movwf	(___lmul@multiplier+3)^0,c
   960   000282  0E64               	movlw	100
   961   000284  6E05               	movwf	___lmul@multiplicand^0,c
   962   000286  0E00               	movlw	0
   963   000288  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   964   00028A  0E00               	movlw	0
   965   00028C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   966   00028E  0E00               	movlw	0
   967   000290  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   968   000292  EC94  F003         	call	___lmul	;wreg free
   969   000296  C001  F00D         	movff	?___lmul,___lldiv@dividend
   970   00029A  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
   971   00029E  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
   972   0002A2  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
   973   0002A6  5053               	movf	(_Black_setup+8)^0,w,c
   974   0002A8  0100               	movlb	0	; () banked
   975   0002AA  5D68               	subwf	(_White_setup+8)& (0+255),w,b
   976   0002AC  6E11               	movwf	___lldiv@divisor^0,c
   977   0002AE  5054               	movf	(_Black_setup+9)^0,w,c
   978   0002B0  5969               	subwfb	(_White_setup+9)& (0+255),w,b
   979   0002B2  6E12               	movwf	(___lldiv@divisor+1)^0,c
   980   0002B4  5055               	movf	(_Black_setup+10)^0,w,c
   981   0002B6  596A               	subwfb	(_White_setup+10)& (0+255),w,b
   982   0002B8  6E13               	movwf	(___lldiv@divisor+2)^0,c
   983   0002BA  5056               	movf	(_Black_setup+11)^0,w,c
   984   0002BC  596B               	subwfb	(_White_setup+11)& (0+255),w,b
   985   0002BE  6E14               	movwf	(___lldiv@divisor+3)^0,c
   986   0002C0  EC0C  F003         	call	___lldiv	;wreg free
   987   0002C4  C00D  F0E0         	movff	?___lldiv,_get_color_code$384
   988   0002C8  C00E  F0E1         	movff	?___lldiv+1,_get_color_code$384+1
   989   0002CC  C00F  F0E2         	movff	?___lldiv+2,_get_color_code$384+2
   990   0002D0  C010  F0E3         	movff	?___lldiv+3,_get_color_code$384+3
   991   0002D4                     l1797:
   992   0002D4  C0E0  F0F4         	movff	_get_color_code$384,get_color_code@NormalizedRGB+8
   993   0002D8  C0E1  F0F5         	movff	_get_color_code$384+1,get_color_code@NormalizedRGB+9
   994   0002DC  C0E2  F0F6         	movff	_get_color_code$384+2,get_color_code@NormalizedRGB+10
   995   0002E0  C0E3  F0F7         	movff	_get_color_code$384+3,get_color_code@NormalizedRGB+11
   996   0002E4                     
   997                           ;color.c: 169:     unsigned int min_value = get_color_distance(NormalizedRGB,Color_rules
      +                          [0]);
   998   0002E4  EE20  F0EC         	lfsr	2,get_color_code@NormalizedRGB
   999   0002E8  EE00  F007         	lfsr	0,get_color_distance@color1
  1000   0002EC  0E0B               	movlw	11
  1001   0002EE                     u1071:
  1002   0002EE  CFDB FFEB          	movff	plusw2,plusw0
  1003   0002F2  06E8               	decf	wreg,f,c
  1004   0002F4  E2FC               	bc	u1071
  1005   0002F6  EE21  F000         	lfsr	2,_Color_rules
  1006   0002FA  EE00  F013         	lfsr	0,get_color_distance@color2
  1007   0002FE  0E0B               	movlw	11
  1008   000300                     u1081:
  1009   000300  CFDB FFEB          	movff	plusw2,plusw0
  1010   000304  06E8               	decf	wreg,f,c
  1011   000306  E2FC               	bc	u1081
  1012   000308  ECE8  F001         	call	_get_color_distance	;wreg free
  1013   00030C  C007  F0E4         	movff	?_get_color_distance,get_color_code@min_value
  1014   000310  C008  F0E5         	movff	?_get_color_distance+1,get_color_code@min_value+1
  1015   000314                     
  1016                           ;color.c: 170:     unsigned int min_index = 0;
  1017   000314  0E00               	movlw	0
  1018   000316  0100               	movlb	0	; () banked
  1019   000318  6FE7               	movwf	(get_color_code@min_index+1)& (0+255),b
  1020   00031A  0E00               	movlw	0
  1021   00031C  6FE6               	movwf	get_color_code@min_index& (0+255),b
  1022   00031E                     
  1023                           ; BSR set to: 0
  1024                           ;color.c: 171:     for(unsigned int i = 1;i < 9; i++){
  1025   00031E  0E00               	movlw	0
  1026   000320  6FEB               	movwf	(get_color_code@i+1)& (0+255),b
  1027   000322  0E01               	movlw	1
  1028   000324  6FEA               	movwf	get_color_code@i& (0+255),b
  1029   000326                     l1809:
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;color.c: 172:         unsigned int value = get_color_distance(NormalizedRGB,Color_rules
      +                          [i]);
  1033   000326  C0EA  F001         	movff	get_color_code@i,___wmul@multiplier
  1034   00032A  C0EB  F002         	movff	get_color_code@i+1,___wmul@multiplier+1
  1035   00032E  0E00               	movlw	0
  1036   000330  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1037   000332  0E0C               	movlw	12
  1038   000334  6E03               	movwf	___wmul@multiplicand^0,c
  1039   000336  ECFC  F004         	call	___wmul	;wreg free
  1040   00033A  0E00               	movlw	low _Color_rules
  1041   00033C  2401               	addwf	?___wmul^0,w,c
  1042   00033E  6ED9               	movwf	fsr2l,c
  1043   000340  0E01               	movlw	high _Color_rules
  1044   000342  2002               	addwfc	(?___wmul+1)^0,w,c
  1045   000344  6EDA               	movwf	fsr2h,c
  1046   000346  EE10  F0CC         	lfsr	1,_get_color_code$2210
  1047   00034A  0E0B               	movlw	11
  1048   00034C                     u1091:
  1049   00034C  CFDB FFE3          	movff	plusw2,plusw1
  1050   000350  06E8               	decf	wreg,f,c
  1051   000352  E2FC               	bc	u1091
  1052   000354                     
  1053                           ;color.c: 172:         unsigned int value = get_color_distance(NormalizedRGB,Color_rules
      +                          [i]);
  1054   000354  EE20  F0EC         	lfsr	2,get_color_code@NormalizedRGB
  1055   000358  EE00  F007         	lfsr	0,get_color_distance@color1
  1056   00035C  0E0B               	movlw	11
  1057   00035E                     u1101:
  1058   00035E  CFDB FFEB          	movff	plusw2,plusw0
  1059   000362  06E8               	decf	wreg,f,c
  1060   000364  E2FC               	bc	u1101
  1061   000366  EE20  F0CC         	lfsr	2,_get_color_code$2210
  1062   00036A  EE00  F013         	lfsr	0,get_color_distance@color2
  1063   00036E  0E0B               	movlw	11
  1064   000370                     u1111:
  1065   000370  CFDB FFEB          	movff	plusw2,plusw0
  1066   000374  06E8               	decf	wreg,f,c
  1067   000376  E2FC               	bc	u1111
  1068   000378  ECE8  F001         	call	_get_color_distance	;wreg free
  1069   00037C  C007  F0E8         	movff	?_get_color_distance,get_color_code@value
  1070   000380  C008  F0E9         	movff	?_get_color_distance+1,get_color_code@value+1
  1071   000384                     
  1072                           ;color.c: 173:         if(value < min_value){
  1073   000384  0100               	movlb	0	; () banked
  1074   000386  51E4               	movf	get_color_code@min_value& (0+255),w,b
  1075   000388  5DE8               	subwf	get_color_code@value& (0+255),w,b
  1076   00038A  51E5               	movf	(get_color_code@min_value+1)& (0+255),w,b
  1077   00038C  59E9               	subwfb	(get_color_code@value+1)& (0+255),w,b
  1078   00038E  B0D8               	btfsc	status,0,c
  1079   000390  EFCC  F001         	goto	u1121
  1080   000394  EFCE  F001         	goto	u1120
  1081   000398                     u1121:
  1082   000398  EFD6  F001         	goto	l1817
  1083   00039C                     u1120:
  1084   00039C                     
  1085                           ; BSR set to: 0
  1086                           ;color.c: 174:             min_index = i;
  1087   00039C  C0EA  F0E6         	movff	get_color_code@i,get_color_code@min_index
  1088   0003A0  C0EB  F0E7         	movff	get_color_code@i+1,get_color_code@min_index+1
  1089                           
  1090                           ;color.c: 175:             min_value = value;
  1091   0003A4  C0E8  F0E4         	movff	get_color_code@value,get_color_code@min_value
  1092   0003A8  C0E9  F0E5         	movff	get_color_code@value+1,get_color_code@min_value+1
  1093   0003AC                     l1817:
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;color.c: 177:     }
  1097   0003AC  4BEA               	infsnz	get_color_code@i& (0+255),f,b
  1098   0003AE  2BEB               	incf	(get_color_code@i+1)& (0+255),f,b
  1099   0003B0                     
  1100                           ; BSR set to: 0
  1101   0003B0  51EB               	movf	(get_color_code@i+1)& (0+255),w,b
  1102   0003B2  E109               	bnz	u1130
  1103   0003B4  0E09               	movlw	9
  1104   0003B6  5DEA               	subwf	get_color_code@i& (0+255),w,b
  1105   0003B8  A0D8               	btfss	status,0,c
  1106   0003BA  EFE1  F001         	goto	u1131
  1107   0003BE  EFE3  F001         	goto	u1130
  1108   0003C2                     u1131:
  1109   0003C2  EF93  F001         	goto	l1809
  1110   0003C6                     u1130:
  1111   0003C6                     
  1112                           ; BSR set to: 0
  1113                           ;color.c: 178:     return min_index;
  1114   0003C6  C0E6  F035         	movff	get_color_code@min_index,?_get_color_code
  1115   0003CA  C0E7  F036         	movff	get_color_code@min_index+1,?_get_color_code+1
  1116   0003CE                     
  1117                           ; BSR set to: 0
  1118   0003CE  0012               	return		;funcret
  1119   0003D0                     __end_of_get_color_code:
  1120                           	callstack 0
  1121                           
  1122 ;; *************** function _set_led_color *****************
  1123 ;; Defined at:
  1124 ;;		line 130 in file "color.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  color           2    0[COMRAM] unsigned int 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		None
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; Hardware stack levels required when called: 2
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_get_color_code
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text2
  1153   0008E4                     __ptext2:
  1154                           	callstack 0
  1155   0008E4                     _set_led_color:
  1156                           	callstack 27
  1157   0008E4                     
  1158                           ;color.c: 134:     if(color & 0b100){
  1159   0008E4  A401               	btfss	set_led_color@color^0,2,c
  1160   0008E6  EF77  F004         	goto	u871
  1161   0008EA  EF79  F004         	goto	u870
  1162   0008EE                     u871:
  1163   0008EE  EF7C  F004         	goto	l90
  1164   0008F2                     u870:
  1165   0008F2                     
  1166                           ;color.c: 135:         LATGbits.LATG1 = 1;
  1167   0008F2  827F               	bsf	127,1,c	;volatile
  1168                           
  1169                           ;color.c: 136:     }else{
  1170   0008F4  EF7D  F004         	goto	l91
  1171   0008F8                     l90:
  1172                           
  1173                           ;color.c: 137:         LATGbits.LATG1 = 0;
  1174   0008F8  927F               	bcf	127,1,c	;volatile
  1175   0008FA                     l91:
  1176                           
  1177                           ;color.c: 139:     if(color & 0b010){
  1178   0008FA  A201               	btfss	set_led_color@color^0,1,c
  1179   0008FC  EF82  F004         	goto	u881
  1180   000900  EF84  F004         	goto	u880
  1181   000904                     u881:
  1182   000904  EF87  F004         	goto	l92
  1183   000908                     u880:
  1184   000908                     
  1185                           ;color.c: 140:         LATAbits.LATA4 = 1;
  1186   000908  8879               	bsf	121,4,c	;volatile
  1187                           
  1188                           ;color.c: 141:     }else{
  1189   00090A  EF88  F004         	goto	l93
  1190   00090E                     l92:
  1191                           
  1192                           ;color.c: 142:         LATAbits.LATA4 = 0;
  1193   00090E  9879               	bcf	121,4,c	;volatile
  1194   000910                     l93:
  1195                           
  1196                           ;color.c: 144:     if(color & 0b001){
  1197   000910  A001               	btfss	set_led_color@color^0,0,c
  1198   000912  EF8D  F004         	goto	u891
  1199   000916  EF8F  F004         	goto	u890
  1200   00091A                     u891:
  1201   00091A  EF92  F004         	goto	l94
  1202   00091E                     u890:
  1203   00091E                     
  1204                           ;color.c: 145:         LATFbits.LATF7 = 1;
  1205   00091E  8E7E               	bsf	126,7,c	;volatile
  1206                           
  1207                           ;color.c: 146:     }else{
  1208   000920  EF93  F004         	goto	l96
  1209   000924                     l94:
  1210                           
  1211                           ;color.c: 147:         LATFbits.LATF7 = 0;
  1212   000924  9E7E               	bcf	126,7,c	;volatile
  1213   000926                     l96:
  1214   000926  0012               	return		;funcret
  1215   000928                     __end_of_set_led_color:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function _get_color_distance *****************
  1219 ;; Defined at:
  1220 ;;		line 122 in file "color.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  color1         12    6[COMRAM] struct RGB_val
  1223 ;;  color2         12   18[COMRAM] struct RGB_val
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  B_offset        2   50[COMRAM] unsigned int 
  1226 ;;  G_offset        2   48[COMRAM] unsigned int 
  1227 ;;  R_offset        2   46[COMRAM] unsigned int 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  2    6[COMRAM] unsigned int 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1237 ;;      Params:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1238 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1239 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1240 ;;      Totals:        46       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1241 ;;Total ram usage:       46 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; Hardware stack levels required when called: 3
  1244 ;; This function calls:
  1245 ;;		___wmul
  1246 ;; This function is called by:
  1247 ;;		_get_color_code
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text3
  1252   0003D0                     __ptext3:
  1253                           	callstack 0
  1254   0003D0                     _get_color_distance:
  1255                           	callstack 26
  1256   0003D0                     
  1257                           ;color.c: 123:     unsigned int R_offset = color1.R >= color2.R ? color1.R - color2.R : 
      +                          color2.R - color1.R;
  1258   0003D0  5013               	movf	get_color_distance@color2^0,w,c
  1259   0003D2  5C07               	subwf	get_color_distance@color1^0,w,c
  1260   0003D4  5014               	movf	(get_color_distance@color2+1)^0,w,c
  1261   0003D6  5808               	subwfb	(get_color_distance@color1+1)^0,w,c
  1262   0003D8  5015               	movf	(get_color_distance@color2+2)^0,w,c
  1263   0003DA  5809               	subwfb	(get_color_distance@color1+2)^0,w,c
  1264   0003DC  5016               	movf	(get_color_distance@color2+3)^0,w,c
  1265   0003DE  580A               	subwfb	(get_color_distance@color1+3)^0,w,c
  1266   0003E0  B0D8               	btfsc	status,0,c
  1267   0003E2  EFF5  F001         	goto	u841
  1268   0003E6  EFF7  F001         	goto	u840
  1269   0003EA                     u841:
  1270   0003EA  EF05  F002         	goto	l1663
  1271   0003EE                     u840:
  1272   0003EE  5007               	movf	get_color_distance@color1^0,w,c
  1273   0003F0  5C13               	subwf	get_color_distance@color2^0,w,c
  1274   0003F2  6E23               	movwf	_get_color_distance$341^0,c
  1275   0003F4  5008               	movf	(get_color_distance@color1+1)^0,w,c
  1276   0003F6  5814               	subwfb	(get_color_distance@color2+1)^0,w,c
  1277   0003F8  6E24               	movwf	(_get_color_distance$341+1)^0,c
  1278   0003FA  5009               	movf	(get_color_distance@color1+2)^0,w,c
  1279   0003FC  5815               	subwfb	(get_color_distance@color2+2)^0,w,c
  1280   0003FE  6E25               	movwf	(_get_color_distance$341+2)^0,c
  1281   000400  500A               	movf	(get_color_distance@color1+3)^0,w,c
  1282   000402  5816               	subwfb	(get_color_distance@color2+3)^0,w,c
  1283   000404  6E26               	movwf	(_get_color_distance$341+3)^0,c
  1284   000406  EF11  F002         	goto	l1665
  1285   00040A                     l1663:
  1286   00040A  5013               	movf	get_color_distance@color2^0,w,c
  1287   00040C  5C07               	subwf	get_color_distance@color1^0,w,c
  1288   00040E  6E23               	movwf	_get_color_distance$341^0,c
  1289   000410  5014               	movf	(get_color_distance@color2+1)^0,w,c
  1290   000412  5808               	subwfb	(get_color_distance@color1+1)^0,w,c
  1291   000414  6E24               	movwf	(_get_color_distance$341+1)^0,c
  1292   000416  5015               	movf	(get_color_distance@color2+2)^0,w,c
  1293   000418  5809               	subwfb	(get_color_distance@color1+2)^0,w,c
  1294   00041A  6E25               	movwf	(_get_color_distance$341+2)^0,c
  1295   00041C  5016               	movf	(get_color_distance@color2+3)^0,w,c
  1296   00041E  580A               	subwfb	(get_color_distance@color1+3)^0,w,c
  1297   000420  6E26               	movwf	(_get_color_distance$341+3)^0,c
  1298   000422                     l1665:
  1299   000422  C023  F02F         	movff	_get_color_distance$341,get_color_distance@R_offset
  1300   000426  C024  F030         	movff	_get_color_distance$341+1,get_color_distance@R_offset+1
  1301                           
  1302                           ;color.c: 124:     unsigned int G_offset = color1.G >= color2.G ? color1.G - color2.G : 
      +                          color2.G - color1.G;
  1303   00042A  5017               	movf	(get_color_distance@color2+4)^0,w,c
  1304   00042C  5C0B               	subwf	(get_color_distance@color1+4)^0,w,c
  1305   00042E  5018               	movf	(get_color_distance@color2+5)^0,w,c
  1306   000430  580C               	subwfb	(get_color_distance@color1+5)^0,w,c
  1307   000432  5019               	movf	(get_color_distance@color2+6)^0,w,c
  1308   000434  580D               	subwfb	(get_color_distance@color1+6)^0,w,c
  1309   000436  501A               	movf	(get_color_distance@color2+7)^0,w,c
  1310   000438  580E               	subwfb	(get_color_distance@color1+7)^0,w,c
  1311   00043A  B0D8               	btfsc	status,0,c
  1312   00043C  EF22  F002         	goto	u851
  1313   000440  EF24  F002         	goto	u850
  1314   000444                     u851:
  1315   000444  EF32  F002         	goto	l1669
  1316   000448                     u850:
  1317   000448  500B               	movf	(get_color_distance@color1+4)^0,w,c
  1318   00044A  5C17               	subwf	(get_color_distance@color2+4)^0,w,c
  1319   00044C  6E27               	movwf	_get_color_distance$343^0,c
  1320   00044E  500C               	movf	(get_color_distance@color1+5)^0,w,c
  1321   000450  5818               	subwfb	(get_color_distance@color2+5)^0,w,c
  1322   000452  6E28               	movwf	(_get_color_distance$343+1)^0,c
  1323   000454  500D               	movf	(get_color_distance@color1+6)^0,w,c
  1324   000456  5819               	subwfb	(get_color_distance@color2+6)^0,w,c
  1325   000458  6E29               	movwf	(_get_color_distance$343+2)^0,c
  1326   00045A  500E               	movf	(get_color_distance@color1+7)^0,w,c
  1327   00045C  581A               	subwfb	(get_color_distance@color2+7)^0,w,c
  1328   00045E  6E2A               	movwf	(_get_color_distance$343+3)^0,c
  1329   000460  EF3E  F002         	goto	l1671
  1330   000464                     l1669:
  1331   000464  5017               	movf	(get_color_distance@color2+4)^0,w,c
  1332   000466  5C0B               	subwf	(get_color_distance@color1+4)^0,w,c
  1333   000468  6E27               	movwf	_get_color_distance$343^0,c
  1334   00046A  5018               	movf	(get_color_distance@color2+5)^0,w,c
  1335   00046C  580C               	subwfb	(get_color_distance@color1+5)^0,w,c
  1336   00046E  6E28               	movwf	(_get_color_distance$343+1)^0,c
  1337   000470  5019               	movf	(get_color_distance@color2+6)^0,w,c
  1338   000472  580D               	subwfb	(get_color_distance@color1+6)^0,w,c
  1339   000474  6E29               	movwf	(_get_color_distance$343+2)^0,c
  1340   000476  501A               	movf	(get_color_distance@color2+7)^0,w,c
  1341   000478  580E               	subwfb	(get_color_distance@color1+7)^0,w,c
  1342   00047A  6E2A               	movwf	(_get_color_distance$343+3)^0,c
  1343   00047C                     l1671:
  1344   00047C  C027  F031         	movff	_get_color_distance$343,get_color_distance@G_offset
  1345   000480  C028  F032         	movff	_get_color_distance$343+1,get_color_distance@G_offset+1
  1346                           
  1347                           ;color.c: 125:     unsigned int B_offset = color1.B >= color2.B ? color1.B - color2.B : 
      +                          color2.B - color1.B;
  1348   000484  501B               	movf	(get_color_distance@color2+8)^0,w,c
  1349   000486  5C0F               	subwf	(get_color_distance@color1+8)^0,w,c
  1350   000488  501C               	movf	(get_color_distance@color2+9)^0,w,c
  1351   00048A  5810               	subwfb	(get_color_distance@color1+9)^0,w,c
  1352   00048C  501D               	movf	(get_color_distance@color2+10)^0,w,c
  1353   00048E  5811               	subwfb	(get_color_distance@color1+10)^0,w,c
  1354   000490  501E               	movf	(get_color_distance@color2+11)^0,w,c
  1355   000492  5812               	subwfb	(get_color_distance@color1+11)^0,w,c
  1356   000494  B0D8               	btfsc	status,0,c
  1357   000496  EF4F  F002         	goto	u861
  1358   00049A  EF51  F002         	goto	u860
  1359   00049E                     u861:
  1360   00049E  EF5F  F002         	goto	l1675
  1361   0004A2                     u860:
  1362   0004A2  500F               	movf	(get_color_distance@color1+8)^0,w,c
  1363   0004A4  5C1B               	subwf	(get_color_distance@color2+8)^0,w,c
  1364   0004A6  6E2B               	movwf	_get_color_distance$345^0,c
  1365   0004A8  5010               	movf	(get_color_distance@color1+9)^0,w,c
  1366   0004AA  581C               	subwfb	(get_color_distance@color2+9)^0,w,c
  1367   0004AC  6E2C               	movwf	(_get_color_distance$345+1)^0,c
  1368   0004AE  5011               	movf	(get_color_distance@color1+10)^0,w,c
  1369   0004B0  581D               	subwfb	(get_color_distance@color2+10)^0,w,c
  1370   0004B2  6E2D               	movwf	(_get_color_distance$345+2)^0,c
  1371   0004B4  5012               	movf	(get_color_distance@color1+11)^0,w,c
  1372   0004B6  581E               	subwfb	(get_color_distance@color2+11)^0,w,c
  1373   0004B8  6E2E               	movwf	(_get_color_distance$345+3)^0,c
  1374   0004BA  EF6B  F002         	goto	l1677
  1375   0004BE                     l1675:
  1376   0004BE  501B               	movf	(get_color_distance@color2+8)^0,w,c
  1377   0004C0  5C0F               	subwf	(get_color_distance@color1+8)^0,w,c
  1378   0004C2  6E2B               	movwf	_get_color_distance$345^0,c
  1379   0004C4  501C               	movf	(get_color_distance@color2+9)^0,w,c
  1380   0004C6  5810               	subwfb	(get_color_distance@color1+9)^0,w,c
  1381   0004C8  6E2C               	movwf	(_get_color_distance$345+1)^0,c
  1382   0004CA  501D               	movf	(get_color_distance@color2+10)^0,w,c
  1383   0004CC  5811               	subwfb	(get_color_distance@color1+10)^0,w,c
  1384   0004CE  6E2D               	movwf	(_get_color_distance$345+2)^0,c
  1385   0004D0  501E               	movf	(get_color_distance@color2+11)^0,w,c
  1386   0004D2  5812               	subwfb	(get_color_distance@color1+11)^0,w,c
  1387   0004D4  6E2E               	movwf	(_get_color_distance$345+3)^0,c
  1388   0004D6                     l1677:
  1389   0004D6  C02B  F033         	movff	_get_color_distance$345,get_color_distance@B_offset
  1390   0004DA  C02C  F034         	movff	_get_color_distance$345+1,get_color_distance@B_offset+1
  1391   0004DE                     
  1392                           ;color.c: 127:     return R_offset*R_offset + G_offset*G_offset + B_offset*B_offset;
  1393   0004DE  C02F  F001         	movff	get_color_distance@R_offset,___wmul@multiplier
  1394   0004E2  C030  F002         	movff	get_color_distance@R_offset+1,___wmul@multiplier+1
  1395   0004E6  C02F  F003         	movff	get_color_distance@R_offset,___wmul@multiplicand
  1396   0004EA  C030  F004         	movff	get_color_distance@R_offset+1,___wmul@multiplicand+1
  1397   0004EE  ECFC  F004         	call	___wmul	;wreg free
  1398   0004F2  C001  F01F         	movff	?___wmul,??_get_color_distance
  1399   0004F6  C002  F020         	movff	?___wmul+1,??_get_color_distance+1
  1400   0004FA  C031  F001         	movff	get_color_distance@G_offset,___wmul@multiplier
  1401   0004FE  C032  F002         	movff	get_color_distance@G_offset+1,___wmul@multiplier+1
  1402   000502  C031  F003         	movff	get_color_distance@G_offset,___wmul@multiplicand
  1403   000506  C032  F004         	movff	get_color_distance@G_offset+1,___wmul@multiplicand+1
  1404   00050A  ECFC  F004         	call	___wmul	;wreg free
  1405   00050E  5001               	movf	?___wmul^0,w,c
  1406   000510  241F               	addwf	??_get_color_distance^0,w,c
  1407   000512  6E21               	movwf	(??_get_color_distance+2)^0,c
  1408   000514  5002               	movf	(?___wmul+1)^0,w,c
  1409   000516  2020               	addwfc	(??_get_color_distance+1)^0,w,c
  1410   000518  6E22               	movwf	(??_get_color_distance+3)^0,c
  1411   00051A  C033  F001         	movff	get_color_distance@B_offset,___wmul@multiplier
  1412   00051E  C034  F002         	movff	get_color_distance@B_offset+1,___wmul@multiplier+1
  1413   000522  C033  F003         	movff	get_color_distance@B_offset,___wmul@multiplicand
  1414   000526  C034  F004         	movff	get_color_distance@B_offset+1,___wmul@multiplicand+1
  1415   00052A  ECFC  F004         	call	___wmul	;wreg free
  1416   00052E  5001               	movf	?___wmul^0,w,c
  1417   000530  2421               	addwf	(??_get_color_distance+2)^0,w,c
  1418   000532  6E07               	movwf	?_get_color_distance^0,c
  1419   000534  5002               	movf	(?___wmul+1)^0,w,c
  1420   000536  2022               	addwfc	(??_get_color_distance+3)^0,w,c
  1421   000538  6E08               	movwf	(?_get_color_distance+1)^0,c
  1422   00053A  0012               	return		;funcret
  1423   00053C                     __end_of_get_color_distance:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function ___wmul *****************
  1427 ;; Defined at:
  1428 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  multiplier      2    0[COMRAM] unsigned int 
  1431 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  product         2    4[COMRAM] unsigned int 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  2    0[COMRAM] unsigned int 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0, prodl, prodh
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1446 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1447 ;;Total ram usage:        6 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 2
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_get_color_distance
  1454 ;;		_get_color_code
  1455 ;;		_setMotorPWM
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text4
  1460   0009F8                     __ptext4:
  1461                           	callstack 0
  1462   0009F8                     ___wmul:
  1463                           	callstack 26
  1464   0009F8  5001               	movf	___wmul@multiplier^0,w,c
  1465   0009FA  0203               	mulwf	___wmul@multiplicand^0,c
  1466   0009FC  CFF3 F005          	movff	prodl,___wmul@product
  1467   000A00  CFF4 F006          	movff	prodh,___wmul@product+1
  1468   000A04  5001               	movf	___wmul@multiplier^0,w,c
  1469   000A06  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1470   000A08  50F3               	movf	243,w,c
  1471   000A0A  2606               	addwf	(___wmul@product+1)^0,f,c
  1472   000A0C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1473   000A0E  0203               	mulwf	___wmul@multiplicand^0,c
  1474   000A10  50F3               	movf	243,w,c
  1475   000A12  2606               	addwf	(___wmul@product+1)^0,f,c
  1476   000A14  C005  F001         	movff	___wmul@product,?___wmul
  1477   000A18  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1478   000A1C  0012               	return		;funcret
  1479   000A1E                     __end_of___wmul:
  1480                           	callstack 0
  1481                           
  1482 ;; *************** function _color_read_Red *****************
  1483 ;; Defined at:
  1484 ;;		line 66 in file "color.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  tmp             2    9[COMRAM] unsigned int 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  2    4[COMRAM] unsigned int 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1500 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1501 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1502 ;;Total ram usage:        7 bytes
  1503 ;; Hardware stack levels used: 1
  1504 ;; Hardware stack levels required when called: 4
  1505 ;; This function calls:
  1506 ;;		_I2C_2_Master_Read
  1507 ;;		_I2C_2_Master_RepStart
  1508 ;;		_I2C_2_Master_Start
  1509 ;;		_I2C_2_Master_Stop
  1510 ;;		_I2C_2_Master_Write
  1511 ;; This function is called by:
  1512 ;;		_get_color_code
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text5
  1517   0007F4                     __ptext5:
  1518                           	callstack 0
  1519   0007F4                     _color_read_Red:
  1520                           	callstack 25
  1521   0007F4                     
  1522                           ;color.c: 68:  unsigned int tmp;;color.c: 69:  I2C_2_Master_Start();
  1523   0007F4  EC4C  F005         	call	_I2C_2_Master_Start	;wreg free
  1524                           
  1525                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x00);
  1526   0007F8  0E52               	movlw	82
  1527   0007FA  EC36  F005         	call	_I2C_2_Master_Write
  1528                           
  1529                           ;color.c: 71:  I2C_2_Master_Write(0xA0 | 0x16);
  1530   0007FE  0EB6               	movlw	182
  1531   000800  EC36  F005         	call	_I2C_2_Master_Write
  1532                           
  1533                           ;color.c: 72:  I2C_2_Master_RepStart();
  1534   000804  EC42  F005         	call	_I2C_2_Master_RepStart	;wreg free
  1535                           
  1536                           ;color.c: 73:  I2C_2_Master_Write(0x52 | 0x01);
  1537   000808  0E53               	movlw	83
  1538   00080A  EC36  F005         	call	_I2C_2_Master_Write
  1539                           
  1540                           ;color.c: 74:  tmp=I2C_2_Master_Read(1);
  1541   00080E  0E01               	movlw	1
  1542   000810  EC94  F004         	call	_I2C_2_Master_Read
  1543   000814  6E07               	movwf	??_color_read_Red^0,c
  1544   000816  5007               	movf	??_color_read_Red^0,w,c
  1545   000818  6E0A               	movwf	color_read_Red@tmp^0,c
  1546   00081A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1547                           
  1548                           ;color.c: 75:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1549   00081C  0E00               	movlw	0
  1550   00081E  EC94  F004         	call	_I2C_2_Master_Read
  1551   000822  6E07               	movwf	??_color_read_Red^0,c
  1552   000824  5007               	movf	??_color_read_Red^0,w,c
  1553   000826  6E09               	movwf	(??_color_read_Red+2)^0,c
  1554   000828  6A08               	clrf	(??_color_read_Red+1)^0,c
  1555   00082A  500A               	movf	color_read_Red@tmp^0,w,c
  1556   00082C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1557   00082E  6E0A               	movwf	color_read_Red@tmp^0,c
  1558   000830  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1559   000832  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1560   000834  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1561                           
  1562                           ;color.c: 76:  I2C_2_Master_Stop();
  1563   000836  EC47  F005         	call	_I2C_2_Master_Stop	;wreg free
  1564   00083A                     
  1565                           ;color.c: 77:  return tmp;
  1566   00083A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1567   00083E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1568   000842  0012               	return		;funcret
  1569   000844                     __end_of_color_read_Red:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _color_read_Green *****************
  1573 ;; Defined at:
  1574 ;;		line 94 in file "color.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  tmp             2    9[COMRAM] unsigned int 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  2    4[COMRAM] unsigned int 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1591 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1592 ;;Total ram usage:        7 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 4
  1595 ;; This function calls:
  1596 ;;		_I2C_2_Master_Read
  1597 ;;		_I2C_2_Master_RepStart
  1598 ;;		_I2C_2_Master_Start
  1599 ;;		_I2C_2_Master_Stop
  1600 ;;		_I2C_2_Master_Write
  1601 ;; This function is called by:
  1602 ;;		_get_color_code
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text6
  1607   000844                     __ptext6:
  1608                           	callstack 0
  1609   000844                     _color_read_Green:
  1610                           	callstack 25
  1611   000844                     
  1612                           ;color.c: 96:  unsigned int tmp;;color.c: 97:  I2C_2_Master_Start();
  1613   000844  EC4C  F005         	call	_I2C_2_Master_Start	;wreg free
  1614                           
  1615                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  1616   000848  0E52               	movlw	82
  1617   00084A  EC36  F005         	call	_I2C_2_Master_Write
  1618                           
  1619                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x18);
  1620   00084E  0EB8               	movlw	184
  1621   000850  EC36  F005         	call	_I2C_2_Master_Write
  1622                           
  1623                           ;color.c: 100:  I2C_2_Master_RepStart();
  1624   000854  EC42  F005         	call	_I2C_2_Master_RepStart	;wreg free
  1625                           
  1626                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  1627   000858  0E53               	movlw	83
  1628   00085A  EC36  F005         	call	_I2C_2_Master_Write
  1629                           
  1630                           ;color.c: 102:  tmp=I2C_2_Master_Read(1);
  1631   00085E  0E01               	movlw	1
  1632   000860  EC94  F004         	call	_I2C_2_Master_Read
  1633   000864  6E07               	movwf	??_color_read_Green^0,c
  1634   000866  5007               	movf	??_color_read_Green^0,w,c
  1635   000868  6E0A               	movwf	color_read_Green@tmp^0,c
  1636   00086A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1637                           
  1638                           ;color.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1639   00086C  0E00               	movlw	0
  1640   00086E  EC94  F004         	call	_I2C_2_Master_Read
  1641   000872  6E07               	movwf	??_color_read_Green^0,c
  1642   000874  5007               	movf	??_color_read_Green^0,w,c
  1643   000876  6E09               	movwf	(??_color_read_Green+2)^0,c
  1644   000878  6A08               	clrf	(??_color_read_Green+1)^0,c
  1645   00087A  500A               	movf	color_read_Green@tmp^0,w,c
  1646   00087C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1647   00087E  6E0A               	movwf	color_read_Green@tmp^0,c
  1648   000880  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1649   000882  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1650   000884  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1651                           
  1652                           ;color.c: 104:  I2C_2_Master_Stop();
  1653   000886  EC47  F005         	call	_I2C_2_Master_Stop	;wreg free
  1654   00088A                     
  1655                           ;color.c: 105:  return tmp;
  1656   00088A  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1657   00088E  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1658   000892  0012               	return		;funcret
  1659   000894                     __end_of_color_read_Green:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function _color_read_Blue *****************
  1663 ;; Defined at:
  1664 ;;		line 80 in file "color.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  tmp             2    9[COMRAM] unsigned int 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  2    4[COMRAM] unsigned int 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1680 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1681 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1682 ;;Total ram usage:        7 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; Hardware stack levels required when called: 4
  1685 ;; This function calls:
  1686 ;;		_I2C_2_Master_Read
  1687 ;;		_I2C_2_Master_RepStart
  1688 ;;		_I2C_2_Master_Start
  1689 ;;		_I2C_2_Master_Stop
  1690 ;;		_I2C_2_Master_Write
  1691 ;; This function is called by:
  1692 ;;		_get_color_code
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text7
  1697   000894                     __ptext7:
  1698                           	callstack 0
  1699   000894                     _color_read_Blue:
  1700                           	callstack 25
  1701   000894                     
  1702                           ;color.c: 82:  unsigned int tmp;;color.c: 83:  I2C_2_Master_Start();
  1703   000894  EC4C  F005         	call	_I2C_2_Master_Start	;wreg free
  1704                           
  1705                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x00);
  1706   000898  0E52               	movlw	82
  1707   00089A  EC36  F005         	call	_I2C_2_Master_Write
  1708                           
  1709                           ;color.c: 85:  I2C_2_Master_Write(0xA0 | 0x1A);
  1710   00089E  0EBA               	movlw	186
  1711   0008A0  EC36  F005         	call	_I2C_2_Master_Write
  1712                           
  1713                           ;color.c: 86:  I2C_2_Master_RepStart();
  1714   0008A4  EC42  F005         	call	_I2C_2_Master_RepStart	;wreg free
  1715                           
  1716                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x01);
  1717   0008A8  0E53               	movlw	83
  1718   0008AA  EC36  F005         	call	_I2C_2_Master_Write
  1719                           
  1720                           ;color.c: 88:  tmp=I2C_2_Master_Read(1);
  1721   0008AE  0E01               	movlw	1
  1722   0008B0  EC94  F004         	call	_I2C_2_Master_Read
  1723   0008B4  6E07               	movwf	??_color_read_Blue^0,c
  1724   0008B6  5007               	movf	??_color_read_Blue^0,w,c
  1725   0008B8  6E0A               	movwf	color_read_Blue@tmp^0,c
  1726   0008BA  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1727                           
  1728                           ;color.c: 89:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1729   0008BC  0E00               	movlw	0
  1730   0008BE  EC94  F004         	call	_I2C_2_Master_Read
  1731   0008C2  6E07               	movwf	??_color_read_Blue^0,c
  1732   0008C4  5007               	movf	??_color_read_Blue^0,w,c
  1733   0008C6  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1734   0008C8  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1735   0008CA  500A               	movf	color_read_Blue@tmp^0,w,c
  1736   0008CC  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1737   0008CE  6E0A               	movwf	color_read_Blue@tmp^0,c
  1738   0008D0  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1739   0008D2  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1740   0008D4  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1741                           
  1742                           ;color.c: 90:  I2C_2_Master_Stop();
  1743   0008D6  EC47  F005         	call	_I2C_2_Master_Stop	;wreg free
  1744   0008DA                     
  1745                           ;color.c: 91:  return tmp;
  1746   0008DA  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1747   0008DE  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1748   0008E2  0012               	return		;funcret
  1749   0008E4                     __end_of_color_read_Blue:
  1750                           	callstack 0
  1751                           
  1752 ;; *************** function _I2C_2_Master_RepStart *****************
  1753 ;; Defined at:
  1754 ;;		line 33 in file "i2c.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;Total ram usage:        0 bytes
  1773 ;; Hardware stack levels used: 1
  1774 ;; Hardware stack levels required when called: 3
  1775 ;; This function calls:
  1776 ;;		_I2C_2_Master_Idle
  1777 ;; This function is called by:
  1778 ;;		_color_read_Red
  1779 ;;		_color_read_Blue
  1780 ;;		_color_read_Green
  1781 ;;		_color_read_Clear
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text8
  1786   000A84                     __ptext8:
  1787                           	callstack 0
  1788   000A84                     _I2C_2_Master_RepStart:
  1789                           	callstack 25
  1790   000A84                     
  1791                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1792   000A84  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  1793   000A88                     
  1794                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1795   000A88  010E               	movlb	14	; () banked
  1796   000A8A  83DA               	bsf	218,1,b	;volatile
  1797   000A8C                     
  1798                           ; BSR set to: 14
  1799   000A8C  0012               	return		;funcret
  1800   000A8E                     __end_of_I2C_2_Master_RepStart:
  1801                           	callstack 0
  1802                           
  1803 ;; *************** function _I2C_2_Master_Read *****************
  1804 ;; Defined at:
  1805 ;;		line 51 in file "i2c.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  ack             1    wreg     unsigned char 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  ack             1    2[COMRAM] unsigned char 
  1810 ;;  tmp             1    3[COMRAM] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      unsigned char 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1823 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1824 ;;Total ram usage:        3 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; Hardware stack levels required when called: 3
  1827 ;; This function calls:
  1828 ;;		_I2C_2_Master_Idle
  1829 ;; This function is called by:
  1830 ;;		_color_read_Red
  1831 ;;		_color_read_Blue
  1832 ;;		_color_read_Green
  1833 ;;		_color_read_Clear
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text9
  1838   000928                     __ptext9:
  1839                           	callstack 0
  1840   000928                     _I2C_2_Master_Read:
  1841                           	callstack 25
  1842                           
  1843                           ; BSR set to: 14
  1844                           ;incstack = 0
  1845                           ;I2C_2_Master_Read@ack stored from wreg
  1846   000928  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1847   00092A                     
  1848                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1849   00092A  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  1850   00092E                     
  1851                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1852   00092E  010E               	movlb	14	; () banked
  1853   000930  87DA               	bsf	218,3,b	;volatile
  1854                           
  1855                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1856   000932  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  1857   000936                     
  1858                           ;i2c.c: 57:   tmp = SSP2BUF;
  1859   000936  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1860                           
  1861                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1862   00093A  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  1863   00093E                     
  1864                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1865   00093E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1866   000940  B4D8               	btfsc	status,2,c
  1867   000942  EFA5  F004         	goto	u821
  1868   000946  EFA9  F004         	goto	u820
  1869   00094A                     u821:
  1870   00094A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1871   00094C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1872   00094E  EFAA  F004         	goto	u838
  1873   000952                     u820:
  1874   000952  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1875   000954                     u838:
  1876   000954  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1877   000956  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1878   000958  010E               	movlb	14	; () banked
  1879   00095A  51DA               	movf	218,w,b	;volatile
  1880   00095C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1881   00095E  0BDF               	andlw	-33
  1882   000960  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1883   000962  6FDA               	movwf	218,b	;volatile
  1884   000964                     
  1885                           ; BSR set to: 14
  1886                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1887   000964  89DA               	bsf	218,4,b	;volatile
  1888   000966                     
  1889                           ; BSR set to: 14
  1890                           ;i2c.c: 61:   return tmp;
  1891   000966  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1892   000968                     
  1893                           ; BSR set to: 14
  1894   000968  0012               	return		;funcret
  1895   00096A                     __end_of_I2C_2_Master_Read:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function ___lmul *****************
  1899 ;; Defined at:
  1900 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  multiplier      4    0[COMRAM] unsigned long 
  1903 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  product         4    8[COMRAM] unsigned long 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  4    0[COMRAM] unsigned long 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1915 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1916 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;Total ram usage:       12 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 2
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_get_color_code
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text10
  1930   000728                     __ptext10:
  1931                           	callstack 0
  1932   000728                     ___lmul:
  1933                           	callstack 27
  1934   000728  0E00               	movlw	0
  1935   00072A  6E09               	movwf	___lmul@product^0,c
  1936   00072C  0E00               	movlw	0
  1937   00072E  6E0A               	movwf	(___lmul@product+1)^0,c
  1938   000730  0E00               	movlw	0
  1939   000732  6E0B               	movwf	(___lmul@product+2)^0,c
  1940   000734  0E00               	movlw	0
  1941   000736  6E0C               	movwf	(___lmul@product+3)^0,c
  1942   000738                     l1693:
  1943   000738  A001               	btfss	___lmul@multiplier^0,0,c
  1944   00073A  EFA1  F003         	goto	u901
  1945   00073E  EFA3  F003         	goto	u900
  1946   000742                     u901:
  1947   000742  EFAB  F003         	goto	l1697
  1948   000746                     u900:
  1949   000746  5005               	movf	___lmul@multiplicand^0,w,c
  1950   000748  2609               	addwf	___lmul@product^0,f,c
  1951   00074A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1952   00074C  220A               	addwfc	(___lmul@product+1)^0,f,c
  1953   00074E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1954   000750  220B               	addwfc	(___lmul@product+2)^0,f,c
  1955   000752  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1956   000754  220C               	addwfc	(___lmul@product+3)^0,f,c
  1957   000756                     l1697:
  1958   000756  90D8               	bcf	status,0,c
  1959   000758  3605               	rlcf	___lmul@multiplicand^0,f,c
  1960   00075A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1961   00075C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1962   00075E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1963   000760  90D8               	bcf	status,0,c
  1964   000762  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1965   000764  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1966   000766  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1967   000768  3201               	rrcf	___lmul@multiplier^0,f,c
  1968   00076A  5001               	movf	___lmul@multiplier^0,w,c
  1969   00076C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1970   00076E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1971   000770  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1972   000772  A4D8               	btfss	status,2,c
  1973   000774  EFBE  F003         	goto	u911
  1974   000778  EFC0  F003         	goto	u910
  1975   00077C                     u911:
  1976   00077C  EF9C  F003         	goto	l1693
  1977   000780                     u910:
  1978   000780  C009  F001         	movff	___lmul@product,?___lmul
  1979   000784  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1980   000788  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1981   00078C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1982   000790  0012               	return		;funcret
  1983   000792                     __end_of___lmul:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function ___lldiv *****************
  1987 ;; Defined at:
  1988 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  dividend        4   12[COMRAM] unsigned long 
  1991 ;;  divisor         4   16[COMRAM] unsigned long 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  quotient        4   20[COMRAM] unsigned long 
  1994 ;;  counter         1   24[COMRAM] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  4   12[COMRAM] unsigned long 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2004 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2005 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2007 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2008 ;;Total ram usage:       13 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 2
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_get_color_code
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text11
  2019   000618                     __ptext11:
  2020                           	callstack 0
  2021   000618                     ___lldiv:
  2022                           	callstack 27
  2023   000618  0E00               	movlw	0
  2024   00061A  6E15               	movwf	___lldiv@quotient^0,c
  2025   00061C  0E00               	movlw	0
  2026   00061E  6E16               	movwf	(___lldiv@quotient+1)^0,c
  2027   000620  0E00               	movlw	0
  2028   000622  6E17               	movwf	(___lldiv@quotient+2)^0,c
  2029   000624  0E00               	movlw	0
  2030   000626  6E18               	movwf	(___lldiv@quotient+3)^0,c
  2031   000628  5011               	movf	___lldiv@divisor^0,w,c
  2032   00062A  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  2033   00062C  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  2034   00062E  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  2035   000630  B4D8               	btfsc	status,2,c
  2036   000632  EF1D  F003         	goto	u921
  2037   000636  EF1F  F003         	goto	u920
  2038   00063A                     u921:
  2039   00063A  EF55  F003         	goto	l337
  2040   00063E                     u920:
  2041   00063E  0E01               	movlw	1
  2042   000640  6E19               	movwf	___lldiv@counter^0,c
  2043   000642  EF29  F003         	goto	l1709
  2044   000646                     l1707:
  2045   000646  90D8               	bcf	status,0,c
  2046   000648  3611               	rlcf	___lldiv@divisor^0,f,c
  2047   00064A  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  2048   00064C  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  2049   00064E  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  2050   000650  2A19               	incf	___lldiv@counter^0,f,c
  2051   000652                     l1709:
  2052   000652  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  2053   000654  EF2E  F003         	goto	u931
  2054   000658  EF30  F003         	goto	u930
  2055   00065C                     u931:
  2056   00065C  EF23  F003         	goto	l1707
  2057   000660                     u930:
  2058   000660                     l1711:
  2059   000660  90D8               	bcf	status,0,c
  2060   000662  3615               	rlcf	___lldiv@quotient^0,f,c
  2061   000664  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  2062   000666  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  2063   000668  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  2064   00066A  5011               	movf	___lldiv@divisor^0,w,c
  2065   00066C  5C0D               	subwf	___lldiv@dividend^0,w,c
  2066   00066E  5012               	movf	(___lldiv@divisor+1)^0,w,c
  2067   000670  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  2068   000672  5013               	movf	(___lldiv@divisor+2)^0,w,c
  2069   000674  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  2070   000676  5014               	movf	(___lldiv@divisor+3)^0,w,c
  2071   000678  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  2072   00067A  A0D8               	btfss	status,0,c
  2073   00067C  EF42  F003         	goto	u941
  2074   000680  EF44  F003         	goto	u940
  2075   000684                     u941:
  2076   000684  EF4D  F003         	goto	l1719
  2077   000688                     u940:
  2078   000688  5011               	movf	___lldiv@divisor^0,w,c
  2079   00068A  5E0D               	subwf	___lldiv@dividend^0,f,c
  2080   00068C  5012               	movf	(___lldiv@divisor+1)^0,w,c
  2081   00068E  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  2082   000690  5013               	movf	(___lldiv@divisor+2)^0,w,c
  2083   000692  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  2084   000694  5014               	movf	(___lldiv@divisor+3)^0,w,c
  2085   000696  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  2086   000698  8015               	bsf	___lldiv@quotient^0,0,c
  2087   00069A                     l1719:
  2088   00069A  90D8               	bcf	status,0,c
  2089   00069C  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  2090   00069E  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  2091   0006A0  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  2092   0006A2  3211               	rrcf	___lldiv@divisor^0,f,c
  2093   0006A4  2E19               	decfsz	___lldiv@counter^0,f,c
  2094   0006A6  EF30  F003         	goto	l1711
  2095   0006AA                     l337:
  2096   0006AA  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  2097   0006AE  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  2098   0006B2  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  2099   0006B6  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  2100   0006BA  0012               	return		;funcret
  2101   0006BC                     __end_of___lldiv:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function _color_click_init *****************
  2105 ;; Defined at:
  2106 ;;		line 28 in file "color.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2122 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;Total ram usage:        1 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 5
  2127 ;; This function calls:
  2128 ;;		_I2C_2_Master_Init
  2129 ;;		_color_writetoaddr
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text12
  2136   00053C                     __ptext12:
  2137                           	callstack 0
  2138   00053C                     _color_click_init:
  2139                           	callstack 25
  2140   00053C                     
  2141                           ;color.c: 31:     I2C_2_Master_Init();
  2142   00053C  ECD3  F004         	call	_I2C_2_Master_Init	;wreg free
  2143   000540                     
  2144                           ;color.c: 34:   color_writetoaddr(0x00, 0x01);
  2145   000540  0E01               	movlw	1
  2146   000542  6E03               	movwf	color_writetoaddr@value^0,c
  2147   000544  0E00               	movlw	0
  2148   000546  EC0F  F005         	call	_color_writetoaddr
  2149   00054A                     
  2150                           ;color.c: 35:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2151   00054A  0E3F               	movlw	63
  2152   00054C  6E05               	movwf	??_color_click_init^0,c
  2153   00054E  0E55               	movlw	85
  2154   000550                     u1627:
  2155   000550  2EE8               	decfsz	wreg,f,c
  2156   000552  D7FE               	bra	u1627
  2157   000554  2E05               	decfsz	??_color_click_init^0,f,c
  2158   000556  D7FC               	bra	u1627
  2159   000558  F000               	nop	
  2160   00055A                     
  2161                           ;color.c: 38:  color_writetoaddr(0x00, 0x03);
  2162   00055A  0E03               	movlw	3
  2163   00055C  6E03               	movwf	color_writetoaddr@value^0,c
  2164   00055E  0E00               	movlw	0
  2165   000560  EC0F  F005         	call	_color_writetoaddr
  2166   000564                     
  2167                           ;color.c: 41:  color_writetoaddr(0x01, 0xD5);
  2168   000564  0ED5               	movlw	213
  2169   000566  6E03               	movwf	color_writetoaddr@value^0,c
  2170   000568  0E01               	movlw	1
  2171   00056A  EC0F  F005         	call	_color_writetoaddr
  2172   00056E                     
  2173                           ;color.c: 43:     TRISFbits.TRISF7 = 0;
  2174   00056E  9E86               	bcf	134,7,c	;volatile
  2175   000570                     
  2176                           ;color.c: 44:     TRISGbits.TRISG1 = 0;
  2177   000570  9287               	bcf	135,1,c	;volatile
  2178   000572                     
  2179                           ;color.c: 45:     TRISAbits.TRISA4 = 0;
  2180   000572  9881               	bcf	129,4,c	;volatile
  2181   000574                     
  2182                           ;color.c: 47:     Color_rules[0] = Red_rule;
  2183   000574  EE20  F0C0         	lfsr	2,_Red_rule
  2184   000578  EE11  F000         	lfsr	1,_Color_rules
  2185   00057C  0E0B               	movlw	11
  2186   00057E                     u951:
  2187   00057E  CFDB FFE3          	movff	plusw2,plusw1
  2188   000582  06E8               	decf	wreg,f,c
  2189   000584  E2FC               	bc	u951
  2190   000586                     
  2191                           ;color.c: 48:     Color_rules[1] = Green_rule;
  2192   000586  EE20  F0B4         	lfsr	2,_Green_rule
  2193   00058A  EE11  F00C         	lfsr	1,_Color_rules+12
  2194   00058E  0E0B               	movlw	11
  2195   000590                     u961:
  2196   000590  CFDB FFE3          	movff	plusw2,plusw1
  2197   000594  06E8               	decf	wreg,f,c
  2198   000596  E2FC               	bc	u961
  2199   000598                     
  2200                           ;color.c: 49:     Color_rules[2] = Blue_rule;
  2201   000598  EE20  F0A8         	lfsr	2,_Blue_rule
  2202   00059C  EE11  F018         	lfsr	1,_Color_rules+24
  2203   0005A0  0E0B               	movlw	11
  2204   0005A2                     u971:
  2205   0005A2  CFDB FFE3          	movff	plusw2,plusw1
  2206   0005A6  06E8               	decf	wreg,f,c
  2207   0005A8  E2FC               	bc	u971
  2208   0005AA                     
  2209                           ;color.c: 50:     Color_rules[3] = Yellow_rule;
  2210   0005AA  EE20  F09C         	lfsr	2,_Yellow_rule
  2211   0005AE  EE11  F024         	lfsr	1,_Color_rules+36
  2212   0005B2  0E0B               	movlw	11
  2213   0005B4                     u981:
  2214   0005B4  CFDB FFE3          	movff	plusw2,plusw1
  2215   0005B8  06E8               	decf	wreg,f,c
  2216   0005BA  E2FC               	bc	u981
  2217   0005BC                     
  2218                           ;color.c: 51:     Color_rules[4] = Pink_rule;
  2219   0005BC  EE20  F090         	lfsr	2,_Pink_rule
  2220   0005C0  EE11  F030         	lfsr	1,_Color_rules+48
  2221   0005C4  0E0B               	movlw	11
  2222   0005C6                     u991:
  2223   0005C6  CFDB FFE3          	movff	plusw2,plusw1
  2224   0005CA  06E8               	decf	wreg,f,c
  2225   0005CC  E2FC               	bc	u991
  2226   0005CE                     
  2227                           ;color.c: 52:     Color_rules[5] = Orange_rule;
  2228   0005CE  EE20  F084         	lfsr	2,_Orange_rule
  2229   0005D2  EE11  F03C         	lfsr	1,_Color_rules+60
  2230   0005D6  0E0B               	movlw	11
  2231   0005D8                     u1001:
  2232   0005D8  CFDB FFE3          	movff	plusw2,plusw1
  2233   0005DC  06E8               	decf	wreg,f,c
  2234   0005DE  E2FC               	bc	u1001
  2235   0005E0                     
  2236                           ;color.c: 53:     Color_rules[6] = Lightblue_rule;
  2237   0005E0  EE20  F078         	lfsr	2,_Lightblue_rule
  2238   0005E4  EE11  F048         	lfsr	1,_Color_rules+72
  2239   0005E8  0E0B               	movlw	11
  2240   0005EA                     u1011:
  2241   0005EA  CFDB FFE3          	movff	plusw2,plusw1
  2242   0005EE  06E8               	decf	wreg,f,c
  2243   0005F0  E2FC               	bc	u1011
  2244   0005F2                     
  2245                           ;color.c: 54:     Color_rules[7] = White_rule;
  2246   0005F2  EE20  F06C         	lfsr	2,_White_rule
  2247   0005F6  EE11  F054         	lfsr	1,_Color_rules+84
  2248   0005FA  0E0B               	movlw	11
  2249   0005FC                     u1021:
  2250   0005FC  CFDB FFE3          	movff	plusw2,plusw1
  2251   000600  06E8               	decf	wreg,f,c
  2252   000602  E2FC               	bc	u1021
  2253   000604                     
  2254                           ;color.c: 55:     Color_rules[8] = Black_rule;
  2255   000604  EE21  F06C         	lfsr	2,_Black_rule
  2256   000608  EE11  F060         	lfsr	1,_Color_rules+96
  2257   00060C  0E0B               	movlw	11
  2258   00060E                     u1031:
  2259   00060E  CFDB FFE3          	movff	plusw2,plusw1
  2260   000612  06E8               	decf	wreg,f,c
  2261   000614  E2FC               	bc	u1031
  2262   000616  0012               	return		;funcret
  2263   000618                     __end_of_color_click_init:
  2264                           	callstack 0
  2265                           
  2266 ;; *************** function _color_writetoaddr *****************
  2267 ;; Defined at:
  2268 ;;		line 58 in file "color.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  address         1    wreg     unsigned char 
  2271 ;;  value           1    2[COMRAM] unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  address         1    3[COMRAM] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2283 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;Total ram usage:        2 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 4
  2290 ;; This function calls:
  2291 ;;		_I2C_2_Master_Start
  2292 ;;		_I2C_2_Master_Stop
  2293 ;;		_I2C_2_Master_Write
  2294 ;; This function is called by:
  2295 ;;		_color_click_init
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text13
  2300   000A1E                     __ptext13:
  2301                           	callstack 0
  2302   000A1E                     _color_writetoaddr:
  2303                           	callstack 25
  2304                           
  2305                           ;incstack = 0
  2306                           ;color_writetoaddr@address stored from wreg
  2307   000A1E  6E04               	movwf	color_writetoaddr@address^0,c
  2308   000A20                     
  2309                           ;color.c: 59:     I2C_2_Master_Start();
  2310   000A20  EC4C  F005         	call	_I2C_2_Master_Start	;wreg free
  2311                           
  2312                           ;color.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  2313   000A24  0E52               	movlw	82
  2314   000A26  EC36  F005         	call	_I2C_2_Master_Write
  2315                           
  2316                           ;color.c: 61:     I2C_2_Master_Write(0x80 | address);
  2317   000A2A  5004               	movf	color_writetoaddr@address^0,w,c
  2318   000A2C  0980               	iorlw	128
  2319   000A2E  EC36  F005         	call	_I2C_2_Master_Write
  2320                           
  2321                           ;color.c: 62:     I2C_2_Master_Write(value);
  2322   000A32  5003               	movf	color_writetoaddr@value^0,w,c
  2323   000A34  EC36  F005         	call	_I2C_2_Master_Write
  2324                           
  2325                           ;color.c: 63:     I2C_2_Master_Stop();
  2326   000A38  EC47  F005         	call	_I2C_2_Master_Stop	;wreg free
  2327   000A3C  0012               	return		;funcret
  2328   000A3E                     __end_of_color_writetoaddr:
  2329                           	callstack 0
  2330                           
  2331 ;; *************** function _I2C_2_Master_Write *****************
  2332 ;; Defined at:
  2333 ;;		line 45 in file "i2c.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  data_byte       1    wreg     unsigned char 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  data_byte       1    1[COMRAM] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2351 ;;Total ram usage:        1 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 3
  2354 ;; This function calls:
  2355 ;;		_I2C_2_Master_Idle
  2356 ;; This function is called by:
  2357 ;;		_color_writetoaddr
  2358 ;;		_color_read_Red
  2359 ;;		_color_read_Blue
  2360 ;;		_color_read_Green
  2361 ;;		_color_read_Clear
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text14
  2366   000A6C                     __ptext14:
  2367                           	callstack 0
  2368   000A6C                     _I2C_2_Master_Write:
  2369                           	callstack 25
  2370                           
  2371                           ;incstack = 0
  2372                           ;I2C_2_Master_Write@data_byte stored from wreg
  2373   000A6C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2374   000A6E                     
  2375                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2376   000A6E  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  2377   000A72                     
  2378                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2379   000A72  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2380   000A76  0012               	return		;funcret
  2381   000A78                     __end_of_I2C_2_Master_Write:
  2382                           	callstack 0
  2383                           
  2384 ;; *************** function _I2C_2_Master_Stop *****************
  2385 ;; Defined at:
  2386 ;;		line 39 in file "i2c.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 3
  2407 ;; This function calls:
  2408 ;;		_I2C_2_Master_Idle
  2409 ;; This function is called by:
  2410 ;;		_color_writetoaddr
  2411 ;;		_color_read_Red
  2412 ;;		_color_read_Blue
  2413 ;;		_color_read_Green
  2414 ;;		_color_read_Clear
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text15
  2419   000A8E                     __ptext15:
  2420                           	callstack 0
  2421   000A8E                     _I2C_2_Master_Stop:
  2422                           	callstack 25
  2423   000A8E                     
  2424                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2425   000A8E  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  2426   000A92                     
  2427                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2428   000A92  010E               	movlb	14	; () banked
  2429   000A94  85DA               	bsf	218,2,b	;volatile
  2430   000A96                     
  2431                           ; BSR set to: 14
  2432   000A96  0012               	return		;funcret
  2433   000A98                     __end_of_I2C_2_Master_Stop:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _I2C_2_Master_Start *****************
  2437 ;; Defined at:
  2438 ;;		line 27 in file "i2c.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2456 ;;Total ram usage:        0 bytes
  2457 ;; Hardware stack levels used: 1
  2458 ;; Hardware stack levels required when called: 3
  2459 ;; This function calls:
  2460 ;;		_I2C_2_Master_Idle
  2461 ;; This function is called by:
  2462 ;;		_color_writetoaddr
  2463 ;;		_color_read_Red
  2464 ;;		_color_read_Blue
  2465 ;;		_color_read_Green
  2466 ;;		_color_read_Clear
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text16
  2471   000A98                     __ptext16:
  2472                           	callstack 0
  2473   000A98                     _I2C_2_Master_Start:
  2474                           	callstack 25
  2475   000A98                     
  2476                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2477   000A98  ECE8  F004         	call	_I2C_2_Master_Idle	;wreg free
  2478   000A9C                     
  2479                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2480   000A9C  010E               	movlb	14	; () banked
  2481   000A9E  81DA               	bsf	218,0,b	;volatile
  2482   000AA0                     
  2483                           ; BSR set to: 14
  2484   000AA0  0012               	return		;funcret
  2485   000AA2                     __end_of_I2C_2_Master_Start:
  2486                           	callstack 0
  2487                           
  2488 ;; *************** function _I2C_2_Master_Idle *****************
  2489 ;; Defined at:
  2490 ;;		line 22 in file "i2c.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;Total ram usage:        1 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 2
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_I2C_2_Master_Start
  2515 ;;		_I2C_2_Master_RepStart
  2516 ;;		_I2C_2_Master_Stop
  2517 ;;		_I2C_2_Master_Write
  2518 ;;		_I2C_2_Master_Read
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text17
  2523   0009D0                     __ptext17:
  2524                           	callstack 0
  2525   0009D0                     _I2C_2_Master_Idle:
  2526                           	callstack 25
  2527   0009D0                     l237:
  2528   0009D0  010E               	movlb	14	; () banked
  2529   0009D2  B5D8               	btfsc	216,2,b	;volatile
  2530   0009D4  EFEE  F004         	goto	u801
  2531   0009D8  EFF0  F004         	goto	u800
  2532   0009DC                     u801:
  2533   0009DC  EFE8  F004         	goto	l237
  2534   0009E0                     u800:
  2535   0009E0                     
  2536                           ; BSR set to: 14
  2537   0009E0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2538   0009E4  0E1F               	movlw	31
  2539   0009E6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2540   0009E8  A4D8               	btfss	status,2,c
  2541   0009EA  EFF9  F004         	goto	u811
  2542   0009EE  EFFB  F004         	goto	u810
  2543   0009F2                     u811:
  2544   0009F2  EFE8  F004         	goto	l237
  2545   0009F6                     u810:
  2546   0009F6                     
  2547                           ; BSR set to: 14
  2548   0009F6  0012               	return		;funcret
  2549   0009F8                     __end_of_I2C_2_Master_Idle:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function _I2C_2_Master_Init *****************
  2553 ;; Defined at:
  2554 ;;		line 4 in file "i2c.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;		None
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2572 ;;Total ram usage:        0 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 2
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_color_click_init
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text18
  2583   0009A6                     __ptext18:
  2584                           	callstack 0
  2585   0009A6                     _I2C_2_Master_Init:
  2586                           	callstack 27
  2587   0009A6                     
  2588                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2589   0009A6  010E               	movlb	14	; () banked
  2590   0009A8  51D9               	movf	217,w,b	;volatile
  2591   0009AA  0BF0               	andlw	-16
  2592   0009AC  0908               	iorlw	8
  2593   0009AE  6FD9               	movwf	217,b	;volatile
  2594   0009B0                     
  2595                           ; BSR set to: 14
  2596                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2597   0009B0  8BD9               	bsf	217,5,b	;volatile
  2598                           
  2599                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2600   0009B2  0E9F               	movlw	159
  2601   0009B4  6FD6               	movwf	214,b	;volatile
  2602   0009B6                     
  2603                           ; BSR set to: 14
  2604                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2605   0009B6  8A84               	bsf	132,5,c	;volatile
  2606   0009B8                     
  2607                           ; BSR set to: 14
  2608                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2609   0009B8  8C84               	bsf	132,6,c	;volatile
  2610   0009BA                     
  2611                           ; BSR set to: 14
  2612                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2613   0009BA  9BA7               	bcf	167,5,b	;volatile
  2614   0009BC                     
  2615                           ; BSR set to: 14
  2616                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2617   0009BC  9DA7               	bcf	167,6,b	;volatile
  2618                           
  2619                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2620   0009BE  0E1D               	movlw	29
  2621   0009C0  6F1D               	movwf	29,b	;volatile
  2622                           
  2623                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2624   0009C2  0E1E               	movlw	30
  2625   0009C4  6F1C               	movwf	28,b	;volatile
  2626                           
  2627                           ;i2c.c: 18:   RD5PPS=0x1C;
  2628   0009C6  0E1C               	movlw	28
  2629   0009C8  6F6F               	movwf	111,b	;volatile
  2630                           
  2631                           ;i2c.c: 19:   RD6PPS=0x1B;
  2632   0009CA  0E1B               	movlw	27
  2633   0009CC  6F70               	movwf	112,b	;volatile
  2634   0009CE                     
  2635                           ; BSR set to: 14
  2636   0009CE  0012               	return		;funcret
  2637   0009D0                     __end_of_I2C_2_Master_Init:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function _Timer0_init *****************
  2641 ;; Defined at:
  2642 ;;		line 7 in file "timers.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 2
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_main
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text19
  2671   000A3E                     __ptext19:
  2672                           	callstack 0
  2673   000A3E                     _Timer0_init:
  2674                           	callstack 28
  2675   000A3E                     
  2676                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2677   000A3E  50D6               	movf	214,w,c	;volatile
  2678   000A40  0B1F               	andlw	-225
  2679   000A42  0940               	iorlw	64
  2680   000A44  6ED6               	movwf	214,c	;volatile
  2681   000A46                     
  2682                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  2683   000A46  88D6               	bsf	214,4,c	;volatile
  2684                           
  2685                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  2686   000A48  50D6               	movf	214,w,c	;volatile
  2687   000A4A  0BF0               	andlw	-16
  2688   000A4C  0908               	iorlw	8
  2689   000A4E  6ED6               	movwf	214,c	;volatile
  2690                           
  2691                           ;timers.c: 12:     TMR0H=0b11100111;
  2692   000A50  0EE7               	movlw	231
  2693   000A52  6ED4               	movwf	212,c	;volatile
  2694                           
  2695                           ;timers.c: 13:     TMR0L=0b10010101;
  2696   000A54  0E95               	movlw	149
  2697   000A56  6ED3               	movwf	211,c	;volatile
  2698   000A58                     
  2699                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  2700   000A58  88D5               	bsf	213,4,c	;volatile
  2701   000A5A                     
  2702                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  2703   000A5A  8ED5               	bsf	213,7,c	;volatile
  2704   000A5C  0012               	return		;funcret
  2705   000A5E                     __end_of_Timer0_init:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _Interrupts_init *****************
  2709 ;; Defined at:
  2710 ;;		line 10 in file "interrupts.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		None
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;Total ram usage:        0 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 2
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text20
  2739   000A78                     __ptext20:
  2740                           	callstack 0
  2741   000A78                     _Interrupts_init:
  2742                           	callstack 28
  2743   000A78                     
  2744                           ;interrupts.c: 12:     INTCONbits.PEIE = 1;
  2745   000A78  8CF2               	bsf	242,6,c	;volatile
  2746                           
  2747                           ;interrupts.c: 13:     PIE0bits.TMR0IE = 1;
  2748   000A7A  010E               	movlb	14	; () banked
  2749   000A7C  8B29               	bsf	41,5,b	;volatile
  2750                           
  2751                           ;interrupts.c: 14:     PIE2bits.C1IE = 1;
  2752   000A7E  812B               	bsf	43,0,b	;volatile
  2753                           
  2754                           ;interrupts.c: 15:     INTCONbits.GIE = 1;
  2755   000A80  8EF2               	bsf	242,7,c	;volatile
  2756   000A82                     
  2757                           ; BSR set to: 14
  2758   000A82  0012               	return		;funcret
  2759   000A84                     __end_of_Interrupts_init:
  2760                           	callstack 0
  2761                           
  2762 ;; *************** function _HighISR *****************
  2763 ;; Defined at:
  2764 ;;		line 22 in file "interrupts.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2782 ;;Total ram usage:        0 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 1
  2785 ;; This function calls:
  2786 ;;		_increment_seconds
  2787 ;; This function is called by:
  2788 ;;		Interrupt level 2
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	intcode
  2793   000008                     __pintcode:
  2794                           	callstack 0
  2795   000008                     _HighISR:
  2796                           	callstack 25
  2797                           
  2798                           ; BSR set to: 14
  2799                           ;incstack = 0
  2800   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2801   00000A                     
  2802                           ;interrupts.c: 24:     if(PIR0bits.TMR0IF == 1){
  2803   00000A  010E               	movlb	14	; () banked
  2804   00000C  AB33               	btfss	51,5,b	;volatile
  2805   00000E  EF0B  F000         	goto	i2u43_41
  2806   000012  EF0D  F000         	goto	i2u43_40
  2807   000016                     i2u43_41:
  2808   000016  EF15  F000         	goto	i2l278
  2809   00001A                     i2u43_40:
  2810   00001A                     
  2811                           ; BSR set to: 14
  2812                           ;interrupts.c: 25:     increment_seconds();
  2813   00001A  EC51  F005         	call	_increment_seconds	;wreg free
  2814   00001E                     
  2815                           ;interrupts.c: 27:     TMR0H=0b11100111;
  2816   00001E  0EE7               	movlw	231
  2817   000020  6ED4               	movwf	212,c	;volatile
  2818   000022                     
  2819                           ;interrupts.c: 28:     TMR0L=0b10010101;
  2820   000022  0E95               	movlw	149
  2821   000024  6ED3               	movwf	211,c	;volatile
  2822   000026                     
  2823                           ;interrupts.c: 30:     PIR0bits.TMR0IF = 0;
  2824   000026  010E               	movlb	14	; () banked
  2825   000028  9B33               	bcf	51,5,b	;volatile
  2826   00002A                     i2l278:
  2827                           
  2828                           ; BSR set to: 14
  2829   00002A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2830   00002C  0011               	retfie		f
  2831   00002E                     __end_of_HighISR:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _increment_seconds *****************
  2835 ;; Defined at:
  2836 ;;		line 220 in file "dc_motor.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;		None
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		status,2, status,0
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2854 ;;Total ram usage:        0 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_HighISR
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text22
  2864   000AA2                     __ptext22:
  2865                           	callstack 0
  2866   000AA2                     _increment_seconds:
  2867                           	callstack 25
  2868   000AA2                     
  2869                           ;dc_motor.c: 222:     seconds += 1;
  2870   000AA2  4A49               	infsnz	_seconds^0,f,c
  2871   000AA4  2A4A               	incf	(_seconds+1)^0,f,c
  2872   000AA6  0012               	return		;funcret
  2873   000AA8                     __end_of_increment_seconds:
  2874                           	callstack 0
  2875   000000                     
  2876                           	psect	rparam
  2877   000000                     
  2878                           	psect	temp
  2879   000059                     btemp:
  2880                           	callstack 0
  2881   000059                     	ds	1
  2882   000000                     int$flags	set	btemp
  2883   000000                     wtemp8	set	btemp+1
  2884   000000                     ttemp5	set	btemp+1
  2885   000000                     ttemp6	set	btemp+4
  2886   000000                     ttemp7	set	btemp+8
  2887                           
  2888                           	psect	idloc
  2889                           
  2890                           ;Config register IDLOC0 @ 0x200000
  2891                           ;	unspecified, using default values
  2892   200000                     	org	2097152
  2893   200000  0FFF               	dw	4095
  2894                           
  2895                           ;Config register IDLOC1 @ 0x200002
  2896                           ;	unspecified, using default values
  2897   200002                     	org	2097154
  2898   200002  0FFF               	dw	4095
  2899                           
  2900                           ;Config register IDLOC2 @ 0x200004
  2901                           ;	unspecified, using default values
  2902   200004                     	org	2097156
  2903   200004  0FFF               	dw	4095
  2904                           
  2905                           ;Config register IDLOC3 @ 0x200006
  2906                           ;	unspecified, using default values
  2907   200006                     	org	2097158
  2908   200006  0FFF               	dw	4095
  2909                           
  2910                           ;Config register IDLOC4 @ 0x200008
  2911                           ;	unspecified, using default values
  2912   200008                     	org	2097160
  2913   200008  0FFF               	dw	4095
  2914                           
  2915                           ;Config register IDLOC5 @ 0x20000A
  2916                           ;	unspecified, using default values
  2917   20000A                     	org	2097162
  2918   20000A  0FFF               	dw	4095
  2919                           
  2920                           ;Config register IDLOC6 @ 0x20000C
  2921                           ;	unspecified, using default values
  2922   20000C                     	org	2097164
  2923   20000C  0FFF               	dw	4095
  2924                           
  2925                           ;Config register IDLOC7 @ 0x20000E
  2926                           ;	unspecified, using default values
  2927   20000E                     	org	2097166
  2928   20000E  0FFF               	dw	4095
  2929                           
  2930                           	psect	config
  2931                           
  2932                           ;Config register CONFIG1L @ 0x300000
  2933                           ;	External Oscillator mode Selection bits
  2934                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2935                           ;	Power-up default value for COSC bits
  2936                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2937   300000                     	org	3145728
  2938   300000  AA                 	db	170
  2939                           
  2940                           ;Config register CONFIG1H @ 0x300001
  2941                           ;	unspecified, using default values
  2942                           ;	Clock Out Enable bit
  2943                           ;	CLKOUTEN = 0x1, unprogrammed default
  2944                           ;	Clock Switch Enable bit
  2945                           ;	CSWEN = 0x1, unprogrammed default
  2946                           ;	Fail-Safe Clock Monitor Enable bit
  2947                           ;	FCMEN = 0x1, unprogrammed default
  2948   300001                     	org	3145729
  2949   300001  FF                 	db	255
  2950                           
  2951                           ;Config register CONFIG2L @ 0x300002
  2952                           ;	unspecified, using default values
  2953                           ;	Master Clear Enable bit
  2954                           ;	MCLRE = 0x1, unprogrammed default
  2955                           ;	Power-up Timer Enable bit
  2956                           ;	PWRTE = 0x1, unprogrammed default
  2957                           ;	Low-power BOR enable bit
  2958                           ;	LPBOREN = 0x1, unprogrammed default
  2959                           ;	Brown-out Reset Enable bits
  2960                           ;	BOREN = 0x3, unprogrammed default
  2961   300002                     	org	3145730
  2962   300002  FF                 	db	255
  2963                           
  2964                           ;Config register CONFIG2H @ 0x300003
  2965                           ;	unspecified, using default values
  2966                           ;	Brown Out Reset Voltage selection bits
  2967                           ;	BORV = 0x3, unprogrammed default
  2968                           ;	ZCD Disable bit
  2969                           ;	ZCD = 0x1, unprogrammed default
  2970                           ;	PPSLOCK bit One-Way Set Enable bit
  2971                           ;	PPS1WAY = 0x1, unprogrammed default
  2972                           ;	Stack Full/Underflow Reset Enable bit
  2973                           ;	STVREN = 0x1, unprogrammed default
  2974                           ;	Debugger Enable bit
  2975                           ;	DEBUG = 0x1, unprogrammed default
  2976                           ;	Extended Instruction Set Enable bit
  2977                           ;	XINST = 0x1, unprogrammed default
  2978   300003                     	org	3145731
  2979   300003  FF                 	db	255
  2980                           
  2981                           ;Config register CONFIG3L @ 0x300004
  2982                           ;	WDT Period Select bits
  2983                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2984                           ;	WDT operating mode
  2985                           ;	WDTE = OFF, WDT Disabled
  2986   300004                     	org	3145732
  2987   300004  9F                 	db	159
  2988                           
  2989                           ;Config register CONFIG3H @ 0x300005
  2990                           ;	unspecified, using default values
  2991                           ;	WDT Window Select bits
  2992                           ;	WDTCWS = 0x7, unprogrammed default
  2993                           ;	WDT input clock selector
  2994                           ;	WDTCCS = 0x7, unprogrammed default
  2995   300005                     	org	3145733
  2996   300005  FF                 	db	255
  2997                           
  2998                           ;Config register CONFIG4L @ 0x300006
  2999                           ;	unspecified, using default values
  3000                           ;	Write Protection Block 0
  3001                           ;	WRT0 = 0x1, unprogrammed default
  3002                           ;	Write Protection Block 1
  3003                           ;	WRT1 = 0x1, unprogrammed default
  3004                           ;	Write Protection Block 2
  3005                           ;	WRT2 = 0x1, unprogrammed default
  3006                           ;	Write Protection Block 3
  3007                           ;	WRT3 = 0x1, unprogrammed default
  3008                           ;	Write Protection Block 3
  3009                           ;	WRT4 = 0x1, unprogrammed default
  3010                           ;	Write Protection Block 3
  3011                           ;	WRT5 = 0x1, unprogrammed default
  3012                           ;	Write Protection Block 3
  3013                           ;	WRT6 = 0x1, unprogrammed default
  3014                           ;	Write Protection Block 3
  3015                           ;	WRT7 = 0x1, unprogrammed default
  3016   300006                     	org	3145734
  3017   300006  FF                 	db	255
  3018                           
  3019                           ;Config register CONFIG4H @ 0x300007
  3020                           ;	unspecified, using default values
  3021                           ;	Configuration Register Write Protection bit
  3022                           ;	WRTC = 0x1, unprogrammed default
  3023                           ;	Boot Block Write Protection bit
  3024                           ;	WRTB = 0x1, unprogrammed default
  3025                           ;	Data EEPROM Write Protection bit
  3026                           ;	WRTD = 0x1, unprogrammed default
  3027                           ;	Scanner Enable bit
  3028                           ;	SCANE = 0x1, unprogrammed default
  3029                           ;	Low Voltage Programming Enable bit
  3030                           ;	LVP = 0x1, unprogrammed default
  3031   300007                     	org	3145735
  3032   300007  FF                 	db	255
  3033                           
  3034                           ;Config register CONFIG5L @ 0x300008
  3035                           ;	unspecified, using default values
  3036                           ;	UserNVM Program Memory Code Protection bit
  3037                           ;	CP = 0x1, unprogrammed default
  3038                           ;	DataNVM Memory Code Protection bit
  3039                           ;	CPD = 0x1, unprogrammed default
  3040   300008                     	org	3145736
  3041   300008  FF                 	db	255
  3042                           
  3043                           ;Config register CONFIG5H @ 0x300009
  3044                           ;	unspecified, using default values
  3045   300009                     	org	3145737
  3046   300009  FF                 	db	255
  3047                           
  3048                           ;Config register CONFIG6L @ 0x30000A
  3049                           ;	unspecified, using default values
  3050                           ;	Table Read Protection Block 0
  3051                           ;	EBTR0 = 0x1, unprogrammed default
  3052                           ;	Table Read Protection Block 1
  3053                           ;	EBTR1 = 0x1, unprogrammed default
  3054                           ;	Table Read Protection Block 2
  3055                           ;	EBTR2 = 0x1, unprogrammed default
  3056                           ;	Table Read Protection Block 3
  3057                           ;	EBTR3 = 0x1, unprogrammed default
  3058                           ;	Table Read Protection Block 4
  3059                           ;	EBTR4 = 0x1, unprogrammed default
  3060                           ;	Table Read Protection Block 5
  3061                           ;	EBTR5 = 0x1, unprogrammed default
  3062                           ;	Table Read Protection Block 6
  3063                           ;	EBTR6 = 0x1, unprogrammed default
  3064                           ;	Table Read Protection Block 7
  3065                           ;	EBTR7 = 0x1, unprogrammed default
  3066   30000A                     	org	3145738
  3067   30000A  FF                 	db	255
  3068                           
  3069                           ;Config register CONFIG6H @ 0x30000B
  3070                           ;	unspecified, using default values
  3071                           ;	Boot Block Table Read Protection bit
  3072                           ;	EBTRB = 0x1, unprogrammed default
  3073   30000B                     	org	3145739
  3074   30000B  FF                 	db	255
  3075                           tosu	equ	0xFFF
  3076                           tosh	equ	0xFFE
  3077                           tosl	equ	0xFFD
  3078                           stkptr	equ	0xFFC
  3079                           pclatu	equ	0xFFB
  3080                           pclath	equ	0xFFA
  3081                           pcl	equ	0xFF9
  3082                           tblptru	equ	0xFF8
  3083                           tblptrh	equ	0xFF7
  3084                           tblptrl	equ	0xFF6
  3085                           tablat	equ	0xFF5
  3086                           prodh	equ	0xFF4
  3087                           prodl	equ	0xFF3
  3088                           indf0	equ	0xFEF
  3089                           postinc0	equ	0xFEE
  3090                           postdec0	equ	0xFED
  3091                           preinc0	equ	0xFEC
  3092                           plusw0	equ	0xFEB
  3093                           fsr0h	equ	0xFEA
  3094                           fsr0l	equ	0xFE9
  3095                           wreg	equ	0xFE8
  3096                           indf1	equ	0xFE7
  3097                           postinc1	equ	0xFE6
  3098                           postdec1	equ	0xFE5
  3099                           preinc1	equ	0xFE4
  3100                           plusw1	equ	0xFE3
  3101                           fsr1h	equ	0xFE2
  3102                           fsr1l	equ	0xFE1
  3103                           bsr	equ	0xFE0
  3104                           indf2	equ	0xFDF
  3105                           postinc2	equ	0xFDE
  3106                           postdec2	equ	0xFDD
  3107                           preinc2	equ	0xFDC
  3108                           plusw2	equ	0xFDB
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        122
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      88
    BANK0           160     44     152
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    TimedfullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    TimedfullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    TimedfullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    TimedfullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S931DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S931DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_get_color_code
    _get_color_code->_get_color_distance
    _get_color_distance->___wmul
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___lldiv->___lmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_get_color_code

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5729
                                             56 COMRAM     4     4      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                     _get_color_code
 ---------------------------------------------------------------------------------
 (1) _get_color_code                                      48    46      2    5433
                                             52 COMRAM     4     2      2
                                              0 BANK0     44    44      0
                            ___lldiv
                             ___lmul
                             ___wmul
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                 _get_color_distance
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _set_led_color                                        2     0      2     370
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _get_color_distance                                  46    22     24    1990
                                              6 COMRAM    46    22     24
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1071
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0       0
                  _increment_seconds
 ---------------------------------------------------------------------------------
 (6) _increment_seconds                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _get_color_code
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___wmul
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _get_color_distance
       ___wmul
     _set_led_color

 _HighISR (ROOT)
   _increment_seconds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      58       1       93.6%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     46      0       0      45        0.0%
BITBIGSFRllllll     35      0       0      53        0.0%
BITBIGSFRllllhh     2D      0       0      47        0.0%
BITBIGSFRllllll     2D      0       0      57        0.0%
BITBIGSFRllllhh     1E      0       0      48        0.0%
BITBIGSFRhlll       1E      0       0      38        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRhhll       13      0       0      34        0.0%
BITBIGSFRllllhh     11      0       0      49        0.0%
BITBIGSFRhlhh        E      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      B      0       0      56        0.0%
BITBIGSFRllllll      7      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      51        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhllh        2      0       0      37        0.0%
BITBIGSFRllllll      1      0       0      55        0.0%
BITBIGSFRllllhh      1      0       0      46        0.0%
BITBIGSFRhlhl        1      0       0      36        0.0%
BITBIGSFRllllhl      1      0       0      50        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlllhl       1      0       0      42        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     168      58        0.0%
DATA                 0      0     168       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 30 18:21:57 2022

               _color_read_Red 07F4                _color_read_Blue 0894                             l60 0A3C  
                           l63 0842                             l57 0616                             l66 08E2  
                           l90 08F8                             l91 08FA                             l92 090E  
                           l69 0892                             l93 0910                             l94 0924  
                           l87 053A                             l96 0926            ___wmul@multiplicand 0003  
             _color_read_Green 0844              ??_Interrupts_init 0001                            l114 03C6  
                          l116 03CE                            l310 0A1C                            l240 09F6  
                          l321 0780                            l234 09CE                            l322 0790  
                          l307 0A5C                            l243 0AA0                            l252 0A76  
                          l237 09D0                            l246 0A8C                            l255 0968  
                          l272 0A82                            l344 06BA                            l249 0A96  
                          l337 06AA                            _RGB 003D                            u800 09E0  
                          u801 09DC                            u810 09F6                            u811 09F2  
                          u900 0746                            u820 0952                            u901 0742  
                          u821 094A                            u910 0780                            u911 077C  
                          u920 063E                            u840 03EE                            u921 063A  
                          u841 03EA                            u930 0660                            u850 0448  
                          u931 065C                            u851 0444                            u940 0688  
                          u860 04A2                            u941 0684                            u861 049E  
                          u838 0954                            u870 08F2                            u951 057E  
                          u871 08EE                            u880 0908                            u961 0590  
                          u881 0904                            u890 091E                            u971 05A2  
                          u891 091A                            u981 05B4                            u991 05C6  
                          wreg 000FE8                           l1233 0A78                           l1241 0A5A  
                         l1235 0A3E                           l1237 0A46                           l1239 0A58  
                         l1601 0A92                           l1611 0936                           l1603 0A84  
                         l1701 0618                           l1613 093E                           l1605 0A88  
                         l1621 09F8                           l1631 09B6                           l1711 0660  
                         l1703 0628                           l1615 0964                           l1607 092A  
                         l1623 0A14                           l1633 09B8                           l1721 06A4  
                         l1713 066A                           l1705 063E                           l1617 0966  
                         l1609 092E                           l1641 07F4                           l1801 0314  
                         l1635 09BA                           l1627 09A6                           l1731 0564  
                         l1723 053C                           l1715 0688                           l1707 0646  
                         l1643 083A                           l1811 0354                           l1803 031E  
                         l1637 09BC                           l1629 09B0                           l1741 0586  
                         l1733 056E                           l1725 0540                           l1717 0698  
                         l1709 0652                           l1653 0844                           l1661 03EE  
                         l1813 0384                           l1591 0A98                           l1639 0A20  
                         l1751 05E0                           l1743 0598                           l1735 0570  
                         l1727 054A                           l1719 069A                           l1647 0894  
                         l1655 088A                           l1671 047C                           l1663 040A  
                         l1815 039C                           l1593 0A9C                           l1753 05F2  
                         l1745 05AA                           l1737 0572                           l1729 055A  
                         l1649 08DA                           l1673 04A2                           l1665 0422  
                         l1817 03AC                           l1809 0326                           l1761 0056  
                         l1921 0976                           l1587 09D0                           l1595 0A6E  
                         l1755 0604                           l1747 05BC                           l1739 0574  
                         l1691 0728                           l1675 04BE                           l1667 0448  
                         l1659 03D0                           l1683 08E4                           l1819 03B0  
                         l1771 00BE                           l1763 0066                           l1923 0982  
                         l1915 096A                           l1589 09E0                           l1597 0A72  
                         l1749 05CE                           l1693 0738                           l1677 04D6  
                         l1669 0464                           l1685 08F2                           l1781 0178  
                         l1773 00CE                           l1765 0072                           l1757 0032  
                         l1925 0986                           l1917 096E                           l1599 0A8E  
                         l1695 0746                           l1679 04DE                           l1687 0908  
                         l1791 0236                           l1783 0188                           l1775 00DA  
                         l1767 009A                           l1759 003E                           l1919 0972  
                         l1697 0756                           l1689 091E                           l1793 0254  
                         l1785 01A6                           l1777 00F8                           l1769 00A6  
                         l1699 0760                           l1795 026A                           l1787 01BC  
                         l1779 010E                           l1797 02D4                           l1789 0226  
                         l1799 02E4                           u1001 05D8                           u1011 05EA  
                         u1021 05FC                           u1101 035E                           u1031 060E  
                         u1111 0370                           u1120 039C                           u1040 00F8  
                         u1121 0398                           u1041 00F4                           u1130 03C6  
                         u1050 01A6                           u1131 03C2                           u1051 01A2  
                         u1060 0254                           u1061 0250                           u1071 02EE  
                         u1081 0300                           u1091 034C                           u1607 007C  
                         u1617 00B0                           _T2PR 000FBC                     _Black_rule 016C  
                         u1627 0550                           u1587 0990                           u1597 0048  
                         _main 096A                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0059                           prodh 000FF4                           prodl 000FF3  
                         start 002E         __end_of_color_read_Red 0844                __end_of_HighISR 002E  
                 ___param_bank 000000             _get_color_code$382 00D8             _get_color_code$383 00DC  
           _get_color_code$384 00E0                          ?_main 0001                __end_of___lldiv 06BC  
                  _Black_setup 004B                          i2l207 0AA6                          i2l278 002A  
                        _TMR0H 000FD4                          _TMR0L 000FD3            ___lmul@multiplicand 0005  
   __end_of_I2C_2_Master_Start 0AA2     __end_of_I2C_2_Master_Write 0A78             _get_color_distance 03D0  
                        tablat 000FF5                          plusw0 000FEB                          plusw1 000FE3  
                        plusw2 000FDB            ?_get_color_distance 0007                          ttemp5 005A  
                        ttemp6 005D                          ttemp7 0061                          status 000FD8  
                        wtemp8 005A                     _Green_rule 00B4        __end_of_color_read_Blue 08E4  
        _I2C_2_Master_RepStart 0A84                ?_color_read_Red 0005                __initialization 0792  
                 __end_of_main 09A6           ??_get_color_distance 001F                         ??_main 0039  
                __activetblptr 000000            _get_color_code$2210 00CC                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       _RE2PPS 000E74                         _RD5PPS 000E6F                         _RC7PPS 000E69  
                       _RD6PPS 000E70                         _RE4PPS 000E76                         i2l1231 0AA2  
                       i2l1351 0022                         i2l1353 0026                         i2l1345 000A  
                       i2l1347 001A                         i2l1349 001E                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 0618               ??_get_color_code 0037  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                         ___lmul 0728  
     get_color_distance@color1 0007       get_color_distance@color2 0013                         ___wmul 09F8  
                    ??___lldiv 0015                    _Color_rules 0100                         clear_0 07D8  
                       clear_1 07E4                         isa$std 000001                   __pdataCOMRAM 004B  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
               _Lightblue_rule 0078                     _White_rule 006C          __end_of_set_led_color 0928  
                   __accesstop 0060        __end_of__initialization 07EA       __end_of_color_read_Green 0894  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0005  
              _Interrupts_init 0A78                 __pcstackCOMRAM 0001                   __pidataBANK0 06BC  
          __end_of_Timer0_init 0A5E                     __pbssBANK1 0100              _color_writetoaddr 0A1E  
                 _T2CLKCONbits 000FBF             ?_color_writetoaddr 0003                        ?___lmul 0001  
                      ?___wmul 0001                 main@color_code 003B                 ___lmul@product 0009  
              get_color_code@i 00EA            ??_color_writetoaddr 0004                        i2u43_40 001A  
                      i2u43_41 0016        get_color_code@min_index 00E6                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        get_color_code@min_value 00E4                    _Orange_rule 0084  
      __end_of_Interrupts_init 0A84         color_writetoaddr@value 0003               ??_color_read_Red 0007  
                      _HighISR 0008      __end_of_color_writetoaddr 0A3E             _I2C_2_Master_Start 0A98  
           _I2C_2_Master_Write 0A6C                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 0A3E                        ___lldiv 0618  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                        __pcinit 0792  
                      __ramtop 0E00                        __ptext0 096A                        __ptext1 0032  
                      __ptext2 08E4                        __ptext3 03D0                        __ptext4 09F8  
                      __ptext5 07F4                        __ptext6 0844                        __ptext7 0894  
                      __ptext8 0A84                        __ptext9 0928                      _T2CONbits 000FBD  
                      _seconds 0049                      _T2HLTbits 000FBE           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 07EA              ?_color_click_init 0001  
              ___lldiv@divisor 0011             ??_color_click_init 0005                ___lldiv@counter 0019  
                      postdec1 000FE5                        postinc0 000FEE                    _White_setup 0060  
                  _Yellow_rule 009C                      _TRISAbits 000F81                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87       color_writetoaddr@address 0004     get_color_distance@B_offset 0033  
      ??_I2C_2_Master_RepStart 0002               ?_Interrupts_init 0001                    _CCP1CONbits 000FAB  
   get_color_distance@G_offset 0031              _increment_seconds 0AA2                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    _CCP4CONbits 000F22  
           ?_increment_seconds 0001             ??_color_read_Green 0007     get_color_distance@R_offset 002F  
                    _Blue_rule 00A8            ??_increment_seconds 0001                 __end_of___lmul 0792  
               __end_of___wmul 0A1E                  __pidataCOMRAM 0A5E            start_initialization 0792  
    __end_of_increment_seconds 0AA8                      _Pink_rule 0090            color_read_Green@tmp 000A  
                     ??___lmul 0009                       ??___wmul 0005                    __pdataBANK0 0060  
       _get_color_distance$341 0023         _get_color_distance$343 0027         _get_color_distance$345 002B  
                  __pbssCOMRAM 003D                  __pcstackBANK0 00CC            get_color_code@value 00E8  
                     ?_HighISR 0001                   ?_Timer0_init 0001                      __pintcode 0008  
                     ?___lldiv 000D           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
  get_color_code@NormalizedRGB 00EC              _I2C_2_Master_Idle 09D0              _I2C_2_Master_Init 09A6  
            _I2C_2_Master_Read 0928              _I2C_2_Master_Stop 0A8E             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79                  _set_led_color 08E4  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 000F7B                       _LATEbits 000F7D  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _PIE0bits 000E29  
                     _PIE2bits 000E2B                       _PIR0bits 000E33                      _wait_time 0057  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8             set_led_color@color 0001  
    __end_of_I2C_2_Master_Idle 09F8      __end_of_I2C_2_Master_Init 09D0      __end_of_I2C_2_Master_Read 096A  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 0A98    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007              ___lmul@multiplier 0001                      copy_data0 07A6  
                    copy_data1 07C6                 ?_set_led_color 0001  __end_of_I2C_2_Master_RepStart 0A8E  
           color_read_Blue@tmp 000A                       _Red_rule 00C0                       __Hrparam 0000  
                     __Lrparam 0000     __end_of_get_color_distance 053C                 _get_color_code 0032  
                   _ANSELDbits 000EA7                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                     __ptext10 0728                       __ptext11 0618                       __ptext20 0A78  
                     __ptext12 053C                       __ptext13 0A1E                       __ptext22 0AA2  
                     __ptext14 0A6C                       __ptext15 0A8E                       __ptext16 0A98  
                     __ptext17 09D0                       __ptext18 09A6                       __ptext19 0A3E  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                     int$flags 0059         __end_of_get_color_code 03D0                     _INTCONbits 000FF2  
              ??_set_led_color 0003                       intlevel2 0000               ___lldiv@dividend 000D  
              ?_get_color_code 0035               _color_click_init 053C                     _SSP2DATPPS 000E1D  
             ___lldiv@quotient 0015                     _SSP2CLKPPS 000E1C  
