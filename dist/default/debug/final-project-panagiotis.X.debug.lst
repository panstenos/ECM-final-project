

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 01 13:46:28 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Version 2.35
    48                           ; Generated 05/05/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F67K40 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataCOMRAM
    84   000D04                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _Black_setup
    88   000D04  0404               	dw	1028
    89   000D06  0000               	dw	0
    90   000D08  024B               	dw	587
    91   000D0A  0000               	dw	0
    92   000D0C  00A1               	dw	161
    93   000D0E  0000               	dw	0
    94                           
    95                           ;initializer for _wait_time
    96   000D10  00DC               	dw	220
    97                           
    98                           	psect	idataBANK0
    99   000902                     __pidataBANK0:
   100                           	callstack 0
   101                           
   102                           ;initializer for _White_setup
   103   000902  28FC               	dw	10492
   104   000904  0000               	dw	0
   105   000906  1B55               	dw	6997
   106   000908  0000               	dw	0
   107   00090A  0770               	dw	1904
   108   00090C  0000               	dw	0
   109                           
   110                           ;initializer for _White_rule
   111   00090E  0064               	dw	100
   112   000910  0000               	dw	0
   113   000912  0064               	dw	100
   114   000914  0000               	dw	0
   115   000916  0064               	dw	100
   116   000918  0000               	dw	0
   117                           
   118                           ;initializer for _Lightblue_rule
   119   00091A  0026               	dw	38
   120   00091C  0000               	dw	0
   121   00091E  0048               	dw	72
   122   000920  0000               	dw	0
   123   000922  0054               	dw	84
   124   000924  0000               	dw	0
   125                           
   126                           ;initializer for _Orange_rule
   127   000926  005C               	dw	92
   128   000928  0000               	dw	0
   129   00092A  0027               	dw	39
   130   00092C  0000               	dw	0
   131   00092E  001C               	dw	28
   132   000930  0000               	dw	0
   133                           
   134                           ;initializer for _Pink_rule
   135   000932  004D               	dw	77
   136   000934  0000               	dw	0
   137   000936  003C               	dw	60
   138   000938  0000               	dw	0
   139   00093A  0040               	dw	64
   140   00093C  0000               	dw	0
   141                           
   142                           ;initializer for _Yellow_rule
   143   00093E  005D               	dw	93
   144   000940  0000               	dw	0
   145   000942  004C               	dw	76
   146   000944  0000               	dw	0
   147   000946  0014               	dw	20
   148   000948  0000               	dw	0
   149                           
   150                           ;initializer for _Blue_rule
   151   00094A  0003               	dw	3
   152   00094C  0000               	dw	0
   153   00094E  0009               	dw	9
   154   000950  0000               	dw	0
   155   000952  0024               	dw	36
   156   000954  0000               	dw	0
   157                           
   158                           ;initializer for _Green_rule
   159   000956  0019               	dw	25
   160   000958  0000               	dw	0
   161   00095A  0036               	dw	54
   162   00095C  0000               	dw	0
   163   00095E  0008               	dw	8
   164   000960  0000               	dw	0
   165                           
   166                           ;initializer for _Red_rule
   167   000962  0048               	dw	72
   168   000964  0000               	dw	0
   169   000966  0002               	dw	2
   170   000968  0000               	dw	0
   171   00096A  0002               	dw	2
   172   00096C  0000               	dw	0
   173   000000                     _T0CON0bits	set	4053
   174   000000                     _T0CON1bits	set	4054
   175   000000                     _LATHbits	set	3968
   176   000000                     _TRISDbits	set	3972
   177   000000                     _SSP2CON2bits	set	3802
   178   000000                     _SSP2CLKPPS	set	3612
   179   000000                     _SSP2DATPPS	set	3613
   180   000000                     _RC7PPS	set	3689
   181   000000                     _RE2PPS	set	3700
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _TRISAbits	set	3969
   184   000000                     _TRISFbits	set	3974
   185   000000                     _TRISHbits	set	3976
   186   000000                     _PORTFbits	set	3982
   187   000000                     _TRISGbits	set	3975
   188   000000                     _TRISCbits	set	3971
   189   000000                     _TRISEbits	set	3973
   190   000000                     _SSP2BUF	set	3797
   191   000000                     _SSP2ADD	set	3798
   192   000000                     _SSP2CON1bits	set	3801
   193   000000                     _CCPR4H	set	3873
   194   000000                     _CCPR3H	set	3877
   195   000000                     _LATAbits	set	3961
   196   000000                     _LATGbits	set	3967
   197   000000                     _CCPR2H	set	4006
   198   000000                     _CCPR1H	set	4010
   199   000000                     _T2PR	set	4028
   200   000000                     _T2CONbits	set	4029
   201   000000                     _LATCbits	set	3963
   202   000000                     _LATEbits	set	3965
   203   000000                     _LATFbits	set	3966
   204   000000                     _RE4PPS	set	3702
   205   000000                     _RG6PPS	set	3720
   206   000000                     _RD5PPS	set	3695
   207   000000                     _ANSELDbits	set	3751
   208   000000                     _TMR0L	set	4051
   209   000000                     _TMR0H	set	4052
   210   000000                     _INTCONbits	set	4082
   211   000000                     _T2CLKCONbits	set	4031
   212   000000                     _T2HLTbits	set	4030
   213   000000                     _CCP1CONbits	set	4011
   214   000000                     _CCPTMRS0bits	set	4013
   215   000000                     _CCP2CONbits	set	4007
   216   000000                     _CCP3CONbits	set	3878
   217   000000                     _CCP4CONbits	set	3874
   218   000000                     _SSP2CON2	set	3802
   219   000000                     _SSP2STAT	set	3800
   220   000000                     _PIE0bits	set	3625
   221   000000                     _RD6PPS	set	3696
   222   000000                     _PIE2bits	set	3627
   223   000000                     _PIR0bits	set	3635
   224                           
   225                           ; #config settings
   226                           
   227                           	psect	cinit
   228   0009D8                     __pcinit:
   229                           	callstack 0
   230   0009D8                     start_initialization:
   231                           	callstack 0
   232   0009D8                     __initialization:
   233                           	callstack 0
   234                           
   235                           ; Initialize objects allocated to BANK0 (108 bytes)
   236                           ; load TBLPTR registers with __pidataBANK0
   237   0009D8  0E02               	movlw	low __pidataBANK0
   238   0009DA  6EF6               	movwf	tblptrl,c
   239   0009DC  0E09               	movlw	high __pidataBANK0
   240   0009DE  6EF7               	movwf	tblptrh,c
   241   0009E0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   242   0009E2  6EF8               	movwf	tblptru,c
   243   0009E4  EE00  F060         	lfsr	0,__pdataBANK0
   244   0009E8  EE10 F06C          	lfsr	1,108
   245   0009EC                     copy_data0:
   246   0009EC  0009               	tblrd		*+
   247   0009EE  CFF5 FFEE          	movff	tablat,postinc0
   248   0009F2  50E5               	movf	postdec1,w,c
   249   0009F4  50E1               	movf	fsr1l,w,c
   250   0009F6  E1FA               	bnz	copy_data0
   251                           
   252                           ; Initialize objects allocated to COMRAM (14 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254   0009F8  0E04               	movlw	low __pidataCOMRAM
   255   0009FA  6EF6               	movwf	tblptrl,c
   256   0009FC  0E0D               	movlw	high __pidataCOMRAM
   257   0009FE  6EF7               	movwf	tblptrh,c
   258   000A00  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259   000A02  6EF8               	movwf	tblptru,c
   260   000A04  EE00  F04B         	lfsr	0,__pdataCOMRAM
   261   000A08  EE10 F00E          	lfsr	1,14
   262   000A0C                     copy_data1:
   263   000A0C  0009               	tblrd		*+
   264   000A0E  CFF5 FFEE          	movff	tablat,postinc0
   265   000A12  50E5               	movf	postdec1,w,c
   266   000A14  50E1               	movf	fsr1l,w,c
   267   000A16  E1FA               	bnz	copy_data1
   268                           
   269                           ; Clear objects allocated to BANK1 (120 bytes)
   270   000A18  EE01  F000         	lfsr	0,__pbssBANK1
   271   000A1C  0E78               	movlw	120
   272   000A1E                     clear_0:
   273   000A1E  6AEE               	clrf	postinc0,c
   274   000A20  06E8               	decf	wreg,f,c
   275   000A22  E1FD               	bnz	clear_0
   276                           
   277                           ; Clear objects allocated to COMRAM (14 bytes)
   278   000A24  EE00  F03D         	lfsr	0,__pbssCOMRAM
   279   000A28  0E0E               	movlw	14
   280   000A2A                     clear_1:
   281   000A2A  6AEE               	clrf	postinc0,c
   282   000A2C  06E8               	decf	wreg,f,c
   283   000A2E  E1FD               	bnz	clear_1
   284   000A30                     end_of_initialization:
   285                           	callstack 0
   286   000A30                     __end_of__initialization:
   287                           	callstack 0
   288   000A30  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   289   000A32  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   290   000A34  0100               	movlb	0
   291   000A36  EFBD  F005         	goto	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMRAM
   294   00003D                     __pbssCOMRAM:
   295                           	callstack 0
   296   00003D                     _RGB:
   297                           	callstack 0
   298   00003D                     	ds	12
   299   000049                     _seconds:
   300                           	callstack 0
   301   000049                     	ds	2
   302                           
   303                           	psect	dataCOMRAM
   304   00004B                     __pdataCOMRAM:
   305                           	callstack 0
   306   00004B                     _Black_setup:
   307                           	callstack 0
   308   00004B                     	ds	12
   309   000057                     _wait_time:
   310                           	callstack 0
   311   000057                     	ds	2
   312                           
   313                           	psect	dataBANK0
   314   000060                     __pdataBANK0:
   315                           	callstack 0
   316   000060                     _White_setup:
   317                           	callstack 0
   318   000060                     	ds	12
   319   00006C                     _White_rule:
   320                           	callstack 0
   321   00006C                     	ds	12
   322   000078                     _Lightblue_rule:
   323                           	callstack 0
   324   000078                     	ds	12
   325   000084                     _Orange_rule:
   326                           	callstack 0
   327   000084                     	ds	12
   328   000090                     _Pink_rule:
   329                           	callstack 0
   330   000090                     	ds	12
   331   00009C                     _Yellow_rule:
   332                           	callstack 0
   333   00009C                     	ds	12
   334   0000A8                     _Blue_rule:
   335                           	callstack 0
   336   0000A8                     	ds	12
   337   0000B4                     _Green_rule:
   338                           	callstack 0
   339   0000B4                     	ds	12
   340   0000C0                     _Red_rule:
   341                           	callstack 0
   342   0000C0                     	ds	12
   343                           
   344                           	psect	bssBANK1
   345   000100                     __pbssBANK1:
   346                           	callstack 0
   347   000100                     _Color_rules:
   348                           	callstack 0
   349   000100                     	ds	108
   350   00016C                     _Black_rule:
   351                           	callstack 0
   352   00016C                     	ds	12
   353                           
   354                           	psect	cstackBANK0
   355   0000CC                     __pcstackBANK0:
   356                           	callstack 0
   357   0000CC                     _get_color_code$2366:
   358                           	callstack 0
   359                           
   360                           ; 12 bytes @ 0x0
   361   0000CC                     	ds	12
   362   0000D8                     _get_color_code$457:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0xC
   366   0000D8                     	ds	4
   367   0000DC                     _get_color_code$458:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x10
   371   0000DC                     	ds	4
   372   0000E0                     _get_color_code$459:
   373                           	callstack 0
   374                           
   375                           ; 4 bytes @ 0x14
   376   0000E0                     	ds	4
   377   0000E4                     get_color_code@min_value:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x18
   381   0000E4                     	ds	2
   382   0000E6                     get_color_code@min_index:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x1A
   386   0000E6                     	ds	2
   387   0000E8                     get_color_code@value:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x1C
   391   0000E8                     	ds	2
   392   0000EA                     get_color_code@i:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x1E
   396   0000EA                     	ds	2
   397   0000EC                     get_color_code@NormalizedRGB:
   398                           	callstack 0
   399                           
   400                           ; 12 bytes @ 0x20
   401   0000EC                     	ds	12
   402                           
   403                           	psect	cstackCOMRAM
   404   000001                     __pcstackCOMRAM:
   405                           	callstack 0
   406   000001                     ??_I2C_2_Master_Idle:
   407   000001                     ?___wmul:
   408                           	callstack 0
   409   000001                     ?___lmul:
   410                           	callstack 0
   411   000001                     set_led_color@color:
   412                           	callstack 0
   413   000001                     ___wmul@multiplier:
   414                           	callstack 0
   415   000001                     ___lmul@multiplier:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0x0
   419   000001                     	ds	1
   420   000002                     ??_I2C_2_Master_Read:
   421   000002                     I2C_2_Master_Write@data_byte:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x1
   425   000002                     	ds	1
   426   000003                     color_writetoaddr@value:
   427                           	callstack 0
   428   000003                     I2C_2_Master_Read@ack:
   429                           	callstack 0
   430   000003                     ___wmul@multiplicand:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x2
   434   000003                     	ds	1
   435   000004                     color_writetoaddr@address:
   436                           	callstack 0
   437   000004                     I2C_2_Master_Read@tmp:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x3
   441   000004                     	ds	1
   442   000005                     ?_color_read_Red:
   443                           	callstack 0
   444   000005                     ?_color_read_Blue:
   445                           	callstack 0
   446   000005                     ?_color_read_Green:
   447                           	callstack 0
   448   000005                     ?_color_read_Clear:
   449                           	callstack 0
   450   000005                     ___wmul@product:
   451                           	callstack 0
   452   000005                     ___lmul@multiplicand:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x4
   456   000005                     	ds	2
   457   000007                     ??_color_read_Red:
   458   000007                     ??_color_read_Blue:
   459   000007                     ??_color_read_Green:
   460   000007                     ??_color_read_Clear:
   461   000007                     ?_get_color_distance:
   462                           	callstack 0
   463   000007                     get_color_distance@color1:
   464                           	callstack 0
   465                           
   466                           ; 12 bytes @ 0x6
   467   000007                     	ds	2
   468   000009                     ___lmul@product:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x8
   472   000009                     	ds	1
   473   00000A                     color_read_Red@tmp:
   474                           	callstack 0
   475   00000A                     color_read_Blue@tmp:
   476                           	callstack 0
   477   00000A                     color_read_Green@tmp:
   478                           	callstack 0
   479   00000A                     color_read_Clear@tmp:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x9
   483   00000A                     	ds	2
   484   00000C                     ??_calibrate_white:
   485   00000C                     ??_calibrate_black:
   486   00000C                     ?_get_wall_presence:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0xB
   490   00000C                     	ds	1
   491   00000D                     ?___lldiv:
   492                           	callstack 0
   493   00000D                     ___lldiv@dividend:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0xC
   497   00000D                     	ds	1
   498   00000E                     ??_color_click_init:
   499   00000E                     ??_get_wall_presence:
   500                           
   501                           ; 1 bytes @ 0xD
   502   00000E                     	ds	2
   503   000010                     get_wall_presence@clear1:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0xF
   507   000010                     	ds	1
   508   000011                     ___lldiv@divisor:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x10
   512   000011                     	ds	1
   513   000012                     get_wall_presence@clear2:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x11
   517   000012                     	ds	1
   518   000013                     get_color_distance@color2:
   519                           	callstack 0
   520                           
   521                           ; 12 bytes @ 0x12
   522   000013                     	ds	2
   523   000015                     ___lldiv@quotient:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x14
   527   000015                     	ds	4
   528   000019                     ___lldiv@counter:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x18
   532   000019                     	ds	6
   533   00001F                     ??_get_color_distance:
   534                           
   535                           ; 1 bytes @ 0x1E
   536   00001F                     	ds	4
   537   000023                     _get_color_distance$416:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x22
   541   000023                     	ds	4
   542   000027                     _get_color_distance$418:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x26
   546   000027                     	ds	4
   547   00002B                     _get_color_distance$420:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x2A
   551   00002B                     	ds	4
   552   00002F                     get_color_distance@R_offset:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x2E
   556   00002F                     	ds	2
   557   000031                     get_color_distance@G_offset:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x30
   561   000031                     	ds	2
   562   000033                     get_color_distance@B_offset:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x32
   566   000033                     	ds	2
   567   000035                     ?_get_color_code:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x34
   571   000035                     	ds	2
   572   000037                     ??_get_color_code:
   573                           
   574                           ; 1 bytes @ 0x36
   575   000037                     	ds	2
   576   000039                     main@color_code:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x38
   580   000039                     	ds	2
   581   00003B                     main@wall_presence:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x3A
   585   00003B                     	ds	2
   586                           
   587 ;;
   588 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   589 ;;
   590 ;; *************** function _main *****************
   591 ;; Defined at:
   592 ;;		line 18 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  color_code      2   56[COMRAM] unsigned int 
   597 ;;  wall_presenc    2   58[COMRAM] unsigned int 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   608 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   611 ;;Total ram usage:        4 bytes
   612 ;; Hardware stack levels required when called: 7
   613 ;; This function calls:
   614 ;;		_Interrupts_init
   615 ;;		_Timer0_init
   616 ;;		_color_click_init
   617 ;;		_get_color_code
   618 ;;		_get_wall_presence
   619 ;; This function is called by:
   620 ;;		Startup code after reset
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text0
   625   000B7A                     __ptext0:
   626                           	callstack 0
   627   000B7A                     _main:
   628                           	callstack 24
   629   000B7A                     
   630                           ;main.c: 19:     Timer0_init();
   631   000B7A  EC72  F006         	call	_Timer0_init	;wreg free
   632   000B7E                     
   633                           ;main.c: 20:     Interrupts_init();
   634   000B7E  EC8F  F006         	call	_Interrupts_init	;wreg free
   635   000B82                     
   636                           ;main.c: 21:     color_click_init();
   637   000B82  EC9B  F002         	call	_color_click_init	;wreg free
   638   000B86                     
   639                           ;main.c: 23:     TRISHbits.TRISH3 = 0;
   640   000B86  9688               	bcf	136,3,c	;volatile
   641   000B88                     l2114:
   642                           
   643                           ;main.c: 45:         unsigned int wall_presence = get_wall_presence();
   644   000B88  EC30  F004         	call	_get_wall_presence	;wreg free
   645   000B8C  C00C  F03B         	movff	?_get_wall_presence,main@wall_presence
   646   000B90  C00D  F03C         	movff	?_get_wall_presence+1,main@wall_presence+1
   647   000B94                     
   648                           ;main.c: 46:         if(wall_presence == 1){
   649   000B94  043B               	decf	main@wall_presence^0,w,c
   650   000B96  103C               	iorwf	(main@wall_presence+1)^0,w,c
   651   000B98  A4D8               	btfss	status,2,c
   652   000B9A  EFD1  F005         	goto	u1371
   653   000B9E  EFD3  F005         	goto	u1370
   654   000BA2                     u1371:
   655   000BA2  EFDE  F005         	goto	l327
   656   000BA6                     u1370:
   657   000BA6                     
   658                           ;main.c: 47:             LATHbits.LATH3 = 1;
   659   000BA6  8680               	bsf	128,3,c	;volatile
   660   000BA8                     
   661                           ;main.c: 48:             unsigned int color_code = get_color_code();
   662   000BA8  EC19  F000         	call	_get_color_code	;wreg free
   663   000BAC  C035  F039         	movff	?_get_color_code,main@color_code
   664   000BB0  C036  F03A         	movff	?_get_color_code+1,main@color_code+1
   665   000BB4                     
   666                           ;main.c: 49:             color_code += 1;
   667   000BB4  4A39               	infsnz	main@color_code^0,f,c
   668   000BB6  2A3A               	incf	(main@color_code+1)^0,f,c
   669                           
   670                           ;main.c: 50:         }else{
   671   000BB8  EFC4  F005         	goto	l2114
   672   000BBC                     l327:
   673                           
   674                           ;main.c: 51:             LATHbits.LATH3 = 0;
   675   000BBC  9680               	bcf	128,3,c	;volatile
   676   000BBE  EFC4  F005         	goto	l2114
   677   000BC2  EF17  F000         	goto	start
   678   000BC6                     __end_of_main:
   679                           	callstack 0
   680                           
   681 ;; *************** function _get_wall_presence *****************
   682 ;; Defined at:
   683 ;;		line 233 in file "color.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  clear2          2   17[COMRAM] unsigned int 
   688 ;;  clear1          2   15[COMRAM] unsigned int 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  2   11[COMRAM] unsigned int 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   699 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   701 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   702 ;;Total ram usage:        8 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 5
   705 ;; This function calls:
   706 ;;		_color_read_Clear
   707 ;;		_set_led_color
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           	psect	text1
   714   000860                     __ptext1:
   715                           	callstack 0
   716   000860                     _get_wall_presence:
   717                           	callstack 25
   718   000860                     
   719                           ;color.c: 234:     set_led_color(0b000);
   720   000860  0E00               	movlw	0
   721   000862  6E02               	movwf	(set_led_color@color+1)^0,c
   722   000864  0E00               	movlw	0
   723   000866  6E01               	movwf	set_led_color@color^0,c
   724   000868  ECE3  F005         	call	_set_led_color	;wreg free
   725   00086C                     
   726                           ;color.c: 235:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   727   00086C  0E12               	movlw	18
   728   00086E  6E0F               	movwf	(??_get_wall_presence+1)^0,c
   729   000870  0EDC               	movlw	220
   730   000872  6E0E               	movwf	??_get_wall_presence^0,c
   731   000874  0E60               	movlw	96
   732   000876                     u1747:
   733   000876  2EE8               	decfsz	wreg,f,c
   734   000878  D7FE               	bra	u1747
   735   00087A  2E0E               	decfsz	??_get_wall_presence^0,f,c
   736   00087C  D7FC               	bra	u1747
   737   00087E  2E0F               	decfsz	(??_get_wall_presence+1)^0,f,c
   738   000880  D7FA               	bra	u1747
   739   000882                     
   740                           ;color.c: 236:     unsigned int clear1 = color_read_Clear();
   741   000882  EC1D  F005         	call	_color_read_Clear	;wreg free
   742   000886  C005  F010         	movff	?_color_read_Clear,get_wall_presence@clear1
   743   00088A  C006  F011         	movff	?_color_read_Clear+1,get_wall_presence@clear1+1
   744   00088E                     
   745                           ;color.c: 237:     set_led_color(0b111);
   746   00088E  0E00               	movlw	0
   747   000890  6E02               	movwf	(set_led_color@color+1)^0,c
   748   000892  0E07               	movlw	7
   749   000894  6E01               	movwf	set_led_color@color^0,c
   750   000896  ECE3  F005         	call	_set_led_color	;wreg free
   751   00089A                     
   752                           ;color.c: 238:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   753   00089A  0E12               	movlw	18
   754   00089C  6E0F               	movwf	(??_get_wall_presence+1)^0,c
   755   00089E  0EDC               	movlw	220
   756   0008A0  6E0E               	movwf	??_get_wall_presence^0,c
   757   0008A2  0E60               	movlw	96
   758   0008A4                     u1757:
   759   0008A4  2EE8               	decfsz	wreg,f,c
   760   0008A6  D7FE               	bra	u1757
   761   0008A8  2E0E               	decfsz	??_get_wall_presence^0,f,c
   762   0008AA  D7FC               	bra	u1757
   763   0008AC  2E0F               	decfsz	(??_get_wall_presence+1)^0,f,c
   764   0008AE  D7FA               	bra	u1757
   765                           
   766                           ;color.c: 239:     unsigned int clear2 = color_read_Clear();
   767   0008B0  EC1D  F005         	call	_color_read_Clear	;wreg free
   768   0008B4  C005  F012         	movff	?_color_read_Clear,get_wall_presence@clear2
   769   0008B8  C006  F013         	movff	?_color_read_Clear+1,get_wall_presence@clear2+1
   770   0008BC                     
   771                           ;color.c: 240:     set_led_color(0b000);
   772   0008BC  0E00               	movlw	0
   773   0008BE  6E02               	movwf	(set_led_color@color+1)^0,c
   774   0008C0  0E00               	movlw	0
   775   0008C2  6E01               	movwf	set_led_color@color^0,c
   776   0008C4  ECE3  F005         	call	_set_led_color	;wreg free
   777   0008C8                     
   778                           ;color.c: 241:     return clear2 >= clear1*8;
   779   0008C8  C010  F00E         	movff	get_wall_presence@clear1,??_get_wall_presence
   780   0008CC  C011  F00F         	movff	get_wall_presence@clear1+1,??_get_wall_presence+1
   781   0008D0  90D8               	bcf	status,0,c
   782   0008D2  360E               	rlcf	??_get_wall_presence^0,f,c
   783   0008D4  360F               	rlcf	(??_get_wall_presence+1)^0,f,c
   784   0008D6  90D8               	bcf	status,0,c
   785   0008D8  360E               	rlcf	??_get_wall_presence^0,f,c
   786   0008DA  360F               	rlcf	(??_get_wall_presence+1)^0,f,c
   787   0008DC  90D8               	bcf	status,0,c
   788   0008DE  360E               	rlcf	??_get_wall_presence^0,f,c
   789   0008E0  360F               	rlcf	(??_get_wall_presence+1)^0,f,c
   790   0008E2  500E               	movf	??_get_wall_presence^0,w,c
   791   0008E4  5C12               	subwf	get_wall_presence@clear2^0,w,c
   792   0008E6  500F               	movf	(??_get_wall_presence+1)^0,w,c
   793   0008E8  5813               	subwfb	(get_wall_presence@clear2+1)^0,w,c
   794   0008EA  B0D8               	btfsc	status,0,c
   795   0008EC  EF7A  F004         	goto	u1271
   796   0008F0  EF7D  F004         	goto	u1270
   797   0008F4                     u1271:
   798   0008F4  0E01               	movlw	1
   799   0008F6  EF7E  F004         	goto	u1280
   800   0008FA                     u1270:
   801   0008FA  0E00               	movlw	0
   802   0008FC                     u1280:
   803   0008FC  6E0C               	movwf	?_get_wall_presence^0,c
   804   0008FE  6A0D               	clrf	(?_get_wall_presence+1)^0,c
   805   000900  0012               	return		;funcret
   806   000902                     __end_of_get_wall_presence:
   807                           	callstack 0
   808                           
   809 ;; *************** function _color_read_Clear *****************
   810 ;; Defined at:
   811 ;;		line 130 in file "color.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  tmp             2    9[COMRAM] unsigned int 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  2    4[COMRAM] unsigned int 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   827 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;Total ram usage:        7 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 4
   832 ;; This function calls:
   833 ;;		_I2C_2_Master_Read
   834 ;;		_I2C_2_Master_RepStart
   835 ;;		_I2C_2_Master_Start
   836 ;;		_I2C_2_Master_Stop
   837 ;;		_I2C_2_Master_Write
   838 ;; This function is called by:
   839 ;;		_get_wall_presence
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text2
   844   000A3A                     __ptext2:
   845                           	callstack 0
   846   000A3A                     _color_read_Clear:
   847                           	callstack 25
   848   000A3A                     
   849                           ;color.c: 132:  unsigned int tmp;;color.c: 133:  I2C_2_Master_Start();
   850   000A3A  EC9A  F006         	call	_I2C_2_Master_Start	;wreg free
   851                           
   852                           ;color.c: 134:  I2C_2_Master_Write(0x52 | 0x00);
   853   000A3E  0E52               	movlw	82
   854   000A40  EC89  F006         	call	_I2C_2_Master_Write
   855                           
   856                           ;color.c: 135:  I2C_2_Master_Write(0xA0 | 0x14);
   857   000A44  0EB4               	movlw	180
   858   000A46  EC89  F006         	call	_I2C_2_Master_Write
   859                           
   860                           ;color.c: 136:  I2C_2_Master_RepStart();
   861   000A4A  EC9F  F006         	call	_I2C_2_Master_RepStart	;wreg free
   862                           
   863                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x01);
   864   000A4E  0E53               	movlw	83
   865   000A50  EC89  F006         	call	_I2C_2_Master_Write
   866                           
   867                           ;color.c: 138:  tmp=I2C_2_Master_Read(1);
   868   000A54  0E01               	movlw	1
   869   000A56  EC05  F006         	call	_I2C_2_Master_Read
   870   000A5A  6E07               	movwf	??_color_read_Clear^0,c
   871   000A5C  5007               	movf	??_color_read_Clear^0,w,c
   872   000A5E  6E0A               	movwf	color_read_Clear@tmp^0,c
   873   000A60  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
   874                           
   875                           ;color.c: 139:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
   876   000A62  0E00               	movlw	0
   877   000A64  EC05  F006         	call	_I2C_2_Master_Read
   878   000A68  6E07               	movwf	??_color_read_Clear^0,c
   879   000A6A  5007               	movf	??_color_read_Clear^0,w,c
   880   000A6C  6E09               	movwf	(??_color_read_Clear+2)^0,c
   881   000A6E  6A08               	clrf	(??_color_read_Clear+1)^0,c
   882   000A70  500A               	movf	color_read_Clear@tmp^0,w,c
   883   000A72  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
   884   000A74  6E0A               	movwf	color_read_Clear@tmp^0,c
   885   000A76  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
   886   000A78  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
   887   000A7A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
   888                           
   889                           ;color.c: 140:  I2C_2_Master_Stop();
   890   000A7C  EC95  F006         	call	_I2C_2_Master_Stop	;wreg free
   891   000A80                     
   892                           ;color.c: 141:  return tmp;
   893   000A80  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
   894   000A84  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
   895   000A88  0012               	return		;funcret
   896   000A8A                     __end_of_color_read_Clear:
   897                           	callstack 0
   898                           
   899 ;; *************** function _get_color_code *****************
   900 ;; Defined at:
   901 ;;		line 174 in file "color.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  value           2   28[BANK0 ] unsigned int 
   906 ;;  i               2   30[BANK0 ] unsigned int 
   907 ;;  NormalizedRG   12   32[BANK0 ] struct RGB_val
   908 ;;  min_index       2   26[BANK0 ] unsigned int 
   909 ;;  min_value       2   24[BANK0 ] unsigned int 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  2   52[COMRAM] unsigned int 
   912 ;; Registers used:
   913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   920 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   921 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;      Totals:         4      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;Total ram usage:       48 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 5
   926 ;; This function calls:
   927 ;;		___lldiv
   928 ;;		___lmul
   929 ;;		___wmul
   930 ;;		_color_read_Blue
   931 ;;		_color_read_Green
   932 ;;		_color_read_Red
   933 ;;		_get_color_distance
   934 ;;		_set_led_color
   935 ;; This function is called by:
   936 ;;		_main
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text3
   941   000032                     __ptext3:
   942                           	callstack 0
   943   000032                     _get_color_code:
   944                           	callstack 25
   945   000032                     
   946                           ;color.c: 177:     set_led_color(0b100);
   947   000032  0E00               	movlw	0
   948   000034  6E02               	movwf	(set_led_color@color+1)^0,c
   949   000036  0E04               	movlw	4
   950   000038  6E01               	movwf	set_led_color@color^0,c
   951   00003A  ECE3  F005         	call	_set_led_color	;wreg free
   952   00003E                     
   953                           ;color.c: 178:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   954   00003E  0E12               	movlw	18
   955   000040  6E38               	movwf	(??_get_color_code+1)^0,c
   956   000042  0EDC               	movlw	220
   957   000044  6E37               	movwf	??_get_color_code^0,c
   958   000046  0E60               	movlw	96
   959   000048                     u1767:
   960   000048  2EE8               	decfsz	wreg,f,c
   961   00004A  D7FE               	bra	u1767
   962   00004C  2E37               	decfsz	??_get_color_code^0,f,c
   963   00004E  D7FC               	bra	u1767
   964   000050  2E38               	decfsz	(??_get_color_code+1)^0,f,c
   965   000052  D7FA               	bra	u1767
   966   000054                     
   967                           ;color.c: 179:     RGB.R = color_read_Red();
   968   000054  EC45  F005         	call	_color_read_Red	;wreg free
   969   000058  C005  F03D         	movff	?_color_read_Red,_RGB
   970   00005C  C006  F03E         	movff	?_color_read_Red+1,_RGB+1
   971   000060  6A3F               	clrf	(_RGB+2)^0,c
   972   000062  6A40               	clrf	(_RGB+3)^0,c
   973   000064                     
   974                           ;color.c: 180:     set_led_color(0b010);
   975   000064  0E00               	movlw	0
   976   000066  6E02               	movwf	(set_led_color@color+1)^0,c
   977   000068  0E02               	movlw	2
   978   00006A  6E01               	movwf	set_led_color@color^0,c
   979   00006C  ECE3  F005         	call	_set_led_color	;wreg free
   980   000070                     
   981                           ;color.c: 181:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
   982   000070  0E12               	movlw	18
   983   000072  6E38               	movwf	(??_get_color_code+1)^0,c
   984   000074  0EDC               	movlw	220
   985   000076  6E37               	movwf	??_get_color_code^0,c
   986   000078  0E60               	movlw	96
   987   00007A                     u1777:
   988   00007A  2EE8               	decfsz	wreg,f,c
   989   00007C  D7FE               	bra	u1777
   990   00007E  2E37               	decfsz	??_get_color_code^0,f,c
   991   000080  D7FC               	bra	u1777
   992   000082  2E38               	decfsz	(??_get_color_code+1)^0,f,c
   993   000084  D7FA               	bra	u1777
   994                           
   995                           ;color.c: 182:     RGB.G = color_read_Green();
   996   000086  EC6D  F005         	call	_color_read_Green	;wreg free
   997   00008A  C005  F041         	movff	?_color_read_Green,_RGB+4
   998   00008E  C006  F042         	movff	?_color_read_Green+1,_RGB+5
   999   000092  6A43               	clrf	(_RGB+6)^0,c
  1000   000094  6A44               	clrf	(_RGB+7)^0,c
  1001   000096                     
  1002                           ;color.c: 183:     set_led_color(0b001);
  1003   000096  0E00               	movlw	0
  1004   000098  6E02               	movwf	(set_led_color@color+1)^0,c
  1005   00009A  0E01               	movlw	1
  1006   00009C  6E01               	movwf	set_led_color@color^0,c
  1007   00009E  ECE3  F005         	call	_set_led_color	;wreg free
  1008   0000A2                     
  1009                           ;color.c: 184:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  1010   0000A2  0E12               	movlw	18
  1011   0000A4  6E38               	movwf	(??_get_color_code+1)^0,c
  1012   0000A6  0EDC               	movlw	220
  1013   0000A8  6E37               	movwf	??_get_color_code^0,c
  1014   0000AA  0E60               	movlw	96
  1015   0000AC                     u1787:
  1016   0000AC  2EE8               	decfsz	wreg,f,c
  1017   0000AE  D7FE               	bra	u1787
  1018   0000B0  2E37               	decfsz	??_get_color_code^0,f,c
  1019   0000B2  D7FC               	bra	u1787
  1020   0000B4  2E38               	decfsz	(??_get_color_code+1)^0,f,c
  1021   0000B6  D7FA               	bra	u1787
  1022   0000B8                     
  1023                           ;color.c: 185:     RGB.B = color_read_Blue();
  1024   0000B8  EC95  F005         	call	_color_read_Blue	;wreg free
  1025   0000BC  C005  F045         	movff	?_color_read_Blue,_RGB+8
  1026   0000C0  C006  F046         	movff	?_color_read_Blue+1,_RGB+9
  1027   0000C4  6A47               	clrf	(_RGB+10)^0,c
  1028   0000C6  6A48               	clrf	(_RGB+11)^0,c
  1029   0000C8                     
  1030                           ;color.c: 186:     set_led_color(0b000);
  1031   0000C8  0E00               	movlw	0
  1032   0000CA  6E02               	movwf	(set_led_color@color+1)^0,c
  1033   0000CC  0E00               	movlw	0
  1034   0000CE  6E01               	movwf	set_led_color@color^0,c
  1035   0000D0  ECE3  F005         	call	_set_led_color	;wreg free
  1036   0000D4                     
  1037                           ;color.c: 188:     struct RGB_val NormalizedRGB;;color.c: 189:     NormalizedRGB.R = RGB
      +                          .R >= Black_setup.R ? (RGB.R - Black_setup.R)*100/(White_setup.R - Black_setup.R) : 0;
  1038   0000D4  504B               	movf	_Black_setup^0,w,c
  1039   0000D6  5C3D               	subwf	_RGB^0,w,c
  1040   0000D8  504C               	movf	(_Black_setup+1)^0,w,c
  1041   0000DA  583E               	subwfb	(_RGB+1)^0,w,c
  1042   0000DC  504D               	movf	(_Black_setup+2)^0,w,c
  1043   0000DE  583F               	subwfb	(_RGB+2)^0,w,c
  1044   0000E0  504E               	movf	(_Black_setup+3)^0,w,c
  1045   0000E2  5840               	subwfb	(_RGB+3)^0,w,c
  1046   0000E4  B0D8               	btfsc	status,0,c
  1047   0000E6  EF77  F000         	goto	u1171
  1048   0000EA  EF79  F000         	goto	u1170
  1049   0000EE                     u1171:
  1050   0000EE  EF84  F000         	goto	l1948
  1051   0000F2                     u1170:
  1052   0000F2  0E00               	movlw	0
  1053   0000F4  0100               	movlb	0	; () banked
  1054   0000F6  6FD8               	movwf	_get_color_code$457& (0+255),b
  1055   0000F8  0E00               	movlw	0
  1056   0000FA  6FD9               	movwf	(_get_color_code$457+1)& (0+255),b
  1057   0000FC  0E00               	movlw	0
  1058   0000FE  6FDA               	movwf	(_get_color_code$457+2)& (0+255),b
  1059   000100  0E00               	movlw	0
  1060   000102  6FDB               	movwf	(_get_color_code$457+3)& (0+255),b
  1061   000104  EFB9  F000         	goto	l1950
  1062   000108                     l1948:
  1063   000108  504B               	movf	_Black_setup^0,w,c
  1064   00010A  5C3D               	subwf	_RGB^0,w,c
  1065   00010C  6E01               	movwf	___lmul@multiplier^0,c
  1066   00010E  504C               	movf	(_Black_setup+1)^0,w,c
  1067   000110  583E               	subwfb	(_RGB+1)^0,w,c
  1068   000112  6E02               	movwf	(___lmul@multiplier+1)^0,c
  1069   000114  504D               	movf	(_Black_setup+2)^0,w,c
  1070   000116  583F               	subwfb	(_RGB+2)^0,w,c
  1071   000118  6E03               	movwf	(___lmul@multiplier+2)^0,c
  1072   00011A  504E               	movf	(_Black_setup+3)^0,w,c
  1073   00011C  5840               	subwfb	(_RGB+3)^0,w,c
  1074   00011E  6E04               	movwf	(___lmul@multiplier+3)^0,c
  1075   000120  0E64               	movlw	100
  1076   000122  6E05               	movwf	___lmul@multiplicand^0,c
  1077   000124  0E00               	movlw	0
  1078   000126  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1079   000128  0E00               	movlw	0
  1080   00012A  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1081   00012C  0E00               	movlw	0
  1082   00012E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1083   000130  ECB7  F004         	call	___lmul	;wreg free
  1084   000134  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1085   000138  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1086   00013C  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1087   000140  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1088   000144  504B               	movf	_Black_setup^0,w,c
  1089   000146  0100               	movlb	0	; () banked
  1090   000148  5D60               	subwf	_White_setup& (0+255),w,b
  1091   00014A  6E11               	movwf	___lldiv@divisor^0,c
  1092   00014C  504C               	movf	(_Black_setup+1)^0,w,c
  1093   00014E  5961               	subwfb	(_White_setup+1)& (0+255),w,b
  1094   000150  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1095   000152  504D               	movf	(_Black_setup+2)^0,w,c
  1096   000154  5962               	subwfb	(_White_setup+2)& (0+255),w,b
  1097   000156  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1098   000158  504E               	movf	(_Black_setup+3)^0,w,c
  1099   00015A  5963               	subwfb	(_White_setup+3)& (0+255),w,b
  1100   00015C  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1101   00015E  EC8C  F003         	call	___lldiv	;wreg free
  1102   000162  C00D  F0D8         	movff	?___lldiv,_get_color_code$457
  1103   000166  C00E  F0D9         	movff	?___lldiv+1,_get_color_code$457+1
  1104   00016A  C00F  F0DA         	movff	?___lldiv+2,_get_color_code$457+2
  1105   00016E  C010  F0DB         	movff	?___lldiv+3,_get_color_code$457+3
  1106   000172                     l1950:
  1107   000172  C0D8  F0EC         	movff	_get_color_code$457,get_color_code@NormalizedRGB
  1108   000176  C0D9  F0ED         	movff	_get_color_code$457+1,get_color_code@NormalizedRGB+1
  1109   00017A  C0DA  F0EE         	movff	_get_color_code$457+2,get_color_code@NormalizedRGB+2
  1110   00017E  C0DB  F0EF         	movff	_get_color_code$457+3,get_color_code@NormalizedRGB+3
  1111   000182                     
  1112                           ;color.c: 190:     NormalizedRGB.G = RGB.G >= Black_setup.G ? (RGB.G - Black_setup.G)*10
      +                          0/(White_setup.G - Black_setup.G) : 0;
  1113   000182  504F               	movf	(_Black_setup+4)^0,w,c
  1114   000184  5C41               	subwf	(_RGB+4)^0,w,c
  1115   000186  5050               	movf	(_Black_setup+5)^0,w,c
  1116   000188  5842               	subwfb	(_RGB+5)^0,w,c
  1117   00018A  5051               	movf	(_Black_setup+6)^0,w,c
  1118   00018C  5843               	subwfb	(_RGB+6)^0,w,c
  1119   00018E  5052               	movf	(_Black_setup+7)^0,w,c
  1120   000190  5844               	subwfb	(_RGB+7)^0,w,c
  1121   000192  B0D8               	btfsc	status,0,c
  1122   000194  EFCE  F000         	goto	u1181
  1123   000198  EFD0  F000         	goto	u1180
  1124   00019C                     u1181:
  1125   00019C  EFDB  F000         	goto	l1956
  1126   0001A0                     u1180:
  1127   0001A0  0E00               	movlw	0
  1128   0001A2  0100               	movlb	0	; () banked
  1129   0001A4  6FDC               	movwf	_get_color_code$458& (0+255),b
  1130   0001A6  0E00               	movlw	0
  1131   0001A8  6FDD               	movwf	(_get_color_code$458+1)& (0+255),b
  1132   0001AA  0E00               	movlw	0
  1133   0001AC  6FDE               	movwf	(_get_color_code$458+2)& (0+255),b
  1134   0001AE  0E00               	movlw	0
  1135   0001B0  6FDF               	movwf	(_get_color_code$458+3)& (0+255),b
  1136   0001B2  EF10  F001         	goto	l1958
  1137   0001B6                     l1956:
  1138   0001B6  504F               	movf	(_Black_setup+4)^0,w,c
  1139   0001B8  5C41               	subwf	(_RGB+4)^0,w,c
  1140   0001BA  6E01               	movwf	___lmul@multiplier^0,c
  1141   0001BC  5050               	movf	(_Black_setup+5)^0,w,c
  1142   0001BE  5842               	subwfb	(_RGB+5)^0,w,c
  1143   0001C0  6E02               	movwf	(___lmul@multiplier+1)^0,c
  1144   0001C2  5051               	movf	(_Black_setup+6)^0,w,c
  1145   0001C4  5843               	subwfb	(_RGB+6)^0,w,c
  1146   0001C6  6E03               	movwf	(___lmul@multiplier+2)^0,c
  1147   0001C8  5052               	movf	(_Black_setup+7)^0,w,c
  1148   0001CA  5844               	subwfb	(_RGB+7)^0,w,c
  1149   0001CC  6E04               	movwf	(___lmul@multiplier+3)^0,c
  1150   0001CE  0E64               	movlw	100
  1151   0001D0  6E05               	movwf	___lmul@multiplicand^0,c
  1152   0001D2  0E00               	movlw	0
  1153   0001D4  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1154   0001D6  0E00               	movlw	0
  1155   0001D8  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1156   0001DA  0E00               	movlw	0
  1157   0001DC  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1158   0001DE  ECB7  F004         	call	___lmul	;wreg free
  1159   0001E2  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1160   0001E6  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1161   0001EA  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1162   0001EE  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1163   0001F2  504F               	movf	(_Black_setup+4)^0,w,c
  1164   0001F4  0100               	movlb	0	; () banked
  1165   0001F6  5D64               	subwf	(_White_setup+4)& (0+255),w,b
  1166   0001F8  6E11               	movwf	___lldiv@divisor^0,c
  1167   0001FA  5050               	movf	(_Black_setup+5)^0,w,c
  1168   0001FC  5965               	subwfb	(_White_setup+5)& (0+255),w,b
  1169   0001FE  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1170   000200  5051               	movf	(_Black_setup+6)^0,w,c
  1171   000202  5966               	subwfb	(_White_setup+6)& (0+255),w,b
  1172   000204  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1173   000206  5052               	movf	(_Black_setup+7)^0,w,c
  1174   000208  5967               	subwfb	(_White_setup+7)& (0+255),w,b
  1175   00020A  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1176   00020C  EC8C  F003         	call	___lldiv	;wreg free
  1177   000210  C00D  F0DC         	movff	?___lldiv,_get_color_code$458
  1178   000214  C00E  F0DD         	movff	?___lldiv+1,_get_color_code$458+1
  1179   000218  C00F  F0DE         	movff	?___lldiv+2,_get_color_code$458+2
  1180   00021C  C010  F0DF         	movff	?___lldiv+3,_get_color_code$458+3
  1181   000220                     l1958:
  1182   000220  C0DC  F0F0         	movff	_get_color_code$458,get_color_code@NormalizedRGB+4
  1183   000224  C0DD  F0F1         	movff	_get_color_code$458+1,get_color_code@NormalizedRGB+5
  1184   000228  C0DE  F0F2         	movff	_get_color_code$458+2,get_color_code@NormalizedRGB+6
  1185   00022C  C0DF  F0F3         	movff	_get_color_code$458+3,get_color_code@NormalizedRGB+7
  1186   000230                     
  1187                           ;color.c: 191:     NormalizedRGB.B = RGB.B >= Black_setup.B ? (RGB.B - Black_setup.B)*10
      +                          0/(White_setup.B - Black_setup.B) : 0;
  1188   000230  5053               	movf	(_Black_setup+8)^0,w,c
  1189   000232  5C45               	subwf	(_RGB+8)^0,w,c
  1190   000234  5054               	movf	(_Black_setup+9)^0,w,c
  1191   000236  5846               	subwfb	(_RGB+9)^0,w,c
  1192   000238  5055               	movf	(_Black_setup+10)^0,w,c
  1193   00023A  5847               	subwfb	(_RGB+10)^0,w,c
  1194   00023C  5056               	movf	(_Black_setup+11)^0,w,c
  1195   00023E  5848               	subwfb	(_RGB+11)^0,w,c
  1196   000240  B0D8               	btfsc	status,0,c
  1197   000242  EF25  F001         	goto	u1191
  1198   000246  EF27  F001         	goto	u1190
  1199   00024A                     u1191:
  1200   00024A  EF32  F001         	goto	l1964
  1201   00024E                     u1190:
  1202   00024E  0E00               	movlw	0
  1203   000250  0100               	movlb	0	; () banked
  1204   000252  6FE0               	movwf	_get_color_code$459& (0+255),b
  1205   000254  0E00               	movlw	0
  1206   000256  6FE1               	movwf	(_get_color_code$459+1)& (0+255),b
  1207   000258  0E00               	movlw	0
  1208   00025A  6FE2               	movwf	(_get_color_code$459+2)& (0+255),b
  1209   00025C  0E00               	movlw	0
  1210   00025E  6FE3               	movwf	(_get_color_code$459+3)& (0+255),b
  1211   000260  EF67  F001         	goto	l1966
  1212   000264                     l1964:
  1213   000264  5053               	movf	(_Black_setup+8)^0,w,c
  1214   000266  5C45               	subwf	(_RGB+8)^0,w,c
  1215   000268  6E01               	movwf	___lmul@multiplier^0,c
  1216   00026A  5054               	movf	(_Black_setup+9)^0,w,c
  1217   00026C  5846               	subwfb	(_RGB+9)^0,w,c
  1218   00026E  6E02               	movwf	(___lmul@multiplier+1)^0,c
  1219   000270  5055               	movf	(_Black_setup+10)^0,w,c
  1220   000272  5847               	subwfb	(_RGB+10)^0,w,c
  1221   000274  6E03               	movwf	(___lmul@multiplier+2)^0,c
  1222   000276  5056               	movf	(_Black_setup+11)^0,w,c
  1223   000278  5848               	subwfb	(_RGB+11)^0,w,c
  1224   00027A  6E04               	movwf	(___lmul@multiplier+3)^0,c
  1225   00027C  0E64               	movlw	100
  1226   00027E  6E05               	movwf	___lmul@multiplicand^0,c
  1227   000280  0E00               	movlw	0
  1228   000282  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1229   000284  0E00               	movlw	0
  1230   000286  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1231   000288  0E00               	movlw	0
  1232   00028A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1233   00028C  ECB7  F004         	call	___lmul	;wreg free
  1234   000290  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1235   000294  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1236   000298  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1237   00029C  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1238   0002A0  5053               	movf	(_Black_setup+8)^0,w,c
  1239   0002A2  0100               	movlb	0	; () banked
  1240   0002A4  5D68               	subwf	(_White_setup+8)& (0+255),w,b
  1241   0002A6  6E11               	movwf	___lldiv@divisor^0,c
  1242   0002A8  5054               	movf	(_Black_setup+9)^0,w,c
  1243   0002AA  5969               	subwfb	(_White_setup+9)& (0+255),w,b
  1244   0002AC  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1245   0002AE  5055               	movf	(_Black_setup+10)^0,w,c
  1246   0002B0  596A               	subwfb	(_White_setup+10)& (0+255),w,b
  1247   0002B2  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1248   0002B4  5056               	movf	(_Black_setup+11)^0,w,c
  1249   0002B6  596B               	subwfb	(_White_setup+11)& (0+255),w,b
  1250   0002B8  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1251   0002BA  EC8C  F003         	call	___lldiv	;wreg free
  1252   0002BE  C00D  F0E0         	movff	?___lldiv,_get_color_code$459
  1253   0002C2  C00E  F0E1         	movff	?___lldiv+1,_get_color_code$459+1
  1254   0002C6  C00F  F0E2         	movff	?___lldiv+2,_get_color_code$459+2
  1255   0002CA  C010  F0E3         	movff	?___lldiv+3,_get_color_code$459+3
  1256   0002CE                     l1966:
  1257   0002CE  C0E0  F0F4         	movff	_get_color_code$459,get_color_code@NormalizedRGB+8
  1258   0002D2  C0E1  F0F5         	movff	_get_color_code$459+1,get_color_code@NormalizedRGB+9
  1259   0002D6  C0E2  F0F6         	movff	_get_color_code$459+2,get_color_code@NormalizedRGB+10
  1260   0002DA  C0E3  F0F7         	movff	_get_color_code$459+3,get_color_code@NormalizedRGB+11
  1261   0002DE                     
  1262                           ;color.c: 193:     unsigned int min_value = get_color_distance(NormalizedRGB,Color_rules
      +                          [0]);
  1263   0002DE  EE20  F0EC         	lfsr	2,get_color_code@NormalizedRGB
  1264   0002E2  EE00  F007         	lfsr	0,get_color_distance@color1
  1265   0002E6  0E0B               	movlw	11
  1266   0002E8                     u1201:
  1267   0002E8  CFDB FFEB          	movff	plusw2,plusw0
  1268   0002EC  06E8               	decf	wreg,f,c
  1269   0002EE  E2FC               	bc	u1201
  1270   0002F0  EE21  F000         	lfsr	2,_Color_rules
  1271   0002F4  EE00  F013         	lfsr	0,get_color_distance@color2
  1272   0002F8  0E0B               	movlw	11
  1273   0002FA                     u1211:
  1274   0002FA  CFDB FFEB          	movff	plusw2,plusw0
  1275   0002FE  06E8               	decf	wreg,f,c
  1276   000300  E2FC               	bc	u1211
  1277   000302  ECE5  F001         	call	_get_color_distance	;wreg free
  1278   000306  C007  F0E4         	movff	?_get_color_distance,get_color_code@min_value
  1279   00030A  C008  F0E5         	movff	?_get_color_distance+1,get_color_code@min_value+1
  1280   00030E                     
  1281                           ;color.c: 194:     unsigned int min_index = 0;
  1282   00030E  0E00               	movlw	0
  1283   000310  0100               	movlb	0	; () banked
  1284   000312  6FE7               	movwf	(get_color_code@min_index+1)& (0+255),b
  1285   000314  0E00               	movlw	0
  1286   000316  6FE6               	movwf	get_color_code@min_index& (0+255),b
  1287   000318                     
  1288                           ; BSR set to: 0
  1289                           ;color.c: 195:     for(unsigned int i = 1;i < 9; i++){
  1290   000318  0E00               	movlw	0
  1291   00031A  6FEB               	movwf	(get_color_code@i+1)& (0+255),b
  1292   00031C  0E01               	movlw	1
  1293   00031E  6FEA               	movwf	get_color_code@i& (0+255),b
  1294   000320                     l1978:
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;color.c: 196:         unsigned int value = get_color_distance(NormalizedRGB,Color_rules
      +                          [i]);
  1298   000320  C0EA  F001         	movff	get_color_code@i,___wmul@multiplier
  1299   000324  C0EB  F002         	movff	get_color_code@i+1,___wmul@multiplier+1
  1300   000328  0E00               	movlw	0
  1301   00032A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1302   00032C  0E0C               	movlw	12
  1303   00032E  6E03               	movwf	___wmul@multiplicand^0,c
  1304   000330  EC4F  F006         	call	___wmul	;wreg free
  1305   000334  0E00               	movlw	low _Color_rules
  1306   000336  2401               	addwf	?___wmul^0,w,c
  1307   000338  6ED9               	movwf	fsr2l,c
  1308   00033A  0E01               	movlw	high _Color_rules
  1309   00033C  2002               	addwfc	(?___wmul+1)^0,w,c
  1310   00033E  6EDA               	movwf	fsr2h,c
  1311   000340  EE10  F0CC         	lfsr	1,_get_color_code$2366
  1312   000344  0E0B               	movlw	11
  1313   000346                     u1221:
  1314   000346  CFDB FFE3          	movff	plusw2,plusw1
  1315   00034A  06E8               	decf	wreg,f,c
  1316   00034C  E2FC               	bc	u1221
  1317   00034E                     
  1318                           ;color.c: 196:         unsigned int value = get_color_distance(NormalizedRGB,Color_rules
      +                          [i]);
  1319   00034E  EE20  F0EC         	lfsr	2,get_color_code@NormalizedRGB
  1320   000352  EE00  F007         	lfsr	0,get_color_distance@color1
  1321   000356  0E0B               	movlw	11
  1322   000358                     u1231:
  1323   000358  CFDB FFEB          	movff	plusw2,plusw0
  1324   00035C  06E8               	decf	wreg,f,c
  1325   00035E  E2FC               	bc	u1231
  1326   000360  EE20  F0CC         	lfsr	2,_get_color_code$2366
  1327   000364  EE00  F013         	lfsr	0,get_color_distance@color2
  1328   000368  0E0B               	movlw	11
  1329   00036A                     u1241:
  1330   00036A  CFDB FFEB          	movff	plusw2,plusw0
  1331   00036E  06E8               	decf	wreg,f,c
  1332   000370  E2FC               	bc	u1241
  1333   000372  ECE5  F001         	call	_get_color_distance	;wreg free
  1334   000376  C007  F0E8         	movff	?_get_color_distance,get_color_code@value
  1335   00037A  C008  F0E9         	movff	?_get_color_distance+1,get_color_code@value+1
  1336   00037E                     
  1337                           ;color.c: 197:         if(value < min_value){
  1338   00037E  0100               	movlb	0	; () banked
  1339   000380  51E4               	movf	get_color_code@min_value& (0+255),w,b
  1340   000382  5DE8               	subwf	get_color_code@value& (0+255),w,b
  1341   000384  51E5               	movf	(get_color_code@min_value+1)& (0+255),w,b
  1342   000386  59E9               	subwfb	(get_color_code@value+1)& (0+255),w,b
  1343   000388  B0D8               	btfsc	status,0,c
  1344   00038A  EFC9  F001         	goto	u1251
  1345   00038E  EFCB  F001         	goto	u1250
  1346   000392                     u1251:
  1347   000392  EFD3  F001         	goto	l1986
  1348   000396                     u1250:
  1349   000396                     
  1350                           ; BSR set to: 0
  1351                           ;color.c: 198:             min_index = i;
  1352   000396  C0EA  F0E6         	movff	get_color_code@i,get_color_code@min_index
  1353   00039A  C0EB  F0E7         	movff	get_color_code@i+1,get_color_code@min_index+1
  1354                           
  1355                           ;color.c: 199:             min_value = value;
  1356   00039E  C0E8  F0E4         	movff	get_color_code@value,get_color_code@min_value
  1357   0003A2  C0E9  F0E5         	movff	get_color_code@value+1,get_color_code@min_value+1
  1358   0003A6                     l1986:
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;color.c: 201:     }
  1362   0003A6  4BEA               	infsnz	get_color_code@i& (0+255),f,b
  1363   0003A8  2BEB               	incf	(get_color_code@i+1)& (0+255),f,b
  1364   0003AA                     
  1365                           ; BSR set to: 0
  1366   0003AA  51EB               	movf	(get_color_code@i+1)& (0+255),w,b
  1367   0003AC  E109               	bnz	u1260
  1368   0003AE  0E09               	movlw	9
  1369   0003B0  5DEA               	subwf	get_color_code@i& (0+255),w,b
  1370   0003B2  A0D8               	btfss	status,0,c
  1371   0003B4  EFDE  F001         	goto	u1261
  1372   0003B8  EFE0  F001         	goto	u1260
  1373   0003BC                     u1261:
  1374   0003BC  EF90  F001         	goto	l1978
  1375   0003C0                     u1260:
  1376   0003C0                     
  1377                           ; BSR set to: 0
  1378                           ;color.c: 202:     return min_index;
  1379   0003C0  C0E6  F035         	movff	get_color_code@min_index,?_get_color_code
  1380   0003C4  C0E7  F036         	movff	get_color_code@min_index+1,?_get_color_code+1
  1381   0003C8                     
  1382                           ; BSR set to: 0
  1383   0003C8  0012               	return		;funcret
  1384   0003CA                     __end_of_get_color_code:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _get_color_distance *****************
  1388 ;; Defined at:
  1389 ;;		line 144 in file "color.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  color1         12    6[COMRAM] struct RGB_val
  1392 ;;  color2         12   18[COMRAM] struct RGB_val
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  B_offset        2   50[COMRAM] unsigned int 
  1395 ;;  G_offset        2   48[COMRAM] unsigned int 
  1396 ;;  R_offset        2   46[COMRAM] unsigned int 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  2    6[COMRAM] unsigned int 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1406 ;;      Params:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1408 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1409 ;;      Totals:        46       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1410 ;;Total ram usage:       46 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 3
  1413 ;; This function calls:
  1414 ;;		___wmul
  1415 ;; This function is called by:
  1416 ;;		_get_color_code
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text4
  1421   0003CA                     __ptext4:
  1422                           	callstack 0
  1423   0003CA                     _get_color_distance:
  1424                           	callstack 26
  1425   0003CA                     
  1426                           ;color.c: 145:     unsigned int R_offset = color1.R >= color2.R ? color1.R - color2.R : 
      +                          color2.R - color1.R;
  1427   0003CA  5013               	movf	get_color_distance@color2^0,w,c
  1428   0003CC  5C07               	subwf	get_color_distance@color1^0,w,c
  1429   0003CE  5014               	movf	(get_color_distance@color2+1)^0,w,c
  1430   0003D0  5808               	subwfb	(get_color_distance@color1+1)^0,w,c
  1431   0003D2  5015               	movf	(get_color_distance@color2+2)^0,w,c
  1432   0003D4  5809               	subwfb	(get_color_distance@color1+2)^0,w,c
  1433   0003D6  5016               	movf	(get_color_distance@color2+3)^0,w,c
  1434   0003D8  580A               	subwfb	(get_color_distance@color1+3)^0,w,c
  1435   0003DA  B0D8               	btfsc	status,0,c
  1436   0003DC  EFF2  F001         	goto	u951
  1437   0003E0  EFF4  F001         	goto	u950
  1438   0003E4                     u951:
  1439   0003E4  EF02  F002         	goto	l1824
  1440   0003E8                     u950:
  1441   0003E8  5007               	movf	get_color_distance@color1^0,w,c
  1442   0003EA  5C13               	subwf	get_color_distance@color2^0,w,c
  1443   0003EC  6E23               	movwf	_get_color_distance$416^0,c
  1444   0003EE  5008               	movf	(get_color_distance@color1+1)^0,w,c
  1445   0003F0  5814               	subwfb	(get_color_distance@color2+1)^0,w,c
  1446   0003F2  6E24               	movwf	(_get_color_distance$416+1)^0,c
  1447   0003F4  5009               	movf	(get_color_distance@color1+2)^0,w,c
  1448   0003F6  5815               	subwfb	(get_color_distance@color2+2)^0,w,c
  1449   0003F8  6E25               	movwf	(_get_color_distance$416+2)^0,c
  1450   0003FA  500A               	movf	(get_color_distance@color1+3)^0,w,c
  1451   0003FC  5816               	subwfb	(get_color_distance@color2+3)^0,w,c
  1452   0003FE  6E26               	movwf	(_get_color_distance$416+3)^0,c
  1453   000400  EF0E  F002         	goto	l1826
  1454   000404                     l1824:
  1455   000404  5013               	movf	get_color_distance@color2^0,w,c
  1456   000406  5C07               	subwf	get_color_distance@color1^0,w,c
  1457   000408  6E23               	movwf	_get_color_distance$416^0,c
  1458   00040A  5014               	movf	(get_color_distance@color2+1)^0,w,c
  1459   00040C  5808               	subwfb	(get_color_distance@color1+1)^0,w,c
  1460   00040E  6E24               	movwf	(_get_color_distance$416+1)^0,c
  1461   000410  5015               	movf	(get_color_distance@color2+2)^0,w,c
  1462   000412  5809               	subwfb	(get_color_distance@color1+2)^0,w,c
  1463   000414  6E25               	movwf	(_get_color_distance$416+2)^0,c
  1464   000416  5016               	movf	(get_color_distance@color2+3)^0,w,c
  1465   000418  580A               	subwfb	(get_color_distance@color1+3)^0,w,c
  1466   00041A  6E26               	movwf	(_get_color_distance$416+3)^0,c
  1467   00041C                     l1826:
  1468   00041C  C023  F02F         	movff	_get_color_distance$416,get_color_distance@R_offset
  1469   000420  C024  F030         	movff	_get_color_distance$416+1,get_color_distance@R_offset+1
  1470                           
  1471                           ;color.c: 146:     unsigned int G_offset = color1.G >= color2.G ? color1.G - color2.G : 
      +                          color2.G - color1.G;
  1472   000424  5017               	movf	(get_color_distance@color2+4)^0,w,c
  1473   000426  5C0B               	subwf	(get_color_distance@color1+4)^0,w,c
  1474   000428  5018               	movf	(get_color_distance@color2+5)^0,w,c
  1475   00042A  580C               	subwfb	(get_color_distance@color1+5)^0,w,c
  1476   00042C  5019               	movf	(get_color_distance@color2+6)^0,w,c
  1477   00042E  580D               	subwfb	(get_color_distance@color1+6)^0,w,c
  1478   000430  501A               	movf	(get_color_distance@color2+7)^0,w,c
  1479   000432  580E               	subwfb	(get_color_distance@color1+7)^0,w,c
  1480   000434  B0D8               	btfsc	status,0,c
  1481   000436  EF1F  F002         	goto	u961
  1482   00043A  EF21  F002         	goto	u960
  1483   00043E                     u961:
  1484   00043E  EF2F  F002         	goto	l1830
  1485   000442                     u960:
  1486   000442  500B               	movf	(get_color_distance@color1+4)^0,w,c
  1487   000444  5C17               	subwf	(get_color_distance@color2+4)^0,w,c
  1488   000446  6E27               	movwf	_get_color_distance$418^0,c
  1489   000448  500C               	movf	(get_color_distance@color1+5)^0,w,c
  1490   00044A  5818               	subwfb	(get_color_distance@color2+5)^0,w,c
  1491   00044C  6E28               	movwf	(_get_color_distance$418+1)^0,c
  1492   00044E  500D               	movf	(get_color_distance@color1+6)^0,w,c
  1493   000450  5819               	subwfb	(get_color_distance@color2+6)^0,w,c
  1494   000452  6E29               	movwf	(_get_color_distance$418+2)^0,c
  1495   000454  500E               	movf	(get_color_distance@color1+7)^0,w,c
  1496   000456  581A               	subwfb	(get_color_distance@color2+7)^0,w,c
  1497   000458  6E2A               	movwf	(_get_color_distance$418+3)^0,c
  1498   00045A  EF3B  F002         	goto	l1832
  1499   00045E                     l1830:
  1500   00045E  5017               	movf	(get_color_distance@color2+4)^0,w,c
  1501   000460  5C0B               	subwf	(get_color_distance@color1+4)^0,w,c
  1502   000462  6E27               	movwf	_get_color_distance$418^0,c
  1503   000464  5018               	movf	(get_color_distance@color2+5)^0,w,c
  1504   000466  580C               	subwfb	(get_color_distance@color1+5)^0,w,c
  1505   000468  6E28               	movwf	(_get_color_distance$418+1)^0,c
  1506   00046A  5019               	movf	(get_color_distance@color2+6)^0,w,c
  1507   00046C  580D               	subwfb	(get_color_distance@color1+6)^0,w,c
  1508   00046E  6E29               	movwf	(_get_color_distance$418+2)^0,c
  1509   000470  501A               	movf	(get_color_distance@color2+7)^0,w,c
  1510   000472  580E               	subwfb	(get_color_distance@color1+7)^0,w,c
  1511   000474  6E2A               	movwf	(_get_color_distance$418+3)^0,c
  1512   000476                     l1832:
  1513   000476  C027  F031         	movff	_get_color_distance$418,get_color_distance@G_offset
  1514   00047A  C028  F032         	movff	_get_color_distance$418+1,get_color_distance@G_offset+1
  1515                           
  1516                           ;color.c: 147:     unsigned int B_offset = color1.B >= color2.B ? color1.B - color2.B : 
      +                          color2.B - color1.B;
  1517   00047E  501B               	movf	(get_color_distance@color2+8)^0,w,c
  1518   000480  5C0F               	subwf	(get_color_distance@color1+8)^0,w,c
  1519   000482  501C               	movf	(get_color_distance@color2+9)^0,w,c
  1520   000484  5810               	subwfb	(get_color_distance@color1+9)^0,w,c
  1521   000486  501D               	movf	(get_color_distance@color2+10)^0,w,c
  1522   000488  5811               	subwfb	(get_color_distance@color1+10)^0,w,c
  1523   00048A  501E               	movf	(get_color_distance@color2+11)^0,w,c
  1524   00048C  5812               	subwfb	(get_color_distance@color1+11)^0,w,c
  1525   00048E  B0D8               	btfsc	status,0,c
  1526   000490  EF4C  F002         	goto	u971
  1527   000494  EF4E  F002         	goto	u970
  1528   000498                     u971:
  1529   000498  EF5C  F002         	goto	l1836
  1530   00049C                     u970:
  1531   00049C  500F               	movf	(get_color_distance@color1+8)^0,w,c
  1532   00049E  5C1B               	subwf	(get_color_distance@color2+8)^0,w,c
  1533   0004A0  6E2B               	movwf	_get_color_distance$420^0,c
  1534   0004A2  5010               	movf	(get_color_distance@color1+9)^0,w,c
  1535   0004A4  581C               	subwfb	(get_color_distance@color2+9)^0,w,c
  1536   0004A6  6E2C               	movwf	(_get_color_distance$420+1)^0,c
  1537   0004A8  5011               	movf	(get_color_distance@color1+10)^0,w,c
  1538   0004AA  581D               	subwfb	(get_color_distance@color2+10)^0,w,c
  1539   0004AC  6E2D               	movwf	(_get_color_distance$420+2)^0,c
  1540   0004AE  5012               	movf	(get_color_distance@color1+11)^0,w,c
  1541   0004B0  581E               	subwfb	(get_color_distance@color2+11)^0,w,c
  1542   0004B2  6E2E               	movwf	(_get_color_distance$420+3)^0,c
  1543   0004B4  EF68  F002         	goto	l1838
  1544   0004B8                     l1836:
  1545   0004B8  501B               	movf	(get_color_distance@color2+8)^0,w,c
  1546   0004BA  5C0F               	subwf	(get_color_distance@color1+8)^0,w,c
  1547   0004BC  6E2B               	movwf	_get_color_distance$420^0,c
  1548   0004BE  501C               	movf	(get_color_distance@color2+9)^0,w,c
  1549   0004C0  5810               	subwfb	(get_color_distance@color1+9)^0,w,c
  1550   0004C2  6E2C               	movwf	(_get_color_distance$420+1)^0,c
  1551   0004C4  501D               	movf	(get_color_distance@color2+10)^0,w,c
  1552   0004C6  5811               	subwfb	(get_color_distance@color1+10)^0,w,c
  1553   0004C8  6E2D               	movwf	(_get_color_distance$420+2)^0,c
  1554   0004CA  501E               	movf	(get_color_distance@color2+11)^0,w,c
  1555   0004CC  5812               	subwfb	(get_color_distance@color1+11)^0,w,c
  1556   0004CE  6E2E               	movwf	(_get_color_distance$420+3)^0,c
  1557   0004D0                     l1838:
  1558   0004D0  C02B  F033         	movff	_get_color_distance$420,get_color_distance@B_offset
  1559   0004D4  C02C  F034         	movff	_get_color_distance$420+1,get_color_distance@B_offset+1
  1560   0004D8                     
  1561                           ;color.c: 149:     return R_offset*R_offset + G_offset*G_offset + B_offset*B_offset;
  1562   0004D8  C02F  F001         	movff	get_color_distance@R_offset,___wmul@multiplier
  1563   0004DC  C030  F002         	movff	get_color_distance@R_offset+1,___wmul@multiplier+1
  1564   0004E0  C02F  F003         	movff	get_color_distance@R_offset,___wmul@multiplicand
  1565   0004E4  C030  F004         	movff	get_color_distance@R_offset+1,___wmul@multiplicand+1
  1566   0004E8  EC4F  F006         	call	___wmul	;wreg free
  1567   0004EC  C001  F01F         	movff	?___wmul,??_get_color_distance
  1568   0004F0  C002  F020         	movff	?___wmul+1,??_get_color_distance+1
  1569   0004F4  C031  F001         	movff	get_color_distance@G_offset,___wmul@multiplier
  1570   0004F8  C032  F002         	movff	get_color_distance@G_offset+1,___wmul@multiplier+1
  1571   0004FC  C031  F003         	movff	get_color_distance@G_offset,___wmul@multiplicand
  1572   000500  C032  F004         	movff	get_color_distance@G_offset+1,___wmul@multiplicand+1
  1573   000504  EC4F  F006         	call	___wmul	;wreg free
  1574   000508  5001               	movf	?___wmul^0,w,c
  1575   00050A  241F               	addwf	??_get_color_distance^0,w,c
  1576   00050C  6E21               	movwf	(??_get_color_distance+2)^0,c
  1577   00050E  5002               	movf	(?___wmul+1)^0,w,c
  1578   000510  2020               	addwfc	(??_get_color_distance+1)^0,w,c
  1579   000512  6E22               	movwf	(??_get_color_distance+3)^0,c
  1580   000514  C033  F001         	movff	get_color_distance@B_offset,___wmul@multiplier
  1581   000518  C034  F002         	movff	get_color_distance@B_offset+1,___wmul@multiplier+1
  1582   00051C  C033  F003         	movff	get_color_distance@B_offset,___wmul@multiplicand
  1583   000520  C034  F004         	movff	get_color_distance@B_offset+1,___wmul@multiplicand+1
  1584   000524  EC4F  F006         	call	___wmul	;wreg free
  1585   000528  5001               	movf	?___wmul^0,w,c
  1586   00052A  2421               	addwf	(??_get_color_distance+2)^0,w,c
  1587   00052C  6E07               	movwf	?_get_color_distance^0,c
  1588   00052E  5002               	movf	(?___wmul+1)^0,w,c
  1589   000530  2022               	addwfc	(??_get_color_distance+3)^0,w,c
  1590   000532  6E08               	movwf	(?_get_color_distance+1)^0,c
  1591   000534  0012               	return		;funcret
  1592   000536                     __end_of_get_color_distance:
  1593                           	callstack 0
  1594                           
  1595 ;; *************** function ___wmul *****************
  1596 ;; Defined at:
  1597 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  multiplier      2    0[COMRAM] unsigned int 
  1600 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  product         2    4[COMRAM] unsigned int 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  2    0[COMRAM] unsigned int 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0, prodl, prodh
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1613 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1615 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1616 ;;Total ram usage:        6 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; Hardware stack levels required when called: 2
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_get_color_distance
  1623 ;;		_get_color_code
  1624 ;;		_setMotorPWM
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text5
  1629   000C9E                     __ptext5:
  1630                           	callstack 0
  1631   000C9E                     ___wmul:
  1632                           	callstack 26
  1633   000C9E  5001               	movf	___wmul@multiplier^0,w,c
  1634   000CA0  0203               	mulwf	___wmul@multiplicand^0,c
  1635   000CA2  CFF3 F005          	movff	prodl,___wmul@product
  1636   000CA6  CFF4 F006          	movff	prodh,___wmul@product+1
  1637   000CAA  5001               	movf	___wmul@multiplier^0,w,c
  1638   000CAC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1639   000CAE  50F3               	movf	243,w,c
  1640   000CB0  2606               	addwf	(___wmul@product+1)^0,f,c
  1641   000CB2  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1642   000CB4  0203               	mulwf	___wmul@multiplicand^0,c
  1643   000CB6  50F3               	movf	243,w,c
  1644   000CB8  2606               	addwf	(___wmul@product+1)^0,f,c
  1645   000CBA  C005  F001         	movff	___wmul@product,?___wmul
  1646   000CBE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1647   000CC2  0012               	return		;funcret
  1648   000CC4                     __end_of___wmul:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function ___lmul *****************
  1652 ;; Defined at:
  1653 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  multiplier      4    0[COMRAM] unsigned long 
  1656 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  product         4    8[COMRAM] unsigned long 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  4    0[COMRAM] unsigned long 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1668 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1669 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1671 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1672 ;;Total ram usage:       12 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 2
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_get_color_code
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text6
  1683   00096E                     __ptext6:
  1684                           	callstack 0
  1685   00096E                     ___lmul:
  1686                           	callstack 27
  1687   00096E  0E00               	movlw	0
  1688   000970  6E09               	movwf	___lmul@product^0,c
  1689   000972  0E00               	movlw	0
  1690   000974  6E0A               	movwf	(___lmul@product+1)^0,c
  1691   000976  0E00               	movlw	0
  1692   000978  6E0B               	movwf	(___lmul@product+2)^0,c
  1693   00097A  0E00               	movlw	0
  1694   00097C  6E0C               	movwf	(___lmul@product+3)^0,c
  1695   00097E                     l1846:
  1696   00097E  A001               	btfss	___lmul@multiplier^0,0,c
  1697   000980  EFC4  F004         	goto	u981
  1698   000984  EFC6  F004         	goto	u980
  1699   000988                     u981:
  1700   000988  EFCE  F004         	goto	l1850
  1701   00098C                     u980:
  1702   00098C  5005               	movf	___lmul@multiplicand^0,w,c
  1703   00098E  2609               	addwf	___lmul@product^0,f,c
  1704   000990  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1705   000992  220A               	addwfc	(___lmul@product+1)^0,f,c
  1706   000994  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1707   000996  220B               	addwfc	(___lmul@product+2)^0,f,c
  1708   000998  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1709   00099A  220C               	addwfc	(___lmul@product+3)^0,f,c
  1710   00099C                     l1850:
  1711   00099C  90D8               	bcf	status,0,c
  1712   00099E  3605               	rlcf	___lmul@multiplicand^0,f,c
  1713   0009A0  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1714   0009A2  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1715   0009A4  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1716   0009A6  90D8               	bcf	status,0,c
  1717   0009A8  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1718   0009AA  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1719   0009AC  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1720   0009AE  3201               	rrcf	___lmul@multiplier^0,f,c
  1721   0009B0  5001               	movf	___lmul@multiplier^0,w,c
  1722   0009B2  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1723   0009B4  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1724   0009B6  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1725   0009B8  A4D8               	btfss	status,2,c
  1726   0009BA  EFE1  F004         	goto	u991
  1727   0009BE  EFE3  F004         	goto	u990
  1728   0009C2                     u991:
  1729   0009C2  EFBF  F004         	goto	l1846
  1730   0009C6                     u990:
  1731   0009C6  C009  F001         	movff	___lmul@product,?___lmul
  1732   0009CA  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1733   0009CE  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1734   0009D2  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1735   0009D6  0012               	return		;funcret
  1736   0009D8                     __end_of___lmul:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function ___lldiv *****************
  1740 ;; Defined at:
  1741 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  dividend        4   12[COMRAM] unsigned long 
  1744 ;;  divisor         4   16[COMRAM] unsigned long 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  quotient        4   20[COMRAM] unsigned long 
  1747 ;;  counter         1   24[COMRAM] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  4   12[COMRAM] unsigned long 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1757 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1758 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1760 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1761 ;;Total ram usage:       13 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 2
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_get_color_code
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text7
  1772   000718                     __ptext7:
  1773                           	callstack 0
  1774   000718                     ___lldiv:
  1775                           	callstack 27
  1776   000718  0E00               	movlw	0
  1777   00071A  6E15               	movwf	___lldiv@quotient^0,c
  1778   00071C  0E00               	movlw	0
  1779   00071E  6E16               	movwf	(___lldiv@quotient+1)^0,c
  1780   000720  0E00               	movlw	0
  1781   000722  6E17               	movwf	(___lldiv@quotient+2)^0,c
  1782   000724  0E00               	movlw	0
  1783   000726  6E18               	movwf	(___lldiv@quotient+3)^0,c
  1784   000728  5011               	movf	___lldiv@divisor^0,w,c
  1785   00072A  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  1786   00072C  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  1787   00072E  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  1788   000730  B4D8               	btfsc	status,2,c
  1789   000732  EF9D  F003         	goto	u1001
  1790   000736  EF9F  F003         	goto	u1000
  1791   00073A                     u1001:
  1792   00073A  EFD5  F003         	goto	l372
  1793   00073E                     u1000:
  1794   00073E  0E01               	movlw	1
  1795   000740  6E19               	movwf	___lldiv@counter^0,c
  1796   000742  EFA9  F003         	goto	l1862
  1797   000746                     l1860:
  1798   000746  90D8               	bcf	status,0,c
  1799   000748  3611               	rlcf	___lldiv@divisor^0,f,c
  1800   00074A  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  1801   00074C  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  1802   00074E  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  1803   000750  2A19               	incf	___lldiv@counter^0,f,c
  1804   000752                     l1862:
  1805   000752  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  1806   000754  EFAE  F003         	goto	u1011
  1807   000758  EFB0  F003         	goto	u1010
  1808   00075C                     u1011:
  1809   00075C  EFA3  F003         	goto	l1860
  1810   000760                     u1010:
  1811   000760                     l1864:
  1812   000760  90D8               	bcf	status,0,c
  1813   000762  3615               	rlcf	___lldiv@quotient^0,f,c
  1814   000764  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  1815   000766  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  1816   000768  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  1817   00076A  5011               	movf	___lldiv@divisor^0,w,c
  1818   00076C  5C0D               	subwf	___lldiv@dividend^0,w,c
  1819   00076E  5012               	movf	(___lldiv@divisor+1)^0,w,c
  1820   000770  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  1821   000772  5013               	movf	(___lldiv@divisor+2)^0,w,c
  1822   000774  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  1823   000776  5014               	movf	(___lldiv@divisor+3)^0,w,c
  1824   000778  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  1825   00077A  A0D8               	btfss	status,0,c
  1826   00077C  EFC2  F003         	goto	u1021
  1827   000780  EFC4  F003         	goto	u1020
  1828   000784                     u1021:
  1829   000784  EFCD  F003         	goto	l1872
  1830   000788                     u1020:
  1831   000788  5011               	movf	___lldiv@divisor^0,w,c
  1832   00078A  5E0D               	subwf	___lldiv@dividend^0,f,c
  1833   00078C  5012               	movf	(___lldiv@divisor+1)^0,w,c
  1834   00078E  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  1835   000790  5013               	movf	(___lldiv@divisor+2)^0,w,c
  1836   000792  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  1837   000794  5014               	movf	(___lldiv@divisor+3)^0,w,c
  1838   000796  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  1839   000798  8015               	bsf	___lldiv@quotient^0,0,c
  1840   00079A                     l1872:
  1841   00079A  90D8               	bcf	status,0,c
  1842   00079C  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  1843   00079E  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  1844   0007A0  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  1845   0007A2  3211               	rrcf	___lldiv@divisor^0,f,c
  1846   0007A4  2E19               	decfsz	___lldiv@counter^0,f,c
  1847   0007A6  EFB0  F003         	goto	l1864
  1848   0007AA                     l372:
  1849   0007AA  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  1850   0007AE  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  1851   0007B2  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  1852   0007B6  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  1853   0007BA  0012               	return		;funcret
  1854   0007BC                     __end_of___lldiv:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _color_click_init *****************
  1858 ;; Defined at:
  1859 ;;		line 28 in file "color.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;Total ram usage:        1 bytes
  1878 ;; Hardware stack levels used: 1
  1879 ;; Hardware stack levels required when called: 6
  1880 ;; This function calls:
  1881 ;;		_I2C_2_Master_Init
  1882 ;;		_calibrate_black
  1883 ;;		_calibrate_white
  1884 ;;		_color_writetoaddr
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text8
  1891   000536                     __ptext8:
  1892                           	callstack 0
  1893   000536                     _color_click_init:
  1894                           	callstack 24
  1895   000536                     
  1896                           ;color.c: 31:     I2C_2_Master_Init();
  1897   000536  EC26  F006         	call	_I2C_2_Master_Init	;wreg free
  1898   00053A                     
  1899                           ;color.c: 34:   color_writetoaddr(0x00, 0x01);
  1900   00053A  0E01               	movlw	1
  1901   00053C  6E03               	movwf	color_writetoaddr@value^0,c
  1902   00053E  0E00               	movlw	0
  1903   000540  EC62  F006         	call	_color_writetoaddr
  1904   000544                     
  1905                           ;color.c: 35:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1906   000544  0E3F               	movlw	63
  1907   000546  6E0E               	movwf	??_color_click_init^0,c
  1908   000548  0E55               	movlw	85
  1909   00054A                     u1797:
  1910   00054A  2EE8               	decfsz	wreg,f,c
  1911   00054C  D7FE               	bra	u1797
  1912   00054E  2E0E               	decfsz	??_color_click_init^0,f,c
  1913   000550  D7FC               	bra	u1797
  1914   000552  F000               	nop	
  1915   000554                     
  1916                           ;color.c: 38:  color_writetoaddr(0x00, 0x03);
  1917   000554  0E03               	movlw	3
  1918   000556  6E03               	movwf	color_writetoaddr@value^0,c
  1919   000558  0E00               	movlw	0
  1920   00055A  EC62  F006         	call	_color_writetoaddr
  1921   00055E                     
  1922                           ;color.c: 41:  color_writetoaddr(0x01, 0xD5);
  1923   00055E  0ED5               	movlw	213
  1924   000560  6E03               	movwf	color_writetoaddr@value^0,c
  1925   000562  0E01               	movlw	1
  1926   000564  EC62  F006         	call	_color_writetoaddr
  1927   000568                     
  1928                           ;color.c: 43:     TRISFbits.TRISF7 = 0;
  1929   000568  9E86               	bcf	134,7,c	;volatile
  1930   00056A                     
  1931                           ;color.c: 44:     TRISGbits.TRISG1 = 0;
  1932   00056A  9287               	bcf	135,1,c	;volatile
  1933   00056C                     
  1934                           ;color.c: 45:     TRISAbits.TRISA4 = 0;
  1935   00056C  9881               	bcf	129,4,c	;volatile
  1936   00056E                     
  1937                           ;color.c: 47:     Color_rules[0] = Red_rule;
  1938   00056E  EE20  F0C0         	lfsr	2,_Red_rule
  1939   000572  EE11  F000         	lfsr	1,_Color_rules
  1940   000576  0E0B               	movlw	11
  1941   000578                     u1031:
  1942   000578  CFDB FFE3          	movff	plusw2,plusw1
  1943   00057C  06E8               	decf	wreg,f,c
  1944   00057E  E2FC               	bc	u1031
  1945   000580                     
  1946                           ;color.c: 48:     Color_rules[1] = Green_rule;
  1947   000580  EE20  F0B4         	lfsr	2,_Green_rule
  1948   000584  EE11  F00C         	lfsr	1,_Color_rules+12
  1949   000588  0E0B               	movlw	11
  1950   00058A                     u1041:
  1951   00058A  CFDB FFE3          	movff	plusw2,plusw1
  1952   00058E  06E8               	decf	wreg,f,c
  1953   000590  E2FC               	bc	u1041
  1954   000592                     
  1955                           ;color.c: 49:     Color_rules[2] = Blue_rule;
  1956   000592  EE20  F0A8         	lfsr	2,_Blue_rule
  1957   000596  EE11  F018         	lfsr	1,_Color_rules+24
  1958   00059A  0E0B               	movlw	11
  1959   00059C                     u1051:
  1960   00059C  CFDB FFE3          	movff	plusw2,plusw1
  1961   0005A0  06E8               	decf	wreg,f,c
  1962   0005A2  E2FC               	bc	u1051
  1963   0005A4                     
  1964                           ;color.c: 50:     Color_rules[3] = Yellow_rule;
  1965   0005A4  EE20  F09C         	lfsr	2,_Yellow_rule
  1966   0005A8  EE11  F024         	lfsr	1,_Color_rules+36
  1967   0005AC  0E0B               	movlw	11
  1968   0005AE                     u1061:
  1969   0005AE  CFDB FFE3          	movff	plusw2,plusw1
  1970   0005B2  06E8               	decf	wreg,f,c
  1971   0005B4  E2FC               	bc	u1061
  1972   0005B6                     
  1973                           ;color.c: 51:     Color_rules[4] = Pink_rule;
  1974   0005B6  EE20  F090         	lfsr	2,_Pink_rule
  1975   0005BA  EE11  F030         	lfsr	1,_Color_rules+48
  1976   0005BE  0E0B               	movlw	11
  1977   0005C0                     u1071:
  1978   0005C0  CFDB FFE3          	movff	plusw2,plusw1
  1979   0005C4  06E8               	decf	wreg,f,c
  1980   0005C6  E2FC               	bc	u1071
  1981   0005C8                     
  1982                           ;color.c: 52:     Color_rules[5] = Orange_rule;
  1983   0005C8  EE20  F084         	lfsr	2,_Orange_rule
  1984   0005CC  EE11  F03C         	lfsr	1,_Color_rules+60
  1985   0005D0  0E0B               	movlw	11
  1986   0005D2                     u1081:
  1987   0005D2  CFDB FFE3          	movff	plusw2,plusw1
  1988   0005D6  06E8               	decf	wreg,f,c
  1989   0005D8  E2FC               	bc	u1081
  1990   0005DA                     
  1991                           ;color.c: 53:     Color_rules[6] = Lightblue_rule;
  1992   0005DA  EE20  F078         	lfsr	2,_Lightblue_rule
  1993   0005DE  EE11  F048         	lfsr	1,_Color_rules+72
  1994   0005E2  0E0B               	movlw	11
  1995   0005E4                     u1091:
  1996   0005E4  CFDB FFE3          	movff	plusw2,plusw1
  1997   0005E8  06E8               	decf	wreg,f,c
  1998   0005EA  E2FC               	bc	u1091
  1999   0005EC                     
  2000                           ;color.c: 54:     Color_rules[7] = White_rule;
  2001   0005EC  EE20  F06C         	lfsr	2,_White_rule
  2002   0005F0  EE11  F054         	lfsr	1,_Color_rules+84
  2003   0005F4  0E0B               	movlw	11
  2004   0005F6                     u1101:
  2005   0005F6  CFDB FFE3          	movff	plusw2,plusw1
  2006   0005FA  06E8               	decf	wreg,f,c
  2007   0005FC  E2FC               	bc	u1101
  2008   0005FE                     
  2009                           ;color.c: 55:     Color_rules[8] = Black_rule;
  2010   0005FE  EE21  F06C         	lfsr	2,_Black_rule
  2011   000602  EE11  F060         	lfsr	1,_Color_rules+96
  2012   000606  0E0B               	movlw	11
  2013   000608                     u1111:
  2014   000608  CFDB FFE3          	movff	plusw2,plusw1
  2015   00060C  06E8               	decf	wreg,f,c
  2016   00060E  E2FC               	bc	u1111
  2017   000610                     
  2018                           ;color.c: 64:     TRISFbits.TRISF3=1;
  2019   000610  8686               	bsf	134,3,c	;volatile
  2020   000612                     
  2021                           ;color.c: 65:     ANSELFbits.ANSELF3=0;
  2022   000612  010E               	movlb	14	; () banked
  2023   000614  97B4               	bcf	180,3,b	;volatile
  2024   000616                     
  2025                           ; BSR set to: 14
  2026                           ;color.c: 66:     TRISFbits.TRISF2=1;
  2027   000616  8486               	bsf	134,2,c	;volatile
  2028   000618                     
  2029                           ; BSR set to: 14
  2030                           ;color.c: 67:     ANSELFbits.ANSELF2=0;
  2031   000618  95B4               	bcf	180,2,b	;volatile
  2032   00061A                     l65:
  2033   00061A  A68E               	btfss	142,3,c	;volatile
  2034   00061C  EF12  F003         	goto	u1121
  2035   000620  EF14  F003         	goto	u1120
  2036   000624                     u1121:
  2037   000624  EF1B  F003         	goto	l69
  2038   000628                     u1120:
  2039   000628  B48E               	btfsc	142,2,c	;volatile
  2040   00062A  EF19  F003         	goto	u1131
  2041   00062E  EF1B  F003         	goto	u1130
  2042   000632                     u1131:
  2043   000632  EF0D  F003         	goto	l65
  2044   000636                     u1130:
  2045   000636                     l69:
  2046                           
  2047                           ;color.c: 70:     if(!PORTFbits.RF2){
  2048   000636  B48E               	btfsc	142,2,c	;volatile
  2049   000638  EF20  F003         	goto	u1141
  2050   00063C  EF22  F003         	goto	u1140
  2051   000640                     u1141:
  2052   000640  EF24  F003         	goto	l1922
  2053   000644                     u1140:
  2054   000644  EF36  F003         	goto	l71
  2055   000648                     l1922:
  2056                           
  2057                           ;color.c: 73:     calibrate_white();
  2058   000648  EC37  F003         	call	_calibrate_white	;wreg free
  2059   00064C                     l72:
  2060   00064C  B68E               	btfsc	142,3,c	;volatile
  2061   00064E  EF2B  F003         	goto	u1151
  2062   000652  EF2D  F003         	goto	u1150
  2063   000656                     u1151:
  2064   000656  EF26  F003         	goto	l72
  2065   00065A                     u1150:
  2066   00065A                     
  2067                           ;color.c: 75:     calibrate_black();
  2068   00065A  ECDE  F003         	call	_calibrate_black	;wreg free
  2069   00065E                     l75:
  2070   00065E  B68E               	btfsc	142,3,c	;volatile
  2071   000660  EF34  F003         	goto	u1161
  2072   000664  EF36  F003         	goto	u1160
  2073   000668                     u1161:
  2074   000668  EF2F  F003         	goto	l75
  2075   00066C                     u1160:
  2076   00066C                     l71:
  2077   00066C  0012               	return		;funcret
  2078   00066E                     __end_of_color_click_init:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _color_writetoaddr *****************
  2082 ;; Defined at:
  2083 ;;		line 80 in file "color.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  address         1    wreg     unsigned char 
  2086 ;;  value           1    2[COMRAM] unsigned char 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  address         1    3[COMRAM] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2098 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2101 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2102 ;;Total ram usage:        2 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 4
  2105 ;; This function calls:
  2106 ;;		_I2C_2_Master_Start
  2107 ;;		_I2C_2_Master_Stop
  2108 ;;		_I2C_2_Master_Write
  2109 ;; This function is called by:
  2110 ;;		_color_click_init
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text9
  2115   000CC4                     __ptext9:
  2116                           	callstack 0
  2117   000CC4                     _color_writetoaddr:
  2118                           	callstack 25
  2119                           
  2120                           ;incstack = 0
  2121                           ;color_writetoaddr@address stored from wreg
  2122   000CC4  6E04               	movwf	color_writetoaddr@address^0,c
  2123   000CC6                     
  2124                           ;color.c: 81:     I2C_2_Master_Start();
  2125   000CC6  EC9A  F006         	call	_I2C_2_Master_Start	;wreg free
  2126                           
  2127                           ;color.c: 82:     I2C_2_Master_Write(0x52 | 0x00);
  2128   000CCA  0E52               	movlw	82
  2129   000CCC  EC89  F006         	call	_I2C_2_Master_Write
  2130                           
  2131                           ;color.c: 83:     I2C_2_Master_Write(0x80 | address);
  2132   000CD0  5004               	movf	color_writetoaddr@address^0,w,c
  2133   000CD2  0980               	iorlw	128
  2134   000CD4  EC89  F006         	call	_I2C_2_Master_Write
  2135                           
  2136                           ;color.c: 84:     I2C_2_Master_Write(value);
  2137   000CD8  5003               	movf	color_writetoaddr@value^0,w,c
  2138   000CDA  EC89  F006         	call	_I2C_2_Master_Write
  2139                           
  2140                           ;color.c: 85:     I2C_2_Master_Stop();
  2141   000CDE  EC95  F006         	call	_I2C_2_Master_Stop	;wreg free
  2142   000CE2  0012               	return		;funcret
  2143   000CE4                     __end_of_color_writetoaddr:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function _calibrate_white *****************
  2147 ;; Defined at:
  2148 ;;		line 220 in file "color.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2166 ;;Total ram usage:        2 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 5
  2169 ;; This function calls:
  2170 ;;		_color_read_Blue
  2171 ;;		_color_read_Green
  2172 ;;		_color_read_Red
  2173 ;;		_set_led_color
  2174 ;; This function is called by:
  2175 ;;		_color_click_init
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text10
  2180   00066E                     __ptext10:
  2181                           	callstack 0
  2182   00066E                     _calibrate_white:
  2183                           	callstack 24
  2184   00066E                     
  2185                           ;color.c: 221:     set_led_color(0b100);
  2186   00066E  0E00               	movlw	0
  2187   000670  6E02               	movwf	(set_led_color@color+1)^0,c
  2188   000672  0E04               	movlw	4
  2189   000674  6E01               	movwf	set_led_color@color^0,c
  2190   000676  ECE3  F005         	call	_set_led_color	;wreg free
  2191   00067A                     
  2192                           ;color.c: 222:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  2193   00067A  0E12               	movlw	18
  2194   00067C  6E0D               	movwf	(??_calibrate_white+1)^0,c
  2195   00067E  0EDC               	movlw	220
  2196   000680  6E0C               	movwf	??_calibrate_white^0,c
  2197   000682  0E60               	movlw	96
  2198   000684                     u1807:
  2199   000684  2EE8               	decfsz	wreg,f,c
  2200   000686  D7FE               	bra	u1807
  2201   000688  2E0C               	decfsz	??_calibrate_white^0,f,c
  2202   00068A  D7FC               	bra	u1807
  2203   00068C  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  2204   00068E  D7FA               	bra	u1807
  2205   000690                     
  2206                           ;color.c: 223:     White_setup.R = color_read_Red();
  2207   000690  EC45  F005         	call	_color_read_Red	;wreg free
  2208   000694  C005  F060         	movff	?_color_read_Red,_White_setup
  2209   000698  C006  F061         	movff	?_color_read_Red+1,_White_setup+1
  2210   00069C  0100               	movlb	0	; () banked
  2211   00069E  6B62               	clrf	(_White_setup+2)& (0+255),b
  2212   0006A0  6B63               	clrf	(_White_setup+3)& (0+255),b
  2213   0006A2                     
  2214                           ; BSR set to: 0
  2215                           ;color.c: 224:     set_led_color(0b010);
  2216   0006A2  0E00               	movlw	0
  2217   0006A4  6E02               	movwf	(set_led_color@color+1)^0,c
  2218   0006A6  0E02               	movlw	2
  2219   0006A8  6E01               	movwf	set_led_color@color^0,c
  2220   0006AA  ECE3  F005         	call	_set_led_color	;wreg free
  2221   0006AE                     
  2222                           ;color.c: 225:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  2223   0006AE  0E12               	movlw	18
  2224   0006B0  6E0D               	movwf	(??_calibrate_white+1)^0,c
  2225   0006B2  0EDC               	movlw	220
  2226   0006B4  6E0C               	movwf	??_calibrate_white^0,c
  2227   0006B6  0E60               	movlw	96
  2228   0006B8                     u1817:
  2229   0006B8  2EE8               	decfsz	wreg,f,c
  2230   0006BA  D7FE               	bra	u1817
  2231   0006BC  2E0C               	decfsz	??_calibrate_white^0,f,c
  2232   0006BE  D7FC               	bra	u1817
  2233   0006C0  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  2234   0006C2  D7FA               	bra	u1817
  2235                           
  2236                           ;color.c: 226:     White_setup.G = color_read_Green();
  2237   0006C4  EC6D  F005         	call	_color_read_Green	;wreg free
  2238   0006C8  C005  F064         	movff	?_color_read_Green,_White_setup+4
  2239   0006CC  C006  F065         	movff	?_color_read_Green+1,_White_setup+5
  2240   0006D0  0100               	movlb	0	; () banked
  2241   0006D2  6B66               	clrf	(_White_setup+6)& (0+255),b
  2242   0006D4  6B67               	clrf	(_White_setup+7)& (0+255),b
  2243   0006D6                     
  2244                           ; BSR set to: 0
  2245                           ;color.c: 227:     set_led_color(0b001);
  2246   0006D6  0E00               	movlw	0
  2247   0006D8  6E02               	movwf	(set_led_color@color+1)^0,c
  2248   0006DA  0E01               	movlw	1
  2249   0006DC  6E01               	movwf	set_led_color@color^0,c
  2250   0006DE  ECE3  F005         	call	_set_led_color	;wreg free
  2251   0006E2                     
  2252                           ;color.c: 228:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  2253   0006E2  0E12               	movlw	18
  2254   0006E4  6E0D               	movwf	(??_calibrate_white+1)^0,c
  2255   0006E6  0EDC               	movlw	220
  2256   0006E8  6E0C               	movwf	??_calibrate_white^0,c
  2257   0006EA  0E60               	movlw	96
  2258   0006EC                     u1827:
  2259   0006EC  2EE8               	decfsz	wreg,f,c
  2260   0006EE  D7FE               	bra	u1827
  2261   0006F0  2E0C               	decfsz	??_calibrate_white^0,f,c
  2262   0006F2  D7FC               	bra	u1827
  2263   0006F4  2E0D               	decfsz	(??_calibrate_white+1)^0,f,c
  2264   0006F6  D7FA               	bra	u1827
  2265   0006F8                     
  2266                           ;color.c: 229:     White_setup.B = color_read_Blue();
  2267   0006F8  EC95  F005         	call	_color_read_Blue	;wreg free
  2268   0006FC  C005  F068         	movff	?_color_read_Blue,_White_setup+8
  2269   000700  C006  F069         	movff	?_color_read_Blue+1,_White_setup+9
  2270   000704  0100               	movlb	0	; () banked
  2271   000706  6B6A               	clrf	(_White_setup+10)& (0+255),b
  2272   000708  6B6B               	clrf	(_White_setup+11)& (0+255),b
  2273   00070A                     
  2274                           ; BSR set to: 0
  2275                           ;color.c: 230:     set_led_color(0b000);
  2276   00070A  0E00               	movlw	0
  2277   00070C  6E02               	movwf	(set_led_color@color+1)^0,c
  2278   00070E  0E00               	movlw	0
  2279   000710  6E01               	movwf	set_led_color@color^0,c
  2280   000712  ECE3  F005         	call	_set_led_color	;wreg free
  2281   000716  0012               	return		;funcret
  2282   000718                     __end_of_calibrate_white:
  2283                           	callstack 0
  2284                           
  2285 ;; *************** function _calibrate_black *****************
  2286 ;; Defined at:
  2287 ;;		line 207 in file "color.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;Total ram usage:        2 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 5
  2308 ;; This function calls:
  2309 ;;		_color_read_Blue
  2310 ;;		_color_read_Green
  2311 ;;		_color_read_Red
  2312 ;;		_set_led_color
  2313 ;; This function is called by:
  2314 ;;		_color_click_init
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text11
  2319   0007BC                     __ptext11:
  2320                           	callstack 0
  2321   0007BC                     _calibrate_black:
  2322                           	callstack 24
  2323   0007BC                     
  2324                           ;color.c: 208:     set_led_color(0b100);
  2325   0007BC  0E00               	movlw	0
  2326   0007BE  6E02               	movwf	(set_led_color@color+1)^0,c
  2327   0007C0  0E04               	movlw	4
  2328   0007C2  6E01               	movwf	set_led_color@color^0,c
  2329   0007C4  ECE3  F005         	call	_set_led_color	;wreg free
  2330   0007C8                     
  2331                           ;color.c: 209:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  2332   0007C8  0E12               	movlw	18
  2333   0007CA  6E0D               	movwf	(??_calibrate_black+1)^0,c
  2334   0007CC  0EDC               	movlw	220
  2335   0007CE  6E0C               	movwf	??_calibrate_black^0,c
  2336   0007D0  0E60               	movlw	96
  2337   0007D2                     u1837:
  2338   0007D2  2EE8               	decfsz	wreg,f,c
  2339   0007D4  D7FE               	bra	u1837
  2340   0007D6  2E0C               	decfsz	??_calibrate_black^0,f,c
  2341   0007D8  D7FC               	bra	u1837
  2342   0007DA  2E0D               	decfsz	(??_calibrate_black+1)^0,f,c
  2343   0007DC  D7FA               	bra	u1837
  2344   0007DE                     
  2345                           ;color.c: 210:     Black_setup.R = color_read_Red();
  2346   0007DE  EC45  F005         	call	_color_read_Red	;wreg free
  2347   0007E2  C005  F04B         	movff	?_color_read_Red,_Black_setup
  2348   0007E6  C006  F04C         	movff	?_color_read_Red+1,_Black_setup+1
  2349   0007EA  6A4D               	clrf	(_Black_setup+2)^0,c
  2350   0007EC  6A4E               	clrf	(_Black_setup+3)^0,c
  2351   0007EE                     
  2352                           ;color.c: 211:     set_led_color(0b010);
  2353   0007EE  0E00               	movlw	0
  2354   0007F0  6E02               	movwf	(set_led_color@color+1)^0,c
  2355   0007F2  0E02               	movlw	2
  2356   0007F4  6E01               	movwf	set_led_color@color^0,c
  2357   0007F6  ECE3  F005         	call	_set_led_color	;wreg free
  2358   0007FA                     
  2359                           ;color.c: 212:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  2360   0007FA  0E12               	movlw	18
  2361   0007FC  6E0D               	movwf	(??_calibrate_black+1)^0,c
  2362   0007FE  0EDC               	movlw	220
  2363   000800  6E0C               	movwf	??_calibrate_black^0,c
  2364   000802  0E60               	movlw	96
  2365   000804                     u1847:
  2366   000804  2EE8               	decfsz	wreg,f,c
  2367   000806  D7FE               	bra	u1847
  2368   000808  2E0C               	decfsz	??_calibrate_black^0,f,c
  2369   00080A  D7FC               	bra	u1847
  2370   00080C  2E0D               	decfsz	(??_calibrate_black+1)^0,f,c
  2371   00080E  D7FA               	bra	u1847
  2372                           
  2373                           ;color.c: 213:     Black_setup.G = color_read_Green();
  2374   000810  EC6D  F005         	call	_color_read_Green	;wreg free
  2375   000814  C005  F04F         	movff	?_color_read_Green,_Black_setup+4
  2376   000818  C006  F050         	movff	?_color_read_Green+1,_Black_setup+5
  2377   00081C  6A51               	clrf	(_Black_setup+6)^0,c
  2378   00081E  6A52               	clrf	(_Black_setup+7)^0,c
  2379   000820                     
  2380                           ;color.c: 214:     set_led_color(0b001);
  2381   000820  0E00               	movlw	0
  2382   000822  6E02               	movwf	(set_led_color@color+1)^0,c
  2383   000824  0E01               	movlw	1
  2384   000826  6E01               	movwf	set_led_color@color^0,c
  2385   000828  ECE3  F005         	call	_set_led_color	;wreg free
  2386   00082C                     
  2387                           ;color.c: 215:     _delay((unsigned long)((wait_time)*(64000000/4000.0)));
  2388   00082C  0E12               	movlw	18
  2389   00082E  6E0D               	movwf	(??_calibrate_black+1)^0,c
  2390   000830  0EDC               	movlw	220
  2391   000832  6E0C               	movwf	??_calibrate_black^0,c
  2392   000834  0E60               	movlw	96
  2393   000836                     u1857:
  2394   000836  2EE8               	decfsz	wreg,f,c
  2395   000838  D7FE               	bra	u1857
  2396   00083A  2E0C               	decfsz	??_calibrate_black^0,f,c
  2397   00083C  D7FC               	bra	u1857
  2398   00083E  2E0D               	decfsz	(??_calibrate_black+1)^0,f,c
  2399   000840  D7FA               	bra	u1857
  2400   000842                     
  2401                           ;color.c: 216:     Black_setup.B = color_read_Blue();
  2402   000842  EC95  F005         	call	_color_read_Blue	;wreg free
  2403   000846  C005  F053         	movff	?_color_read_Blue,_Black_setup+8
  2404   00084A  C006  F054         	movff	?_color_read_Blue+1,_Black_setup+9
  2405   00084E  6A55               	clrf	(_Black_setup+10)^0,c
  2406   000850  6A56               	clrf	(_Black_setup+11)^0,c
  2407   000852                     
  2408                           ;color.c: 217:     set_led_color(0b000);
  2409   000852  0E00               	movlw	0
  2410   000854  6E02               	movwf	(set_led_color@color+1)^0,c
  2411   000856  0E00               	movlw	0
  2412   000858  6E01               	movwf	set_led_color@color^0,c
  2413   00085A  ECE3  F005         	call	_set_led_color	;wreg free
  2414   00085E  0012               	return		;funcret
  2415   000860                     __end_of_calibrate_black:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _set_led_color *****************
  2419 ;; Defined at:
  2420 ;;		line 152 in file "color.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  color           2    0[COMRAM] unsigned int 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		None
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2438 ;;Total ram usage:        2 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 2
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_get_color_code
  2445 ;;		_calibrate_black
  2446 ;;		_calibrate_white
  2447 ;;		_get_wall_presence
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text12
  2452   000BC6                     __ptext12:
  2453                           	callstack 0
  2454   000BC6                     _set_led_color:
  2455                           	callstack 27
  2456   000BC6                     
  2457                           ;color.c: 156:     if(color & 0b100){
  2458   000BC6  A401               	btfss	set_led_color@color^0,2,c
  2459   000BC8  EFE8  F005         	goto	u921
  2460   000BCC  EFEA  F005         	goto	u920
  2461   000BD0                     u921:
  2462   000BD0  EFED  F005         	goto	l110
  2463   000BD4                     u920:
  2464   000BD4                     
  2465                           ;color.c: 157:         LATGbits.LATG1 = 1;
  2466   000BD4  827F               	bsf	127,1,c	;volatile
  2467                           
  2468                           ;color.c: 158:     }else{
  2469   000BD6  EFEE  F005         	goto	l111
  2470   000BDA                     l110:
  2471                           
  2472                           ;color.c: 159:         LATGbits.LATG1 = 0;
  2473   000BDA  927F               	bcf	127,1,c	;volatile
  2474   000BDC                     l111:
  2475                           
  2476                           ;color.c: 161:     if(color & 0b010){
  2477   000BDC  A201               	btfss	set_led_color@color^0,1,c
  2478   000BDE  EFF3  F005         	goto	u931
  2479   000BE2  EFF5  F005         	goto	u930
  2480   000BE6                     u931:
  2481   000BE6  EFF8  F005         	goto	l112
  2482   000BEA                     u930:
  2483   000BEA                     
  2484                           ;color.c: 162:         LATAbits.LATA4 = 1;
  2485   000BEA  8879               	bsf	121,4,c	;volatile
  2486                           
  2487                           ;color.c: 163:     }else{
  2488   000BEC  EFF9  F005         	goto	l113
  2489   000BF0                     l112:
  2490                           
  2491                           ;color.c: 164:         LATAbits.LATA4 = 0;
  2492   000BF0  9879               	bcf	121,4,c	;volatile
  2493   000BF2                     l113:
  2494                           
  2495                           ;color.c: 166:     if(color & 0b001){
  2496   000BF2  A001               	btfss	set_led_color@color^0,0,c
  2497   000BF4  EFFE  F005         	goto	u941
  2498   000BF8  EF00  F006         	goto	u940
  2499   000BFC                     u941:
  2500   000BFC  EF03  F006         	goto	l114
  2501   000C00                     u940:
  2502   000C00                     
  2503                           ;color.c: 167:         LATFbits.LATF7 = 1;
  2504   000C00  8E7E               	bsf	126,7,c	;volatile
  2505                           
  2506                           ;color.c: 168:     }else{
  2507   000C02  EF04  F006         	goto	l116
  2508   000C06                     l114:
  2509                           
  2510                           ;color.c: 169:         LATFbits.LATF7 = 0;
  2511   000C06  9E7E               	bcf	126,7,c	;volatile
  2512   000C08                     l116:
  2513   000C08  0012               	return		;funcret
  2514   000C0A                     __end_of_set_led_color:
  2515                           	callstack 0
  2516                           
  2517 ;; *************** function _color_read_Red *****************
  2518 ;; Defined at:
  2519 ;;		line 88 in file "color.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  tmp             2    9[COMRAM] unsigned int 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  2    4[COMRAM] unsigned int 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2535 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;Total ram usage:        7 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 4
  2540 ;; This function calls:
  2541 ;;		_I2C_2_Master_Read
  2542 ;;		_I2C_2_Master_RepStart
  2543 ;;		_I2C_2_Master_Start
  2544 ;;		_I2C_2_Master_Stop
  2545 ;;		_I2C_2_Master_Write
  2546 ;; This function is called by:
  2547 ;;		_get_color_code
  2548 ;;		_calibrate_black
  2549 ;;		_calibrate_white
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text13
  2554   000A8A                     __ptext13:
  2555                           	callstack 0
  2556   000A8A                     _color_read_Red:
  2557                           	callstack 25
  2558   000A8A                     
  2559                           ;color.c: 90:  unsigned int tmp;;color.c: 91:  I2C_2_Master_Start();
  2560   000A8A  EC9A  F006         	call	_I2C_2_Master_Start	;wreg free
  2561                           
  2562                           ;color.c: 92:  I2C_2_Master_Write(0x52 | 0x00);
  2563   000A8E  0E52               	movlw	82
  2564   000A90  EC89  F006         	call	_I2C_2_Master_Write
  2565                           
  2566                           ;color.c: 93:  I2C_2_Master_Write(0xA0 | 0x16);
  2567   000A94  0EB6               	movlw	182
  2568   000A96  EC89  F006         	call	_I2C_2_Master_Write
  2569                           
  2570                           ;color.c: 94:  I2C_2_Master_RepStart();
  2571   000A9A  EC9F  F006         	call	_I2C_2_Master_RepStart	;wreg free
  2572                           
  2573                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x01);
  2574   000A9E  0E53               	movlw	83
  2575   000AA0  EC89  F006         	call	_I2C_2_Master_Write
  2576                           
  2577                           ;color.c: 96:  tmp=I2C_2_Master_Read(1);
  2578   000AA4  0E01               	movlw	1
  2579   000AA6  EC05  F006         	call	_I2C_2_Master_Read
  2580   000AAA  6E07               	movwf	??_color_read_Red^0,c
  2581   000AAC  5007               	movf	??_color_read_Red^0,w,c
  2582   000AAE  6E0A               	movwf	color_read_Red@tmp^0,c
  2583   000AB0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2584                           
  2585                           ;color.c: 97:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2586   000AB2  0E00               	movlw	0
  2587   000AB4  EC05  F006         	call	_I2C_2_Master_Read
  2588   000AB8  6E07               	movwf	??_color_read_Red^0,c
  2589   000ABA  5007               	movf	??_color_read_Red^0,w,c
  2590   000ABC  6E09               	movwf	(??_color_read_Red+2)^0,c
  2591   000ABE  6A08               	clrf	(??_color_read_Red+1)^0,c
  2592   000AC0  500A               	movf	color_read_Red@tmp^0,w,c
  2593   000AC2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2594   000AC4  6E0A               	movwf	color_read_Red@tmp^0,c
  2595   000AC6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2596   000AC8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2597   000ACA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2598                           
  2599                           ;color.c: 98:  I2C_2_Master_Stop();
  2600   000ACC  EC95  F006         	call	_I2C_2_Master_Stop	;wreg free
  2601   000AD0                     
  2602                           ;color.c: 99:  return tmp;
  2603   000AD0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2604   000AD4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2605   000AD8  0012               	return		;funcret
  2606   000ADA                     __end_of_color_read_Red:
  2607                           	callstack 0
  2608                           
  2609 ;; *************** function _color_read_Green *****************
  2610 ;; Defined at:
  2611 ;;		line 116 in file "color.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  tmp             2    9[COMRAM] unsigned int 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  2    4[COMRAM] unsigned int 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;Total ram usage:        7 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; Hardware stack levels required when called: 4
  2632 ;; This function calls:
  2633 ;;		_I2C_2_Master_Read
  2634 ;;		_I2C_2_Master_RepStart
  2635 ;;		_I2C_2_Master_Start
  2636 ;;		_I2C_2_Master_Stop
  2637 ;;		_I2C_2_Master_Write
  2638 ;; This function is called by:
  2639 ;;		_get_color_code
  2640 ;;		_calibrate_black
  2641 ;;		_calibrate_white
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text14
  2646   000ADA                     __ptext14:
  2647                           	callstack 0
  2648   000ADA                     _color_read_Green:
  2649                           	callstack 25
  2650   000ADA                     
  2651                           ;color.c: 118:  unsigned int tmp;;color.c: 119:  I2C_2_Master_Start();
  2652   000ADA  EC9A  F006         	call	_I2C_2_Master_Start	;wreg free
  2653                           
  2654                           ;color.c: 120:  I2C_2_Master_Write(0x52 | 0x00);
  2655   000ADE  0E52               	movlw	82
  2656   000AE0  EC89  F006         	call	_I2C_2_Master_Write
  2657                           
  2658                           ;color.c: 121:  I2C_2_Master_Write(0xA0 | 0x18);
  2659   000AE4  0EB8               	movlw	184
  2660   000AE6  EC89  F006         	call	_I2C_2_Master_Write
  2661                           
  2662                           ;color.c: 122:  I2C_2_Master_RepStart();
  2663   000AEA  EC9F  F006         	call	_I2C_2_Master_RepStart	;wreg free
  2664                           
  2665                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x01);
  2666   000AEE  0E53               	movlw	83
  2667   000AF0  EC89  F006         	call	_I2C_2_Master_Write
  2668                           
  2669                           ;color.c: 124:  tmp=I2C_2_Master_Read(1);
  2670   000AF4  0E01               	movlw	1
  2671   000AF6  EC05  F006         	call	_I2C_2_Master_Read
  2672   000AFA  6E07               	movwf	??_color_read_Green^0,c
  2673   000AFC  5007               	movf	??_color_read_Green^0,w,c
  2674   000AFE  6E0A               	movwf	color_read_Green@tmp^0,c
  2675   000B00  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2676                           
  2677                           ;color.c: 125:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2678   000B02  0E00               	movlw	0
  2679   000B04  EC05  F006         	call	_I2C_2_Master_Read
  2680   000B08  6E07               	movwf	??_color_read_Green^0,c
  2681   000B0A  5007               	movf	??_color_read_Green^0,w,c
  2682   000B0C  6E09               	movwf	(??_color_read_Green+2)^0,c
  2683   000B0E  6A08               	clrf	(??_color_read_Green+1)^0,c
  2684   000B10  500A               	movf	color_read_Green@tmp^0,w,c
  2685   000B12  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2686   000B14  6E0A               	movwf	color_read_Green@tmp^0,c
  2687   000B16  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2688   000B18  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2689   000B1A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2690                           
  2691                           ;color.c: 126:  I2C_2_Master_Stop();
  2692   000B1C  EC95  F006         	call	_I2C_2_Master_Stop	;wreg free
  2693   000B20                     
  2694                           ;color.c: 127:  return tmp;
  2695   000B20  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2696   000B24  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2697   000B28  0012               	return		;funcret
  2698   000B2A                     __end_of_color_read_Green:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function _color_read_Blue *****************
  2702 ;; Defined at:
  2703 ;;		line 102 in file "color.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;		None
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  tmp             2    9[COMRAM] unsigned int 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  2    4[COMRAM] unsigned int 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;Total ram usage:        7 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 4
  2724 ;; This function calls:
  2725 ;;		_I2C_2_Master_Read
  2726 ;;		_I2C_2_Master_RepStart
  2727 ;;		_I2C_2_Master_Start
  2728 ;;		_I2C_2_Master_Stop
  2729 ;;		_I2C_2_Master_Write
  2730 ;; This function is called by:
  2731 ;;		_get_color_code
  2732 ;;		_calibrate_black
  2733 ;;		_calibrate_white
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text15
  2738   000B2A                     __ptext15:
  2739                           	callstack 0
  2740   000B2A                     _color_read_Blue:
  2741                           	callstack 25
  2742   000B2A                     
  2743                           ;color.c: 104:  unsigned int tmp;;color.c: 105:  I2C_2_Master_Start();
  2744   000B2A  EC9A  F006         	call	_I2C_2_Master_Start	;wreg free
  2745                           
  2746                           ;color.c: 106:  I2C_2_Master_Write(0x52 | 0x00);
  2747   000B2E  0E52               	movlw	82
  2748   000B30  EC89  F006         	call	_I2C_2_Master_Write
  2749                           
  2750                           ;color.c: 107:  I2C_2_Master_Write(0xA0 | 0x1A);
  2751   000B34  0EBA               	movlw	186
  2752   000B36  EC89  F006         	call	_I2C_2_Master_Write
  2753                           
  2754                           ;color.c: 108:  I2C_2_Master_RepStart();
  2755   000B3A  EC9F  F006         	call	_I2C_2_Master_RepStart	;wreg free
  2756                           
  2757                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x01);
  2758   000B3E  0E53               	movlw	83
  2759   000B40  EC89  F006         	call	_I2C_2_Master_Write
  2760                           
  2761                           ;color.c: 110:  tmp=I2C_2_Master_Read(1);
  2762   000B44  0E01               	movlw	1
  2763   000B46  EC05  F006         	call	_I2C_2_Master_Read
  2764   000B4A  6E07               	movwf	??_color_read_Blue^0,c
  2765   000B4C  5007               	movf	??_color_read_Blue^0,w,c
  2766   000B4E  6E0A               	movwf	color_read_Blue@tmp^0,c
  2767   000B50  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2768                           
  2769                           ;color.c: 111:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2770   000B52  0E00               	movlw	0
  2771   000B54  EC05  F006         	call	_I2C_2_Master_Read
  2772   000B58  6E07               	movwf	??_color_read_Blue^0,c
  2773   000B5A  5007               	movf	??_color_read_Blue^0,w,c
  2774   000B5C  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2775   000B5E  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2776   000B60  500A               	movf	color_read_Blue@tmp^0,w,c
  2777   000B62  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2778   000B64  6E0A               	movwf	color_read_Blue@tmp^0,c
  2779   000B66  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2780   000B68  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2781   000B6A  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2782                           
  2783                           ;color.c: 112:  I2C_2_Master_Stop();
  2784   000B6C  EC95  F006         	call	_I2C_2_Master_Stop	;wreg free
  2785   000B70                     
  2786                           ;color.c: 113:  return tmp;
  2787   000B70  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2788   000B74  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2789   000B78  0012               	return		;funcret
  2790   000B7A                     __end_of_color_read_Blue:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function _I2C_2_Master_Write *****************
  2794 ;; Defined at:
  2795 ;;		line 45 in file "i2c.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  data_byte       1    wreg     unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  data_byte       1    1[COMRAM] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;Total ram usage:        1 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 3
  2816 ;; This function calls:
  2817 ;;		_I2C_2_Master_Idle
  2818 ;; This function is called by:
  2819 ;;		_color_writetoaddr
  2820 ;;		_color_read_Red
  2821 ;;		_color_read_Blue
  2822 ;;		_color_read_Green
  2823 ;;		_color_read_Clear
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text16
  2828   000D12                     __ptext16:
  2829                           	callstack 0
  2830   000D12                     _I2C_2_Master_Write:
  2831                           	callstack 25
  2832                           
  2833                           ;incstack = 0
  2834                           ;I2C_2_Master_Write@data_byte stored from wreg
  2835   000D12  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2836   000D14                     
  2837                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2838   000D14  EC3B  F006         	call	_I2C_2_Master_Idle	;wreg free
  2839   000D18                     
  2840                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2841   000D18  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2842   000D1C  0012               	return		;funcret
  2843   000D1E                     __end_of_I2C_2_Master_Write:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function _I2C_2_Master_Stop *****************
  2847 ;; Defined at:
  2848 ;;		line 39 in file "i2c.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 3
  2869 ;; This function calls:
  2870 ;;		_I2C_2_Master_Idle
  2871 ;; This function is called by:
  2872 ;;		_color_writetoaddr
  2873 ;;		_color_read_Red
  2874 ;;		_color_read_Blue
  2875 ;;		_color_read_Green
  2876 ;;		_color_read_Clear
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text17
  2881   000D2A                     __ptext17:
  2882                           	callstack 0
  2883   000D2A                     _I2C_2_Master_Stop:
  2884                           	callstack 25
  2885   000D2A                     
  2886                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2887   000D2A  EC3B  F006         	call	_I2C_2_Master_Idle	;wreg free
  2888   000D2E                     
  2889                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2890   000D2E  010E               	movlb	14	; () banked
  2891   000D30  85DA               	bsf	218,2,b	;volatile
  2892   000D32                     
  2893                           ; BSR set to: 14
  2894   000D32  0012               	return		;funcret
  2895   000D34                     __end_of_I2C_2_Master_Stop:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _I2C_2_Master_Start *****************
  2899 ;; Defined at:
  2900 ;;		line 27 in file "i2c.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;Total ram usage:        0 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 3
  2921 ;; This function calls:
  2922 ;;		_I2C_2_Master_Idle
  2923 ;; This function is called by:
  2924 ;;		_color_writetoaddr
  2925 ;;		_color_read_Red
  2926 ;;		_color_read_Blue
  2927 ;;		_color_read_Green
  2928 ;;		_color_read_Clear
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text18
  2933   000D34                     __ptext18:
  2934                           	callstack 0
  2935   000D34                     _I2C_2_Master_Start:
  2936                           	callstack 25
  2937   000D34                     
  2938                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2939   000D34  EC3B  F006         	call	_I2C_2_Master_Idle	;wreg free
  2940   000D38                     
  2941                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2942   000D38  010E               	movlb	14	; () banked
  2943   000D3A  81DA               	bsf	218,0,b	;volatile
  2944   000D3C                     
  2945                           ; BSR set to: 14
  2946   000D3C  0012               	return		;funcret
  2947   000D3E                     __end_of_I2C_2_Master_Start:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _I2C_2_Master_RepStart *****************
  2951 ;; Defined at:
  2952 ;;		line 33 in file "i2c.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;Total ram usage:        0 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 3
  2973 ;; This function calls:
  2974 ;;		_I2C_2_Master_Idle
  2975 ;; This function is called by:
  2976 ;;		_color_read_Red
  2977 ;;		_color_read_Blue
  2978 ;;		_color_read_Green
  2979 ;;		_color_read_Clear
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text19
  2984   000D3E                     __ptext19:
  2985                           	callstack 0
  2986   000D3E                     _I2C_2_Master_RepStart:
  2987                           	callstack 25
  2988   000D3E                     
  2989                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2990   000D3E  EC3B  F006         	call	_I2C_2_Master_Idle	;wreg free
  2991   000D42                     
  2992                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2993   000D42  010E               	movlb	14	; () banked
  2994   000D44  83DA               	bsf	218,1,b	;volatile
  2995   000D46                     
  2996                           ; BSR set to: 14
  2997   000D46  0012               	return		;funcret
  2998   000D48                     __end_of_I2C_2_Master_RepStart:
  2999                           	callstack 0
  3000                           
  3001 ;; *************** function _I2C_2_Master_Read *****************
  3002 ;; Defined at:
  3003 ;;		line 51 in file "i2c.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  ack             1    wreg     unsigned char 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  ack             1    2[COMRAM] unsigned char 
  3008 ;;  tmp             1    3[COMRAM] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      unsigned char 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3021 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3022 ;;Total ram usage:        3 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; Hardware stack levels required when called: 3
  3025 ;; This function calls:
  3026 ;;		_I2C_2_Master_Idle
  3027 ;; This function is called by:
  3028 ;;		_color_read_Red
  3029 ;;		_color_read_Blue
  3030 ;;		_color_read_Green
  3031 ;;		_color_read_Clear
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text20
  3036   000C0A                     __ptext20:
  3037                           	callstack 0
  3038   000C0A                     _I2C_2_Master_Read:
  3039                           	callstack 25
  3040                           
  3041                           ; BSR set to: 14
  3042                           ;incstack = 0
  3043                           ;I2C_2_Master_Read@ack stored from wreg
  3044   000C0A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3045   000C0C                     
  3046                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3047   000C0C  EC3B  F006         	call	_I2C_2_Master_Idle	;wreg free
  3048   000C10                     
  3049                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3050   000C10  010E               	movlb	14	; () banked
  3051   000C12  87DA               	bsf	218,3,b	;volatile
  3052                           
  3053                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3054   000C14  EC3B  F006         	call	_I2C_2_Master_Idle	;wreg free
  3055   000C18                     
  3056                           ;i2c.c: 57:   tmp = SSP2BUF;
  3057   000C18  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3058                           
  3059                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3060   000C1C  EC3B  F006         	call	_I2C_2_Master_Idle	;wreg free
  3061   000C20                     
  3062                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3063   000C20  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3064   000C22  B4D8               	btfsc	status,2,c
  3065   000C24  EF16  F006         	goto	u901
  3066   000C28  EF1A  F006         	goto	u900
  3067   000C2C                     u901:
  3068   000C2C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3069   000C2E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3070   000C30  EF1B  F006         	goto	u918
  3071   000C34                     u900:
  3072   000C34  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3073   000C36                     u918:
  3074   000C36  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3075   000C38  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3076   000C3A  010E               	movlb	14	; () banked
  3077   000C3C  51DA               	movf	218,w,b	;volatile
  3078   000C3E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3079   000C40  0BDF               	andlw	-33
  3080   000C42  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3081   000C44  6FDA               	movwf	218,b	;volatile
  3082   000C46                     
  3083                           ; BSR set to: 14
  3084                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3085   000C46  89DA               	bsf	218,4,b	;volatile
  3086   000C48                     
  3087                           ; BSR set to: 14
  3088                           ;i2c.c: 61:   return tmp;
  3089   000C48  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3090   000C4A                     
  3091                           ; BSR set to: 14
  3092   000C4A  0012               	return		;funcret
  3093   000C4C                     __end_of_I2C_2_Master_Read:
  3094                           	callstack 0
  3095                           
  3096 ;; *************** function _I2C_2_Master_Idle *****************
  3097 ;; Defined at:
  3098 ;;		line 22 in file "i2c.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3114 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3116 ;;Total ram usage:        1 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 2
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_I2C_2_Master_Start
  3123 ;;		_I2C_2_Master_RepStart
  3124 ;;		_I2C_2_Master_Stop
  3125 ;;		_I2C_2_Master_Write
  3126 ;;		_I2C_2_Master_Read
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text21
  3131   000C76                     __ptext21:
  3132                           	callstack 0
  3133   000C76                     _I2C_2_Master_Idle:
  3134                           	callstack 25
  3135   000C76                     l266:
  3136   000C76  010E               	movlb	14	; () banked
  3137   000C78  B5D8               	btfsc	216,2,b	;volatile
  3138   000C7A  EF41  F006         	goto	u881
  3139   000C7E  EF43  F006         	goto	u880
  3140   000C82                     u881:
  3141   000C82  EF3B  F006         	goto	l266
  3142   000C86                     u880:
  3143   000C86                     
  3144                           ; BSR set to: 14
  3145   000C86  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3146   000C8A  0E1F               	movlw	31
  3147   000C8C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3148   000C8E  A4D8               	btfss	status,2,c
  3149   000C90  EF4C  F006         	goto	u891
  3150   000C94  EF4E  F006         	goto	u890
  3151   000C98                     u891:
  3152   000C98  EF3B  F006         	goto	l266
  3153   000C9C                     u890:
  3154   000C9C                     
  3155                           ; BSR set to: 14
  3156   000C9C  0012               	return		;funcret
  3157   000C9E                     __end_of_I2C_2_Master_Idle:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _I2C_2_Master_Init *****************
  3161 ;; Defined at:
  3162 ;;		line 4 in file "i2c.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3180 ;;Total ram usage:        0 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 2
  3183 ;; This function calls:
  3184 ;;		Nothing
  3185 ;; This function is called by:
  3186 ;;		_color_click_init
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text22
  3191   000C4C                     __ptext22:
  3192                           	callstack 0
  3193   000C4C                     _I2C_2_Master_Init:
  3194                           	callstack 27
  3195   000C4C                     
  3196                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3197   000C4C  010E               	movlb	14	; () banked
  3198   000C4E  51D9               	movf	217,w,b	;volatile
  3199   000C50  0BF0               	andlw	-16
  3200   000C52  0908               	iorlw	8
  3201   000C54  6FD9               	movwf	217,b	;volatile
  3202   000C56                     
  3203                           ; BSR set to: 14
  3204                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3205   000C56  8BD9               	bsf	217,5,b	;volatile
  3206                           
  3207                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3208   000C58  0E9F               	movlw	159
  3209   000C5A  6FD6               	movwf	214,b	;volatile
  3210   000C5C                     
  3211                           ; BSR set to: 14
  3212                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3213   000C5C  8A84               	bsf	132,5,c	;volatile
  3214   000C5E                     
  3215                           ; BSR set to: 14
  3216                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3217   000C5E  8C84               	bsf	132,6,c	;volatile
  3218   000C60                     
  3219                           ; BSR set to: 14
  3220                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3221   000C60  9BA7               	bcf	167,5,b	;volatile
  3222   000C62                     
  3223                           ; BSR set to: 14
  3224                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3225   000C62  9DA7               	bcf	167,6,b	;volatile
  3226                           
  3227                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3228   000C64  0E1D               	movlw	29
  3229   000C66  6F1D               	movwf	29,b	;volatile
  3230                           
  3231                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3232   000C68  0E1E               	movlw	30
  3233   000C6A  6F1C               	movwf	28,b	;volatile
  3234                           
  3235                           ;i2c.c: 18:   RD5PPS=0x1C;
  3236   000C6C  0E1C               	movlw	28
  3237   000C6E  6F6F               	movwf	111,b	;volatile
  3238                           
  3239                           ;i2c.c: 19:   RD6PPS=0x1B;
  3240   000C70  0E1B               	movlw	27
  3241   000C72  6F70               	movwf	112,b	;volatile
  3242   000C74                     
  3243                           ; BSR set to: 14
  3244   000C74  0012               	return		;funcret
  3245   000C76                     __end_of_I2C_2_Master_Init:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function _Timer0_init *****************
  3249 ;; Defined at:
  3250 ;;		line 7 in file "timers.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3268 ;;Total ram usage:        0 bytes
  3269 ;; Hardware stack levels used: 1
  3270 ;; Hardware stack levels required when called: 2
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_main
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text23
  3279   000CE4                     __ptext23:
  3280                           	callstack 0
  3281   000CE4                     _Timer0_init:
  3282                           	callstack 28
  3283   000CE4                     
  3284                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3285   000CE4  50D6               	movf	214,w,c	;volatile
  3286   000CE6  0B1F               	andlw	-225
  3287   000CE8  0940               	iorlw	64
  3288   000CEA  6ED6               	movwf	214,c	;volatile
  3289   000CEC                     
  3290                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3291   000CEC  88D6               	bsf	214,4,c	;volatile
  3292                           
  3293                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  3294   000CEE  50D6               	movf	214,w,c	;volatile
  3295   000CF0  0BF0               	andlw	-16
  3296   000CF2  0908               	iorlw	8
  3297   000CF4  6ED6               	movwf	214,c	;volatile
  3298                           
  3299                           ;timers.c: 12:     TMR0H=0b11100111;
  3300   000CF6  0EE7               	movlw	231
  3301   000CF8  6ED4               	movwf	212,c	;volatile
  3302                           
  3303                           ;timers.c: 13:     TMR0L=0b10010101;
  3304   000CFA  0E95               	movlw	149
  3305   000CFC  6ED3               	movwf	211,c	;volatile
  3306   000CFE                     
  3307                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  3308   000CFE  88D5               	bsf	213,4,c	;volatile
  3309   000D00                     
  3310                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  3311   000D00  8ED5               	bsf	213,7,c	;volatile
  3312   000D02  0012               	return		;funcret
  3313   000D04                     __end_of_Timer0_init:
  3314                           	callstack 0
  3315                           
  3316 ;; *************** function _Interrupts_init *****************
  3317 ;; Defined at:
  3318 ;;		line 10 in file "interrupts.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		None
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3336 ;;Total ram usage:        0 bytes
  3337 ;; Hardware stack levels used: 1
  3338 ;; Hardware stack levels required when called: 2
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_main
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	text24
  3347   000D1E                     __ptext24:
  3348                           	callstack 0
  3349   000D1E                     _Interrupts_init:
  3350                           	callstack 28
  3351   000D1E                     
  3352                           ;interrupts.c: 12:     INTCONbits.PEIE = 1;
  3353   000D1E  8CF2               	bsf	242,6,c	;volatile
  3354                           
  3355                           ;interrupts.c: 13:     PIE0bits.TMR0IE = 1;
  3356   000D20  010E               	movlb	14	; () banked
  3357   000D22  8B29               	bsf	41,5,b	;volatile
  3358                           
  3359                           ;interrupts.c: 14:     PIE2bits.C1IE = 1;
  3360   000D24  812B               	bsf	43,0,b	;volatile
  3361                           
  3362                           ;interrupts.c: 15:     INTCONbits.GIE = 1;
  3363   000D26  8EF2               	bsf	242,7,c	;volatile
  3364   000D28                     
  3365                           ; BSR set to: 14
  3366   000D28  0012               	return		;funcret
  3367   000D2A                     __end_of_Interrupts_init:
  3368                           	callstack 0
  3369                           
  3370 ;; *************** function _HighISR *****************
  3371 ;; Defined at:
  3372 ;;		line 22 in file "interrupts.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 1
  3393 ;; This function calls:
  3394 ;;		_increment_seconds
  3395 ;; This function is called by:
  3396 ;;		Interrupt level 2
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	intcode
  3401   000008                     __pintcode:
  3402                           	callstack 0
  3403   000008                     _HighISR:
  3404                           	callstack 24
  3405                           
  3406                           ; BSR set to: 14
  3407                           ;incstack = 0
  3408   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3409   00000A                     
  3410                           ;interrupts.c: 24:     if(PIR0bits.TMR0IF == 1){
  3411   00000A  010E               	movlb	14	; () banked
  3412   00000C  AB33               	btfss	51,5,b	;volatile
  3413   00000E  EF0B  F000         	goto	i2u50_41
  3414   000012  EF0D  F000         	goto	i2u50_40
  3415   000016                     i2u50_41:
  3416   000016  EF15  F000         	goto	i2l307
  3417   00001A                     i2u50_40:
  3418   00001A                     
  3419                           ; BSR set to: 14
  3420                           ;interrupts.c: 25:     increment_seconds();
  3421   00001A  ECA4  F006         	call	_increment_seconds	;wreg free
  3422   00001E                     
  3423                           ;interrupts.c: 27:     TMR0H=0b11100111;
  3424   00001E  0EE7               	movlw	231
  3425   000020  6ED4               	movwf	212,c	;volatile
  3426   000022                     
  3427                           ;interrupts.c: 28:     TMR0L=0b10010101;
  3428   000022  0E95               	movlw	149
  3429   000024  6ED3               	movwf	211,c	;volatile
  3430   000026                     
  3431                           ;interrupts.c: 30:     PIR0bits.TMR0IF = 0;
  3432   000026  010E               	movlb	14	; () banked
  3433   000028  9B33               	bcf	51,5,b	;volatile
  3434   00002A                     i2l307:
  3435                           
  3436                           ; BSR set to: 14
  3437   00002A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3438   00002C  0011               	retfie		f
  3439   00002E                     __end_of_HighISR:
  3440                           	callstack 0
  3441                           
  3442 ;; *************** function _increment_seconds *****************
  3443 ;; Defined at:
  3444 ;;		line 220 in file "dc_motor.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;		None
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		status,2, status,0
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3462 ;;Total ram usage:        0 bytes
  3463 ;; Hardware stack levels used: 1
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_HighISR
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text26
  3472   000D48                     __ptext26:
  3473                           	callstack 0
  3474   000D48                     _increment_seconds:
  3475                           	callstack 24
  3476   000D48                     
  3477                           ;dc_motor.c: 222:     seconds += 1;
  3478   000D48  4A49               	infsnz	_seconds^0,f,c
  3479   000D4A  2A4A               	incf	(_seconds+1)^0,f,c
  3480   000D4C  0012               	return		;funcret
  3481   000D4E                     __end_of_increment_seconds:
  3482                           	callstack 0
  3483   000000                     
  3484                           	psect	rparam
  3485   000000                     
  3486                           	psect	temp
  3487   000059                     btemp:
  3488                           	callstack 0
  3489   000059                     	ds	1
  3490   000000                     int$flags	set	btemp
  3491   000000                     wtemp8	set	btemp+1
  3492   000000                     ttemp5	set	btemp+1
  3493   000000                     ttemp6	set	btemp+4
  3494   000000                     ttemp7	set	btemp+8
  3495                           
  3496                           	psect	idloc
  3497                           
  3498                           ;Config register IDLOC0 @ 0x200000
  3499                           ;	unspecified, using default values
  3500   200000                     	org	2097152
  3501   200000  0FFF               	dw	4095
  3502                           
  3503                           ;Config register IDLOC1 @ 0x200002
  3504                           ;	unspecified, using default values
  3505   200002                     	org	2097154
  3506   200002  0FFF               	dw	4095
  3507                           
  3508                           ;Config register IDLOC2 @ 0x200004
  3509                           ;	unspecified, using default values
  3510   200004                     	org	2097156
  3511   200004  0FFF               	dw	4095
  3512                           
  3513                           ;Config register IDLOC3 @ 0x200006
  3514                           ;	unspecified, using default values
  3515   200006                     	org	2097158
  3516   200006  0FFF               	dw	4095
  3517                           
  3518                           ;Config register IDLOC4 @ 0x200008
  3519                           ;	unspecified, using default values
  3520   200008                     	org	2097160
  3521   200008  0FFF               	dw	4095
  3522                           
  3523                           ;Config register IDLOC5 @ 0x20000A
  3524                           ;	unspecified, using default values
  3525   20000A                     	org	2097162
  3526   20000A  0FFF               	dw	4095
  3527                           
  3528                           ;Config register IDLOC6 @ 0x20000C
  3529                           ;	unspecified, using default values
  3530   20000C                     	org	2097164
  3531   20000C  0FFF               	dw	4095
  3532                           
  3533                           ;Config register IDLOC7 @ 0x20000E
  3534                           ;	unspecified, using default values
  3535   20000E                     	org	2097166
  3536   20000E  0FFF               	dw	4095
  3537                           
  3538                           	psect	config
  3539                           
  3540                           ;Config register CONFIG1L @ 0x300000
  3541                           ;	External Oscillator mode Selection bits
  3542                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3543                           ;	Power-up default value for COSC bits
  3544                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3545   300000                     	org	3145728
  3546   300000  AA                 	db	170
  3547                           
  3548                           ;Config register CONFIG1H @ 0x300001
  3549                           ;	unspecified, using default values
  3550                           ;	Clock Out Enable bit
  3551                           ;	CLKOUTEN = 0x1, unprogrammed default
  3552                           ;	Clock Switch Enable bit
  3553                           ;	CSWEN = 0x1, unprogrammed default
  3554                           ;	Fail-Safe Clock Monitor Enable bit
  3555                           ;	FCMEN = 0x1, unprogrammed default
  3556   300001                     	org	3145729
  3557   300001  FF                 	db	255
  3558                           
  3559                           ;Config register CONFIG2L @ 0x300002
  3560                           ;	unspecified, using default values
  3561                           ;	Master Clear Enable bit
  3562                           ;	MCLRE = 0x1, unprogrammed default
  3563                           ;	Power-up Timer Enable bit
  3564                           ;	PWRTE = 0x1, unprogrammed default
  3565                           ;	Low-power BOR enable bit
  3566                           ;	LPBOREN = 0x1, unprogrammed default
  3567                           ;	Brown-out Reset Enable bits
  3568                           ;	BOREN = 0x3, unprogrammed default
  3569   300002                     	org	3145730
  3570   300002  FF                 	db	255
  3571                           
  3572                           ;Config register CONFIG2H @ 0x300003
  3573                           ;	unspecified, using default values
  3574                           ;	Brown Out Reset Voltage selection bits
  3575                           ;	BORV = 0x3, unprogrammed default
  3576                           ;	ZCD Disable bit
  3577                           ;	ZCD = 0x1, unprogrammed default
  3578                           ;	PPSLOCK bit One-Way Set Enable bit
  3579                           ;	PPS1WAY = 0x1, unprogrammed default
  3580                           ;	Stack Full/Underflow Reset Enable bit
  3581                           ;	STVREN = 0x1, unprogrammed default
  3582                           ;	Debugger Enable bit
  3583                           ;	DEBUG = 0x1, unprogrammed default
  3584                           ;	Extended Instruction Set Enable bit
  3585                           ;	XINST = 0x1, unprogrammed default
  3586   300003                     	org	3145731
  3587   300003  FF                 	db	255
  3588                           
  3589                           ;Config register CONFIG3L @ 0x300004
  3590                           ;	WDT Period Select bits
  3591                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3592                           ;	WDT operating mode
  3593                           ;	WDTE = OFF, WDT Disabled
  3594   300004                     	org	3145732
  3595   300004  9F                 	db	159
  3596                           
  3597                           ;Config register CONFIG3H @ 0x300005
  3598                           ;	unspecified, using default values
  3599                           ;	WDT Window Select bits
  3600                           ;	WDTCWS = 0x7, unprogrammed default
  3601                           ;	WDT input clock selector
  3602                           ;	WDTCCS = 0x7, unprogrammed default
  3603   300005                     	org	3145733
  3604   300005  FF                 	db	255
  3605                           
  3606                           ;Config register CONFIG4L @ 0x300006
  3607                           ;	unspecified, using default values
  3608                           ;	Write Protection Block 0
  3609                           ;	WRT0 = 0x1, unprogrammed default
  3610                           ;	Write Protection Block 1
  3611                           ;	WRT1 = 0x1, unprogrammed default
  3612                           ;	Write Protection Block 2
  3613                           ;	WRT2 = 0x1, unprogrammed default
  3614                           ;	Write Protection Block 3
  3615                           ;	WRT3 = 0x1, unprogrammed default
  3616                           ;	Write Protection Block 3
  3617                           ;	WRT4 = 0x1, unprogrammed default
  3618                           ;	Write Protection Block 3
  3619                           ;	WRT5 = 0x1, unprogrammed default
  3620                           ;	Write Protection Block 3
  3621                           ;	WRT6 = 0x1, unprogrammed default
  3622                           ;	Write Protection Block 3
  3623                           ;	WRT7 = 0x1, unprogrammed default
  3624   300006                     	org	3145734
  3625   300006  FF                 	db	255
  3626                           
  3627                           ;Config register CONFIG4H @ 0x300007
  3628                           ;	unspecified, using default values
  3629                           ;	Configuration Register Write Protection bit
  3630                           ;	WRTC = 0x1, unprogrammed default
  3631                           ;	Boot Block Write Protection bit
  3632                           ;	WRTB = 0x1, unprogrammed default
  3633                           ;	Data EEPROM Write Protection bit
  3634                           ;	WRTD = 0x1, unprogrammed default
  3635                           ;	Scanner Enable bit
  3636                           ;	SCANE = 0x1, unprogrammed default
  3637                           ;	Low Voltage Programming Enable bit
  3638                           ;	LVP = 0x1, unprogrammed default
  3639   300007                     	org	3145735
  3640   300007  FF                 	db	255
  3641                           
  3642                           ;Config register CONFIG5L @ 0x300008
  3643                           ;	unspecified, using default values
  3644                           ;	UserNVM Program Memory Code Protection bit
  3645                           ;	CP = 0x1, unprogrammed default
  3646                           ;	DataNVM Memory Code Protection bit
  3647                           ;	CPD = 0x1, unprogrammed default
  3648   300008                     	org	3145736
  3649   300008  FF                 	db	255
  3650                           
  3651                           ;Config register CONFIG5H @ 0x300009
  3652                           ;	unspecified, using default values
  3653   300009                     	org	3145737
  3654   300009  FF                 	db	255
  3655                           
  3656                           ;Config register CONFIG6L @ 0x30000A
  3657                           ;	unspecified, using default values
  3658                           ;	Table Read Protection Block 0
  3659                           ;	EBTR0 = 0x1, unprogrammed default
  3660                           ;	Table Read Protection Block 1
  3661                           ;	EBTR1 = 0x1, unprogrammed default
  3662                           ;	Table Read Protection Block 2
  3663                           ;	EBTR2 = 0x1, unprogrammed default
  3664                           ;	Table Read Protection Block 3
  3665                           ;	EBTR3 = 0x1, unprogrammed default
  3666                           ;	Table Read Protection Block 4
  3667                           ;	EBTR4 = 0x1, unprogrammed default
  3668                           ;	Table Read Protection Block 5
  3669                           ;	EBTR5 = 0x1, unprogrammed default
  3670                           ;	Table Read Protection Block 6
  3671                           ;	EBTR6 = 0x1, unprogrammed default
  3672                           ;	Table Read Protection Block 7
  3673                           ;	EBTR7 = 0x1, unprogrammed default
  3674   30000A                     	org	3145738
  3675   30000A  FF                 	db	255
  3676                           
  3677                           ;Config register CONFIG6H @ 0x30000B
  3678                           ;	unspecified, using default values
  3679                           ;	Boot Block Table Read Protection bit
  3680                           ;	EBTRB = 0x1, unprogrammed default
  3681   30000B                     	org	3145739
  3682   30000B  FF                 	db	255
  3683                           tosu	equ	0xFFF
  3684                           tosh	equ	0xFFE
  3685                           tosl	equ	0xFFD
  3686                           stkptr	equ	0xFFC
  3687                           pclatu	equ	0xFFB
  3688                           pclath	equ	0xFFA
  3689                           pcl	equ	0xFF9
  3690                           tblptru	equ	0xFF8
  3691                           tblptrh	equ	0xFF7
  3692                           tblptrl	equ	0xFF6
  3693                           tablat	equ	0xFF5
  3694                           prodh	equ	0xFF4
  3695                           prodl	equ	0xFF3
  3696                           indf0	equ	0xFEF
  3697                           postinc0	equ	0xFEE
  3698                           postdec0	equ	0xFED
  3699                           preinc0	equ	0xFEC
  3700                           plusw0	equ	0xFEB
  3701                           fsr0h	equ	0xFEA
  3702                           fsr0l	equ	0xFE9
  3703                           wreg	equ	0xFE8
  3704                           indf1	equ	0xFE7
  3705                           postinc1	equ	0xFE6
  3706                           postdec1	equ	0xFE5
  3707                           preinc1	equ	0xFE4
  3708                           plusw1	equ	0xFE3
  3709                           fsr1h	equ	0xFE2
  3710                           fsr1l	equ	0xFE1
  3711                           bsr	equ	0xFE0
  3712                           indf2	equ	0xFDF
  3713                           postinc2	equ	0xFDE
  3714                           postdec2	equ	0xFDD
  3715                           preinc2	equ	0xFDC
  3716                           plusw2	equ	0xFDB
  3717                           fsr2h	equ	0xFDA
  3718                           fsr2l	equ	0xFD9
  3719                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        122
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      88
    BANK0           160     44     152
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    TimedfullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    TimedfullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    TimedfullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    TimedfullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1012DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1012DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_get_color_code
    _get_wall_presence->_color_read_Clear
    _color_read_Clear->_I2C_2_Master_Read
    _get_color_code->_get_color_distance
    _get_color_distance->___wmul
    ___lldiv->___lmul
    _color_click_init->_calibrate_black
    _color_click_init->_calibrate_white
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _calibrate_black->_color_read_Blue
    _calibrate_black->_color_read_Green
    _calibrate_black->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_get_color_code

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   11043
                                             56 COMRAM     4     4      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                     _get_color_code
                  _get_wall_presence
 ---------------------------------------------------------------------------------
 (1) _get_wall_presence                                    8     6      2    1365
                                             11 COMRAM     8     6      2
                   _color_read_Clear
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_color_code                                      48    46      2    6269
                                             52 COMRAM     4     2      2
                                              0 BANK0     44    44      0
                            ___lldiv
                             ___lmul
                             ___wmul
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                 _get_color_distance
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _get_color_distance                                  46    22     24    1990
                                              6 COMRAM    46    22     24
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1071
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    3384
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Init
                    _calibrate_black
                    _calibrate_white
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      2     2      0    1545
                                             11 COMRAM     2     2      0
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _calibrate_black                                      2     2      0    1545
                                             11 COMRAM     2     2      0
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                      _set_led_color
 ---------------------------------------------------------------------------------
 (2) _set_led_color                                        2     0      2    1206
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0       0
                  _increment_seconds
 ---------------------------------------------------------------------------------
 (7) _increment_seconds                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _calibrate_black
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _set_led_color
     _calibrate_white
       _color_read_Blue
       _color_read_Green
       _color_read_Red
       _set_led_color
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _get_color_code
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___wmul
     _color_read_Blue
     _color_read_Green
     _color_read_Red
     _get_color_distance
       ___wmul
     _set_led_color
   _get_wall_presence
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _set_led_color

 _HighISR (ROOT)
   _increment_seconds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      58       1       93.6%
BITBIGSFRllhllh     52      0       0      43        0.0%
BITBIGSFRllhlll     46      0       0      45        0.0%
BITBIGSFRlllllh     35      0       0      54        0.0%
BITBIGSFRllllll     2D      0       0      58        0.0%
BITBIGSFRllhlll     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhlhh     1B      0       0      33        0.0%
BITBIGSFRhhlll      17      0       0      38        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllllh      7      0       0      55        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhl          5      0       0      39        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRllhlll      2      0       0      44        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      56        0.0%
BITBIGSFRllhlll      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllhlhh      1      0       0      41        0.0%
BITBIGSFRllhlhl      1      0       0      42        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     168      59        0.0%
DATA                 0      0     168       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 01 13:46:28 2022

               _color_read_Red 0A8A                _color_read_Blue 0B2A                             l71 066C  
                           l80 0CE2                             l72 064C                             l65 061A  
                           l83 0AD8                             l75 065E                             l92 0A88  
                           l69 0636                             l86 0B78                             l89 0B28  
          ___wmul@multiplicand 0003               _color_read_Clear 0A3A               ?_calibrate_black 0001  
             _color_read_Green 0ADA              ??_Interrupts_init 0001                            l110 0BDA  
                          l111 0BDC                            l112 0BF0                            l113 0BF2  
                          l114 0C06                            l107 0534                            l116 0C08  
                          l301 0D28                            l142 0716                            l134 03C0  
                          l136 03C8                            l145 0900                            l139 085E  
                          l342 0D02                            l263 0C74                            l327 0BBC  
                          l272 0D3C                            l281 0D1C                            l345 0CC2  
                          l266 0C76                            l275 0D46                            l284 0C4A  
                          l372 07AA                            l356 09C6                            l269 0C9C  
                          l357 09D6                            l278 0D32                            l379 07BA  
                          _RGB 003D                            u900 0C34                            u901 0C2C  
                          u920 0BD4                            u921 0BD0                            u930 0BEA  
                          u931 0BE6                            u940 0C00                            u941 0BFC  
                          u918 0C36                            u950 03E8                            u951 03E4  
                          u880 0C86                            u960 0442                            u881 0C82  
                          u961 043E                            u890 0C9C                            u970 049C  
                          u891 0C98                            u971 0498                            u980 098C  
                          u981 0988                            u990 09C6                            u991 09C2  
             ?_calibrate_white 0001                            wreg 000FE8                           l2000 08BC  
                         l2002 08C8                           l2020 0D1E                           l2022 0CE4  
                         l2110 0B82                           l2024 0CEC                           l2120 0BA8  
                         l2112 0B86                           l2026 0CFE                           l2122 0BB4  
                         l2114 0B88                           l2106 0B7A                           l2028 0D00  
                         l2116 0B94                           l2108 0B7E                           l2118 0BA6  
                         l1700 0C86                           l1702 0D34                           l1710 0D2A  
                         l1720 0C10                           l1704 0D38                           l1712 0D2E  
                         l1800 07DE                           l1722 0C18                           l1714 0D3E  
                         l1706 0D14                           l1810 0842                           l1802 07EE  
                         l1724 0C20                           l1716 0D42                           l1708 0D18  
                         l1740 0B70                           l1732 0A8A                           l1812 0852  
                         l1804 07FA                           l1900 05B6                           l1820 03CA  
                         l1726 0C46                           l1718 0C0C                           l1734 0AD0  
                         l1750 0BC6                           l1806 0820                           l1910 0610  
                         l1902 05C8                           l1830 045E                           l1822 03E8  
                         l1814 0A3A                           l1728 0C48                           l1744 0ADA  
                         l1752 0BD4                           l1808 082C                           l1912 0612  
                         l1904 05DA                           l1760 0CBA                           l1840 04D8  
                         l1832 0476                           l1824 0404                           l1816 0A80  
                         l1770 0C5E                           l1738 0B2A                           l1746 0B20  
                         l1754 0BEA                           l1922 0648                           l1914 0616  
                         l1906 05EC                           l1850 099C                           l1834 049C  
                         l1826 041C                           l1930 0054                           l1772 0C60  
                         l1764 0C4C                           l1756 0C00                           l1780 067A  
                         l1924 065A                           l1916 0618                           l1908 05FE  
                         l1860 0746                           l1852 09A6                           l1844 096E  
                         l1836 04B8                           l1828 0442                           l1940 00B8  
                         l1932 0064                           l1774 0C62                           l1766 0C56  
                         l1790 06E2                           l1782 0690                           l1918 0628  
                         l1870 0798                           l1862 0752                           l1854 0718  
                         l1846 097E                           l1758 0C9E                           l1838 04D0  
                         l1950 0172                           l1942 00C8                           l1934 0070  
                         l1926 0032                           l1768 0C5C                           l1792 06F8  
                         l1784 06A2                           l1776 0CC6                           l1880 0544  
                         l1872 079A                           l1864 0760                           l1856 0728  
                         l1848 098C                           l1960 0230                           l1952 0182  
                         l1944 00D4                           l1936 0096                           l1928 003E  
                         l1698 0C76                           l1794 070A                           l1786 06AE  
                         l1778 066E                           l1890 056C                           l1882 0554  
                         l1874 07A4                           l1866 076A                           l1858 073E  
                         l1970 030E                           l1962 024E                           l1954 01A0  
                         l1946 00F2                           l1938 00A2                           l1796 07BC  
                         l1788 06D6                           l1892 056E                           l1884 055E  
                         l1876 0536                           l1868 0788                           l1980 034E  
                         l1972 0318                           l1964 0264                           l1956 01B6  
                         l1948 0108                           l1798 07C8                           l1894 0580  
                         l1886 0568                           l1878 053A                           l1982 037E  
                         l1966 02CE                           l1958 0220                           l1990 0860  
                         l1896 0592                           l1888 056A                           l1984 0396  
                         l1968 02DE                           l1992 086C                           l1898 05A4  
                         l1986 03A6                           l1978 0320                           l1994 0882  
                         l1988 03AA                           l1996 088E                           l1998 089A  
                         u1000 073E                           u1001 073A                           u1010 0760  
                         u1011 075C                           u1020 0788                           u1101 05F6  
                         u1021 0784                           u1111 0608                           u1031 0578  
                         u1120 0628                           u1121 0624                           u1041 058A  
                         u1201 02E8                           u1130 0636                           u1131 0632  
                         u1051 059C                           u1211 02FA                           u1140 0644  
                         u1141 0640                           u1061 05AE                           u1221 0346  
                         u1150 065A                           u1151 0656                           u1071 05C0  
                         u1231 0358                           u1160 066C                           u1161 0668  
                         u1081 05D2                           u1241 036A                           u1250 0396  
                         u1170 00F2                           u1091 05E4                           u1251 0392  
                         u1171 00EE                           u1260 03C0                           u1180 01A0  
                         u1261 03BC                           u1181 019C                           u1190 024E  
                         u1270 08FA                           u1191 024A                           u1271 08F4  
                         u1280 08FC                           u1370 0BA6                           u1371 0BA2  
                         _T2PR 000FBC                     _Black_rule 016C                           u1807 0684  
                         u1817 06B8                           u1827 06EC                           u1747 0876  
                         u1837 07D2                           u1757 08A4                           u1847 0804  
                         u1767 0048                           u1857 0836                           u1777 007A  
                         u1787 00AC                           u1797 054A                           _main 0B7A  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 0059  
                         prodh 000FF4                           prodl 000FF3                           start 002E  
       __end_of_color_read_Red 0ADA                __end_of_HighISR 002E                   ___param_bank 000000  
           _get_color_code$457 00D8             _get_color_code$458 00DC             _get_color_code$459 00E0  
                        ?_main 0001                __end_of___lldiv 07BC                    _Black_setup 004B  
                        i2l307 002A                          i2l236 0D4C                          _TMR0H 000FD4  
                        _TMR0L 000FD3            ___lmul@multiplicand 0005     __end_of_I2C_2_Master_Start 0D3E  
   __end_of_I2C_2_Master_Write 0D1E             _get_color_distance 03CA                          tablat 000FF5  
                        plusw0 000FEB                          plusw1 000FE3                          plusw2 000FDB  
          ?_get_color_distance 0007                          ttemp5 005A                          ttemp6 005D  
                        ttemp7 0061                          status 000FD8                          wtemp8 005A  
                   _Green_rule 00B4        __end_of_color_read_Blue 0B7A          _I2C_2_Master_RepStart 0D3E  
              ?_color_read_Red 0005                __initialization 09D8                   __end_of_main 0BC6  
         ??_get_color_distance 001F                         ??_main 0039                  __activetblptr 000000  
          _get_color_code$2366 00CC                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RD6PPS 000E70  
                       _RE4PPS 000E76                         i2l1340 0D48                         i2l1450 000A  
                       i2l1452 001A                         i2l1454 001E                         i2l1456 0022  
                       i2l1458 0026                         _RG6PPS 000E88                      ??_HighISR 0001  
     __end_of_color_click_init 066E               ??_get_color_code 0037                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                         ___lmul 096E       get_color_distance@color1 0007  
     get_color_distance@color2 0013                         ___wmul 0C9E                      ??___lldiv 0015  
                  _Color_rules 0100                         clear_0 0A1E                         clear_1 0A2A  
                       isa$std 000001                   __pdataCOMRAM 004B                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                 _Lightblue_rule 0078  
                   _White_rule 006C          __end_of_set_led_color 0C0A                     __accesstop 0060  
      __end_of__initialization 0A30       __end_of_color_read_Clear 0A8A        get_wall_presence@clear1 0010  
      get_wall_presence@clear2 0012       __end_of_color_read_Green 0B2A         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0005                _Interrupts_init 0D1E  
               __pcstackCOMRAM 0001                   __pidataBANK0 0902            __end_of_Timer0_init 0D04  
                   __pbssBANK1 0100              _color_writetoaddr 0CC4                   _T2CLKCONbits 000FBF  
           ?_color_writetoaddr 0003                        ?___lmul 0001                        ?___wmul 0001  
               main@color_code 0039                 ___lmul@product 0009                get_color_code@i 00EA  
          ??_color_writetoaddr 0004                        i2u50_40 001A                        i2u50_41 0016  
      get_color_code@min_index 00E6                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
      get_color_code@min_value 00E4              _get_wall_presence 0860                    _Orange_rule 0084  
           ?_get_wall_presence 000C        __end_of_Interrupts_init 0D2A         color_writetoaddr@value 0003  
             ??_color_read_Red 0007                        _HighISR 0008      __end_of_color_writetoaddr 0CE4  
           _I2C_2_Master_Start 0D34             _I2C_2_Master_Write 0D12                        __Hparam 0000  
          ??_get_wall_presence 000E                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 0CE4                        ___lldiv 0718            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                        __pcinit 09D8                        __ramtop 0E00  
                      __ptext0 0B7A                        __ptext1 0860                        __ptext2 0A3A  
                      __ptext3 0032                        __ptext4 03CA                        __ptext5 0C9E  
                      __ptext6 096E                        __ptext7 0718                        __ptext8 0536  
                      __ptext9 0CC4                      _T2CONbits 000FBD                        _seconds 0049  
                    _T2HLTbits 000FBE      __end_of_get_wall_presence 0902           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 0A30              ?_color_click_init 0001  
              ___lldiv@divisor 0011             ??_color_click_init 000E                ___lldiv@counter 0019  
                      postdec1 000FE5                        postinc0 000FEE                    _White_setup 0060  
                    _PORTFbits 000F8E                    _Yellow_rule 009C                      _TRISAbits 000F81  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
     color_writetoaddr@address 0004     get_color_distance@B_offset 0033        ??_I2C_2_Master_RepStart 0002  
             ?_Interrupts_init 0001                    _CCP1CONbits 000FAB     get_color_distance@G_offset 0031  
            _increment_seconds 0D48              ?_color_read_Clear 0005                    _CCP2CONbits 000FA7  
            ??_calibrate_black 000C              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  _CCP4CONbits 000F22              ??_calibrate_white 000C             ?_increment_seconds 0001  
           ??_color_read_Clear 0007             ??_color_read_Green 0007     get_color_distance@R_offset 002F  
                    _Blue_rule 00A8            ??_increment_seconds 0001                 __end_of___lmul 09D8  
               __end_of___wmul 0CC4                  __pidataCOMRAM 0D04              main@wall_presence 003B  
          color_read_Clear@tmp 000A            start_initialization 09D8      __end_of_increment_seconds 0D4E  
                    _Pink_rule 0090            color_read_Green@tmp 000A                       ??___lmul 0009  
                     ??___wmul 0005                    __pdataBANK0 0060         _get_color_distance$420 002B  
       _get_color_distance$416 0023         _get_color_distance$418 0027                    __pbssCOMRAM 003D  
                __pcstackBANK0 00CC            get_color_code@value 00E8                       ?_HighISR 0001  
                 ?_Timer0_init 0001                      __pintcode 0008                       ?___lldiv 000D  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004    get_color_code@NormalizedRGB 00EC  
            _I2C_2_Master_Idle 0C76              _I2C_2_Master_Init 0C4C              _I2C_2_Master_Read 0C0A  
            _I2C_2_Master_Stop 0D2A             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79                  _set_led_color 0BC6            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 000F7B                       _LATEbits 000F7D                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _LATHbits 000F80                       _PIE0bits 000E29  
                     _PIE2bits 000E2B                       _PIR0bits 000E33                      _wait_time 0057  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8             set_led_color@color 0001  
    __end_of_I2C_2_Master_Idle 0C9E      __end_of_I2C_2_Master_Init 0C76      __end_of_I2C_2_Master_Read 0C4C  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 0D34    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007                _calibrate_black 07BC                _calibrate_white 066E  
            ___lmul@multiplier 0001                      copy_data0 09EC                      copy_data1 0A0C  
               ?_set_led_color 0001  __end_of_I2C_2_Master_RepStart 0D48             color_read_Blue@tmp 000A  
                     _Red_rule 00C0                       __Hrparam 0000                       __Lrparam 0000  
   __end_of_get_color_distance 0536                 _get_color_code 0032                     _ANSELDbits 000EA7  
                   _ANSELFbits 000EB4                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                     __ptext10 066E                       __ptext11 07BC                       __ptext20 0C0A  
                     __ptext12 0BC6                       __ptext21 0C76                       __ptext13 0A8A  
                     __ptext22 0C4C                       __ptext14 0ADA                       __ptext23 0CE4  
                     __ptext15 0B2A                       __ptext24 0D1E                       __ptext16 0D12  
                     __ptext17 0D2A                       __ptext26 0D48                       __ptext18 0D34  
                     __ptext19 0D3E                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     isa$xinst 000000                       int$flags 0059         __end_of_get_color_code 03CA  
      __end_of_calibrate_black 0860        __end_of_calibrate_white 0718                     _INTCONbits 000FF2  
              ??_set_led_color 0003                       intlevel2 0000               ___lldiv@dividend 000D  
              ?_get_color_code 0035               _color_click_init 0536                     _SSP2DATPPS 000E1D  
             ___lldiv@quotient 0015                     _SSP2CLKPPS 000E1C  
